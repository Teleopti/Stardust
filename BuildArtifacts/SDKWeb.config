<?xml version="1.0"?>
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
 <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <sectionGroup name="teleopti">
      <section name="publishedSettings" type="System.Configuration.NameValueSectionHandler" />
    </sectionGroup>
    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
  </configSections>

<common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1211">
        <arg key="configType" value="EXTERNAL" />
      </factoryAdapter>
    </logging>
  </common>

  <log4net>
	<appender name="EventAppender" type="log4net.Appender.EventLogAppender" >
		<applicationName value="TeleoptiSdkWebService" />
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
		</layout>
	</appender>
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="..\..\Logs\SdkWebService.log" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="200KB" />
      <staticLogFileName value="true" />
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%t] %-5p %c %m%n" />
      </layout>
    </appender>
    <root>
      <level value="ERROR" />
      <appender-ref ref="RollingLogFileAppender" />
		<appender-ref ref="EventAppender" />
	</root>
    <logger name="Teleopti.Ccc.Sdk">
      <level value="WARN"/>
    </logger>
  </log4net>

  <appSettings file="site.config">
    <add key="SitePath" value="$(nhibConfPath)"/>
    <add key="MessageBrokerDisabled" value="false"/>
    <add key="MessageBrokerReceiveEnabled" value="true"/>
  </appSettings>
  <teleopti>
    <publishedSettings>
	  <!-- For static (Offline) help please mention the correct path to HelpUrl Key-->		
	  <add key="HelpUrl" value="$(LocalWiki)"/>
	  <add key="HelpPrefix" value="F01%253A"/>
      <add key="HelpDivider" value="_"/>
      <add key="HelpSuffix" value=".html"/>
		<add key="MatrixWebSiteUrl" value="$(MATRIX_WEB_SITE_URL)"/>
		<add key="CustomerWebSSOUrl" value="http://customer.teleopti.com/elogin.aspx"/>
		<add key="MessageBroker" value="$(AgentPortalWebURL)"/>
      <add key="HelpUrlOnline" value="http://wiki.teleopti.com/TeleoptiCCC/Special:MyLanguage/"/>
      <add key="HelpPrefixOnline" value="f01:"/>
      <add key="HelpDividerOnline" value="+"/>
      <add key="HelpSuffixOnline" value=""/>
      <add key="Queue" value="$(SQL_AUTH_STRING);Initial Catalog=$(DB_ANALYTICS);Application Name=Teleopti.Ccc.Sdk.SqlQueue"/>
      <!--
      <add key="SharedKey" value="UUhPdWVyM0xNMVJlVDFzRi84Y25KR3dueU9mOUdoYXI=" />
      <add key="SharedIV" value="VW4xdmtPRCtYQVA2NmlyUw==" />
      -->
    </publishedSettings>
  </teleopti>

  <system.web>
    <!--
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="false">
      <assemblies>
        <add assembly="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Windows"/>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <pages>
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </controls>
    </pages>
    <httpHandlers>
      <remove verb="*" path="*.asmx"/>
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
    </httpHandlers>
    <httpModules>
      <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </httpModules>
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v4.0"/>
        <providerOption name="WarnAsError" value="false"/>
      </compiler>
    </compilers>
  </system.codedom>
  <!--
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
      <add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated"/>
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </handlers>
  </system.webServer>

  <!-- uncomment this if you want to log WCF communication (to get the complete log, you have to flush it by closing the host)
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="All,ActivityTracing"
              propagateActivity="true">
        <listeners>
          <add initializeData="c:\temp\TeleoptiSDK.svclog" type="System.Diagnostics.XmlWriterTraceListener"
               name="traceListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId">
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Verbose,ActivityTracing">
        <listeners>
          <add name="messageListener">
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="c:\temp\TeleoptiSDKMessages.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      name="messageListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId">
      </add>
    </sharedListeners>
  </system.diagnostics>
  -->

  <system.serviceModel>
    <!-- uncomment this if you want to log WCF communication messages
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
    </diagnostics>
    -->
    <services>
      <service behaviorConfiguration="Host2.TeleoptiCccSdkServiceBehavior" name="Teleopti.Ccc.Sdk.WcfService.TeleoptiCccSdkService">
        <endpoint address=""
                    binding="basicHttpBinding"
                    bindingConfiguration="basicHttpBinding_withSize"
                    name="TeleoptiCccSdkService"
                    contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiCccSdkService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address=""
                  binding="basicHttpBinding"
                  bindingConfiguration="basicHttpBinding_withSize"
                  name="TeleoptiCccLogOnService"
                  contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiCccLogOnService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address=""
                  binding="basicHttpBinding"
                  bindingConfiguration="basicHttpBinding_withSize"
                  contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiForecastingService"
                  name="TeleoptiForecastingService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address=""
                  binding="basicHttpBinding"
                  bindingConfiguration="basicHttpBinding_withSize"
                  contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiSchedulingService"
                  name="TeleoptiSchedulingService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address=""
                  binding="basicHttpBinding"
                  bindingConfiguration="basicHttpBinding_withSize"
                  contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiOrganizationService"
                  name="TeleoptiOrganizationService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address=""
                  binding="basicHttpBinding"
                  bindingConfiguration="basicHttpBinding_withSize"
                  contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiCccSdkInternal"
                  name="TeleoptiOrganizationService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
      </service>
    </services>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttpBinding_withSize" maxReceivedMessageSize="1000000" maxBufferSize="1000000">
		      <security mode="$(SDK_SSL_SECURITY_MODE)">
            <transport clientCredentialType="$(SDK_CRED_PROT)" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="Host2.TeleoptiCccSdkServiceBehavior">
          <serviceMetadata httpGetEnabled="$(HTTPGETENABLED)" httpsGetEnabled="$(HTTPSGETENABLED)"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceThrottling maxConcurrentCalls="1000" maxConcurrentInstances="1000" maxConcurrentSessions="5000000"/>
          <dataContractSerializer maxItemsInObjectGraph="2147483646" />
          <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="Teleopti.Ccc.Sdk.WcfService.LogOn.CustomAuthorizationManager, Teleopti.Ccc.Sdk.WcfSdkService">
            <authorizationPolicies>
              <add policyType="Teleopti.Ccc.Sdk.WcfService.LogOn.ClaimSetAuthorizationPolicy, Teleopti.Ccc.Sdk.WcfSdkService"/>
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.1.2.0" newVersion="2.1.2.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>