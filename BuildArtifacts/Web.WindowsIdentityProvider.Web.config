<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
		<sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, Teleopti.Ccc.Web.Auth">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, Teleopti.Ccc.Web.Auth" requirePermission="false" allowLocation="true" />
			<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, Teleopti.Ccc.Web.Auth" requirePermission="false" allowLocation="true" />
		</sectionGroup>
	  <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
	</configSections>
	<connectionStrings>
		<add name="Tenancy" connectionString="$(SQL_AUTH_STRING);Initial Catalog=$(DB_CCC7);Application Name=Teleopti.Tenancy"/>
	</connectionStrings>
	<appSettings>
		<add key="ClientValidationEnabled" value="true" />
		<add key="UnobtrusiveJavaScriptEnabled" value="true" />
		<add key="UseLocalhostIdentifier" value="$(WEB_DEPLOY)" />
		<add key="CustomEndpointHost" value="$(DNS_ALIAS)" />
		<add key="owin:AutomaticAppStartup" value="false"/>
	</appSettings>
	<system.web>
		<compilation targetFramework="4.6.1" />
		<authentication mode="Windows" />
		<pages controlRenderingCompatibilityVersion="4.0">
			<namespaces>
				<add namespace="System.Web.Helpers" />
				<add namespace="System.Web.Mvc" />
				<add namespace="System.Web.Mvc.Ajax" />
				<add namespace="System.Web.Mvc.Html" />
				<add namespace="System.Web.Routing" />
				<add namespace="System.Web.WebPages" />
			</namespaces>
		</pages>
		<httpRuntime enableVersionHeader="false" />
		<httpCookies httpOnlyCookies="true" />
		<!--$(MachineKey)-->
	</system.web>
	<log4net>
		<root>
			<appender-ref ref="RollingFileAppender" />
			<level value="ERROR" />
		</root>
		<!-- <logger name="DotNetOpenAuth">
			<level value="ALL" />
		</logger> -->
		<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="..\..\Logs\WIdPApp.log" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="100KB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
			</layout>
		</appender>
	</log4net>
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false" />
    <httpProtocol>
      <customHeaders>
        <clear />
        <remove name="Server" />
        <remove name="X-Powered-By" />
		<add name="X-Frame-Options" value="SAMEORIGIN" />
		<add name="X-Content-Type-Options" value="nosniff" />
		<add name="X-XSS-Protection" value="1; mode=block" />
		<add name="Content-Security-Policy" value="script-src 'self' 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self' $(CSP_PARENT_URL);" />
		$(HSTS_HEADER)
      </customHeaders>
    </httpProtocol>
	<modules runAllManagedModulesForAllRequests="true"></modules>
  </system.webServer>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.2.15.0" newVersion="1.2.15.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Castle.Core" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.3.0.0" newVersion="3.3.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	
	<dotNetOpenAuth>
		<messaging>
			<untrustedWebRequest timeout="00:00:30" readWriteTimeout="00:00:10">
				<whitelistHosts>
					<add name="localhost" />
					<add name="$(HOST_NAME)" />
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<openid>
			<provider>
			</provider>
		</openid>
	</dotNetOpenAuth>

	<system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net>
		<uri>
			<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
				 which is necessary for OpenID urls with unicode characters in the domain/host name.
				 It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
			<idn enabled="All" />
			<iriParsing enabled="true" />
		</uri>
</configuration>