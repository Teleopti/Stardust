<?xml version="1.0"?>
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Teleopti.Analytics.Portal.AnalyzerProxy.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    </sectionGroup>
	<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
	</configSections>
	<appSettings/>
	<connectionStrings/>
	<system.web>
		<!--
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <!--Set to false by David J until we move this file into "Artifacts"-->
		<compilation debug="false">
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <anonymousIdentification enabled="false"/>
    <!--WISEMETA: mode="[IIS_AUTH]"-->
    <authentication mode="Windows">
      <forms defaultUrl="a.aspx" />
    </authentication>
    <identity impersonate="true"  />
    <authorization>
      <deny users="?" />
      <allow users="*" />
    </authorization>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages>
			<controls>
				<add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</controls>
		</pages>
		<httpHandlers>
			<remove verb="*" path="*.asmx"/>
			<add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
		</httpHandlers>
		<httpModules>
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</httpModules>
	</system.web>
	<system.codedom>
		<compilers>
			<compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
				<providerOption name="CompilerVersion" value="v3.5"/>
				<providerOption name="WarnAsError" value="false"/>
			</compiler>
		</compilers>
	</system.codedom>
	<system.web.extensions>
		<scripting>
			<webServices>
				<!--
              Uncomment this section to enable the authentication service. Include 
              requireSSL="true" if appropriate.

          <authenticationService enabled="true" requireSSL = "true|false"/>
          -->
				<!--
              Uncomment these lines to enable the profile service, and to choose the 
              profile properties that can be retrieved and modified in ASP.NET AJAX 
              applications.

          <profileService enabled="true"
                          readAccessProperties="propertyname1,propertyname2"
                          writeAccessProperties="propertyname1,propertyname2" />
          -->
				<!--
              Uncomment this section to enable the role service.

          <roleService enabled="true"/>
          -->
			</webServices>
			<!--
        <scriptResourceHandler enableCompression="true" enableCaching="true" />
        -->
		</scripting>
	</system.web.extensions>
	<!--
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
		<modules>
			<add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</modules>
		<handlers>
			<remove name="WebServiceHandlerFactory-Integrated"/>
			<add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</handlers>
	</system.webServer>
	<system.serviceModel>
		<services>
			<service name="Teleopti.Analytics.PM.PMServiceHost.PMService" behaviorConfiguration="Teleopti.Analytics.PM.PMServiceHost.PMServiceBehavior">
				<!-- Service Endpoints -->
				<endpoint address="" binding="wsHttpBinding" bindingConfiguration="" contract="Teleopti.Analytics.PM.PMServiceHost.IPMService">
					<!-- 
              Upon deployment, the following identity element should be removed or replaced to reflect the 
              identity under which the deployed service runs.  If removed, WCF will infer an appropriate identity 
              automatically.
          -->
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
		</services>
		<behaviors>
			<serviceBehaviors>
				<behavior name="Teleopti.Analytics.PM.PMServiceHost.PMServiceBehavior">
					<!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
					<serviceMetadata httpGetEnabled="true"/>
					<!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
					<serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceThrottling maxConcurrentSessions="90" />
          <serviceAuthorization impersonateCallerForAllOperations="true" principalPermissionMode="UseWindowsGroups"></serviceAuthorization>
          
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>
  <applicationSettings>
    <Teleopti.Analytics.Portal.AnalyzerProxy.Properties.Settings>
		<setting name="Teleopti_Analytics_Portal_AnalyzerProxy_AnalyzerRef_Analyzer2005" serializeAs="String">
		<value>$(PM_ASMX)</value>
		</setting>
		<!--
			How to change authentication for PM Analyzer:
			*********************************************
			*** Windows authentication ***
			*********************************************
			1. Make sure PM/Analyzer virtual catalog in IIS is set to ONLY Windows access.
			2. Set the value for the setting named "PM_Authentication_Mode" to Windows.
			3. Make sure the ETL service runs as account member of the Analyzer Admin role
			
			Note: Setting up Kerberos deligation is a bit tricky
			Micorsoft have a lot of information but Teleopti recomends this overview and guide for how to prepair your IIS for Kerberos:
			http://www.k2underground.com/blogs/blackdoor/archive/2010/01/06/kerberos-delegation-and-windows-2003.aspx
			Provided "As is" without warranty or responsible
			
			*********************************************
			*** Anonymous authentication ***
			*********************************************
			1. Make sure PM/Analyzer virtual catalog in IIS is set to ONLY anonymous access.
			2. Set the value for the setting named "PM_Authentication_Mode" to Anonymous.
			3. Set the value for the setting named "PM_Anonymous_User_Name" to the user that will access PM.
			4. Set the value for the setting named "PM_Anonymous_User_Password" to the password of the user that will access PM.
			5. Make sure that the given domain user must exist in PM/Analyzer as a user and a is member of the Analyzer Admin role.
			6. Make sure the ETL service runs as the "PM_Anonymous_User_Name"
-->
		<setting name="PM_Authentication_Mode" serializeAs="String">
			<value><!--WISEMETA: default="[PM_AUTH_MODE]"-->Windows</value>
		</setting>
		<setting name="PM_Anonymous_User_Name" serializeAs="String">
			<value><!--WISEMETA: default="[PM_ANONYMOUS_DOMAINUSER]"-->yourDomain\yourUser</value>
		</setting>
		<setting name="PM_Anonymous_User_Password" serializeAs="String">
			<value><!--WISEMETA: default="[PM_ANONYMOUS_PWD]"-->yourPwd</value>
		</setting>
    </Teleopti.Analytics.Portal.AnalyzerProxy.Properties.Settings>
  </applicationSettings>
	<log4net>
		<appender name="EventAppender" type="log4net.Appender.EventLogAppender" >
			<applicationName value="TeleoptiPMService" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
			</layout>
		</appender>
		<appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="..\..\Logs\PMService.log" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="1000KB" />
			<staticLogFileName value="true" />
			<appendToFile value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<param name="ConversionPattern" value="%d [%t] %-5p %c %m%n" />
			</layout>
		</appender>
		<root>
			
	<!--priority value can be set to ALL|DEBUG|INFO|WARN|ERROR|FATAL-->
	
			<level value="WARN" />
			<appender-ref ref="RollingLogFileAppender" />
			<appender-ref ref="EventAppender" />
		</root>
	</log4net>
</configuration>
