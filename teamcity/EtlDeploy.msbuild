<?xml version="1.0" encoding="UTF-8"?>
<!--EXTERNAL_PROPERTIES: WorkingDirectory-->

<Project DefaultTargets="ProcessStandardCube" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="12.0">

	<PropertyGroup>
		<Customer>$(Customer)</Customer>
		<Configuration Condition="'$(Configuration)'==''">Release</Configuration>	
		<ETLStuff>$(WorkingDirectory)\teamcity\ETLNightlyBuild</ETLStuff>
		<ETLDBNamePrefix>ETLTest</ETLDBNamePrefix>
		<ETLNightlyBuild-PrepareETL>$(ETLStuff)\ETLNightlyBuild-PrepareETL.sql</ETLNightlyBuild-PrepareETL>
		<ETLTestConfig>$(WorkingDirectory)\.debug-Setup\ETLTestConfig.bat</ETLTestConfig>
		<SqlInstanceName>$(Computername)</SqlInstanceName>
		<SQLCmdConn>SQLCMD -S$(SqlInstanceName) -E</SQLCmdConn>
		<ETLCCC7DB>$(ETLDBNamePrefix)_DemoSales_TeleoptiCCC7</ETLCCC7DB>
		<ETLAnalyticsDB>$(ETLDBNamePrefix)_DemoSales_TeleoptiAnalytics</ETLAnalyticsDB>
		<ETLAggDB>$(ETLDBNamePrefix)_DemoSales_TeleoptiCCCAgg</ETLAggDB>
		<AppSqlLogin>TeleoptiDemoUser</AppSqlLogin>
		<AppSqlPwd>TeleoptiDemoPwd2</AppSqlPwd>
		<LoadDimensionSQL>$(WorkingDirectory)\Database\Create\AggIntoAnalytics\LoadDimension.sql</LoadDimensionSQL>
		<moveDataSQL>$(WorkingDirectory)\Database\Create\AggIntoAnalytics\MoveData.sql</moveDataSQL>
		<LogObjectId>1</LogObjectId>
		<RestoreToLocal>$(WorkingDirectory)\.debug-Setup\Restore to Local.bat</RestoreToLocal>
		<RestoreToLocalWorkDir>$(WorkingDirectory)\ETL_R2L</RestoreToLocalWorkDir>
		<AS_SERVER_NAME>$(computername)</AS_SERVER_NAME>
		<AS_DATABASE>$(ETLAnalyticsDB)_$(Computername)</AS_DATABASE>
		<SQL_AUTH_STRING>Data Source=$(Computername);Integrated Security=SSPI</SQL_AUTH_STRING>
		<ETL_SERVICE_nhibConfPath>$(WorkingDirectory)\Teleopti.Analytics.Etl.ServiceConsoleHost\bin\$(Configuration)</ETL_SERVICE_nhibConfPath>		
	</PropertyGroup>
	
	<UsingTask AssemblyFile="$(WorkingDirectory)\packages\MSBuild.Extension.Pack.1.3.0\tools\net40\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.SqlServer.SqlExecute"/>
	<UsingTask AssemblyFile="$(WorkingDirectory)\packages\MSBuild.Extension.Pack.1.3.0\tools\net40\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.Framework.AsyncExec"/>
	<UsingTask AssemblyFile="$(WorkingDirectory)\packages\MSBuild.Extension.Pack.1.3.0\tools\net40\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.Framework.CommandLine"/>

	<Target Name="PrepareETLTest" DependsOnTargets="RestoreToLocal;PrepareFiles">
	
	</Target>
	
	<Target Name="RunETLTest" DependsOnTargets="CleanUp;PrepareETLTest">
		<MSBuild.ExtensionPack.Framework.AsyncExec Command ="%22$(WorkingDirectory)\Teleopti.Analytics.Etl.ServiceConsoleHost\bin\$(Configuration)\Teleopti.Analytics.Etl.ServiceConsoleHost.exe%22"/>
		<Exec Command ="PING 127.0.0.1 -n 10 > NUL"/>
		<CallTarget Targets="AddSchedule"/>
		
		<!--
		This is our Test!!!
		The SP will Loop until ETL job is finished. If it finds an error Then a RaisError Should make SQLCMD to bail out
		-->
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="[mart].[etl_nightlyBuild_CheckError]" CommandTimeout="300" ConnectionString="Data Source=$(SqlInstanceName);Initial Catalog=$(ETLAnalyticsDB);Integrated Security=True"/>
	</Target>
	
	<Target Name="AddSchedule">
		<Exec Command ="$(SQLCmdConn) -dmaster -i$(ETLNightlyBuild-PrepareETL) -v TeleoptiAnalytics=$(ETLAnalyticsDB)" />
	</Target>
  
	<Target Name="RestoreToLocal">
		<Exec Command ='"$(RestoreToLocal)" DemoSales $(Configuration) 1 $(ETLDBNamePrefix) $(SqlInstanceName) $(RestoreToLocalWorkDir)'/>
	</Target>

	<Target Name="CreateStandardCube">
			<Exec Command="&quot;$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\AnalysisServicesManager.exe&quot; -AS$(AS_SERVER_NAME) -AD$(AS_DATABASE) -SS$(SqlInstanceName) -SD$(ETLAnalyticsDB) -SU$(AppSqlLogin) -SP$(AppSqlPwd) -FPCreateDatabase.xmla"/>
	</Target>
	
	<Target Name="ProcessStandardCube" DependsOnTargets="RunETLTest;CreateStandardCube">
			<Exec Command ="&quot;$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\AnalysisServicesManager.exe&quot; -AS$(AS_SERVER_NAME) -AD$(AS_DATABASE) -SS$(SqlInstanceName) -SD$(ETLAnalyticsDB) -SU$(AppSqlLogin) -SP$(AppSqlPwd) -FPProcessDatabase.xmla"/>
	</Target>

	<Target Name="ProcessCustomCube">
		<ItemGroup>
			<CustomCubeCustomers Include="$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\Custom\$(Customer)\**\*.*"/>
		</ItemGroup>
		
        <Exec Command ='RMDIR /S /Q "$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\Custom"' ContinueOnError="true" />
		<Copy
            SourceFiles="@(CustomCubeCustomers)"
            DestinationFiles="@(CustomCubeCustomers->'$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\Custom\%(RecursiveDir)%(Filename)%(Extension)')"
        />

		
		<Exec Command ='$(SQLCmdConn) -E -d$(ETLAnalyticsDB) -i"$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\Custom\TestDataSetup\TestDataSetup.sql" '/>
		
		<CallTarget Targets="DropCube"/>
		<Exec Command ="&quot;$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\AnalysisServicesManager.exe&quot; -AS$(AS_SERVER_NAME) -AD$(AS_DATABASE) -SS$(SqlInstanceName) -SD$(ETLAnalyticsDB) -SU$(AppSqlLogin) -SP$(AppSqlPwd) -FPCreateDatabase.xmla"/>
		<Exec Command ="&quot;$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\AnalysisServicesManager.exe&quot; -AS$(AS_SERVER_NAME) -AD$(AS_DATABASE) -SS$(SqlInstanceName) -SD$(ETLAnalyticsDB) -SU$(AppSqlLogin) -SP$(AppSqlPwd) -FPProcessDatabase.xmla"/>
	</Target>
	
	<Target Name="MoveOneLogObject">
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -i$(LoadDimensionSQL) -v SourceAgg=$(ETLAggDB) -v logobjectid=$(LogObjectId)"/>
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -i$(LoadDimensionSQL) -v SourceAgg=$(ETLAggDB) -v logobjectid=$(LogObjectId)"/>
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -i$(moveDataSQL) -v SourceAgg=$(ETLAggDB) -v logobjectid=$(LogObjectId)"/>
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -Q%22update [mart].[sys_datasource] set internal=1 where [log_object_id]=$(LogObjectId)%22"/>
	</Target>
	
	<Target Name="PrepareFiles">
		<Exec Command ='"$(ETLTestConfig)" "$(ETLCCC7DB)" "$(ETLAnalyticsDB)" "$(Configuration)" "$(AS_SERVER_NAME)" "$(AS_DATABASE)" "$(SQL_AUTH_STRING)" "$(ETL_SERVICE_nhibConfPath)"'/>
	</Target>
	
	<Target Name="CleanUp" DependsOnTargets="DropCube;DropSQLDatabases">
		<exec command="taskkill /IM Teleopti.Analytics.Etl.ServiceConsoleHost.exe /F /FI %22memusage gt 2%22" Timeout="1000" ContinueOnError="true" />
		<Exec Command ='RMDIR /S /Q "$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\Custom"' ContinueOnError="true" />
	</Target>

	<Target Name="DropCube">
<Exec Command="&quot;$(WorkingDirectory)\Teleopti.Ccc.AnalysisServicesManager\bin\$(Configuration)\AnalysisServicesManager.exe&quot; -AS$(AS_SERVER_NAME) -AD$(AS_DATABASE) -SS$(SqlInstanceName) -SD$(ETLAnalyticsDB) -SU$(AppSqlLogin) -SP$(AppSqlPwd) -FPDropDatabase.xmla"/>			
	</Target>
	
	<Target Name="DropSQLDatabases">
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" CommandTimeout="30" sql="ALTER DATABASE [$(ETLCCC7DB)] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE $(ETLCCC7DB)" ConnectionString="Data Source=$(SQLServerInstance);Initial Catalog=master;Integrated Security=True" ContinueOnError="true" />
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" CommandTimeout="30" sql="ALTER DATABASE [$(ETLAnalyticsDB)] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE $(ETLAnalyticsDB)" ConnectionString="Data Source=$(SQLServerInstance);Initial Catalog=master;Integrated Security=True" ContinueOnError="true" />
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" CommandTimeout="30" sql="ALTER DATABASE [$(ETLAggDB)] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE $(ETLAggDB)" ConnectionString="Data Source=$(SQLServerInstance);Initial Catalog=master;Integrated Security=True" ContinueOnError="true" />
	</Target>
	
</Project>