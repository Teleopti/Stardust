//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace Teleopti.Analytics.Portal.AnalyzerProxy.AnalyzerRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Analyzer2005Soap", Namespace="http://strategycompanion.com/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CubeElement))]
    public partial class Analyzer2005 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ImportBookmarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportReportWithDataSourceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListReportNullRefDataSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfigMailServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDescendFromOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogonUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogonUserWithRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogonUserWithCompanyIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoffUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCatalogItemByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCatalogItemByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPPSModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReportAllowDuplicatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReportWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReportWithOptions2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportLinkUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportInstanceUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecureReportInstanceUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenReportWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenReportWithOptions2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdditionalCubesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearAdditionalCubesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeCubeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializePivotTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback HideToolbarButtonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomToolbarButtonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCustomToolbarButtonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HideSchemaTreePanelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignReportFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportAsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListDataSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddObjectPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeObjectPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveObjectPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearObjectPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InheritParentPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSystemLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TruncateSystemLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupSystemLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeSystemLogPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUserByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindRoleByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindRoleByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRoleMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoleMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearRoleMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDefinition64OperationCompleted;
        
        private System.Threading.SendOrPostCallback AppendDefinition64OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Analyzer2005() {
            this.Url = global::Teleopti.Analytics.Portal.AnalyzerProxy.Properties.Settings.Default.Teleopti_Analytics_Portal_AnalyzerProxy_AnalyzerRef_Analyzer2005;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ImportBookmarkCompletedEventHandler ImportBookmarkCompleted;
        
        /// <remarks/>
        public event ImportReportCompletedEventHandler ImportReportCompleted;
        
        /// <remarks/>
        public event ImportReportWithDataSourceInfoCompletedEventHandler ImportReportWithDataSourceInfoCompleted;
        
        /// <remarks/>
        public event ListReportNullRefDataSourcesCompletedEventHandler ListReportNullRefDataSourcesCompleted;
        
        /// <remarks/>
        public event ImportFolderCompletedEventHandler ImportFolderCompleted;
        
        /// <remarks/>
        public event ImportDataSourceCompletedEventHandler ImportDataSourceCompleted;
        
        /// <remarks/>
        public event ConfigMailServerCompletedEventHandler ConfigMailServerCompleted;
        
        /// <remarks/>
        public event GetObjectPermissionsCompletedEventHandler GetObjectPermissionsCompleted;
        
        /// <remarks/>
        public event GetUserPermissionCompletedEventHandler GetUserPermissionCompleted;
        
        /// <remarks/>
        public event GetUserRolesCompletedEventHandler GetUserRolesCompleted;
        
        /// <remarks/>
        public event IsDescendFromCompletedEventHandler IsDescendFromCompleted;
        
        /// <remarks/>
        public event LogonUserCompletedEventHandler LogonUserCompleted;
        
        /// <remarks/>
        public event LogonUserWithRolesCompletedEventHandler LogonUserWithRolesCompleted;
        
        /// <remarks/>
        public event LogonUserWithCompanyIdCompletedEventHandler LogonUserWithCompanyIdCompleted;
        
        /// <remarks/>
        public event LogoffUserCompletedEventHandler LogoffUserCompleted;
        
        /// <remarks/>
        public event ListChildrenCompletedEventHandler ListChildrenCompleted;
        
        /// <remarks/>
        public event FindCatalogItemByIdCompletedEventHandler FindCatalogItemByIdCompleted;
        
        /// <remarks/>
        public event FindCatalogItemByNameCompletedEventHandler FindCatalogItemByNameCompleted;
        
        /// <remarks/>
        public event CreateFolderCompletedEventHandler CreateFolderCompleted;
        
        /// <remarks/>
        public event UpdateFolderCompletedEventHandler UpdateFolderCompleted;
        
        /// <remarks/>
        public event DeleteFolderCompletedEventHandler DeleteFolderCompleted;
        
        /// <remarks/>
        public event SetPPSModeCompletedEventHandler SetPPSModeCompleted;
        
        /// <remarks/>
        public event CreateReportCompletedEventHandler CreateReportCompleted;
        
        /// <remarks/>
        public event CreateReportAllowDuplicatedCompletedEventHandler CreateReportAllowDuplicatedCompleted;
        
        /// <remarks/>
        public event CreateReportWithOptionsCompletedEventHandler CreateReportWithOptionsCompleted;
        
        /// <remarks/>
        public event CreateReportWithOptions2CompletedEventHandler CreateReportWithOptions2Completed;
        
        /// <remarks/>
        public event UpdateReportCompletedEventHandler UpdateReportCompleted;
        
        /// <remarks/>
        public event DeleteReportCompletedEventHandler DeleteReportCompleted;
        
        /// <remarks/>
        public event GetReportLinkUrlCompletedEventHandler GetReportLinkUrlCompleted;
        
        /// <remarks/>
        public event GetReportInstanceUrlCompletedEventHandler GetReportInstanceUrlCompleted;
        
        /// <remarks/>
        public event GetSecureReportInstanceUrlCompletedEventHandler GetSecureReportInstanceUrlCompleted;
        
        /// <remarks/>
        public event OpenReportCompletedEventHandler OpenReportCompleted;
        
        /// <remarks/>
        public event OpenReportWithOptionsCompletedEventHandler OpenReportWithOptionsCompleted;
        
        /// <remarks/>
        public event OpenReportWithOptions2CompletedEventHandler OpenReportWithOptions2Completed;
        
        /// <remarks/>
        public event AddAdditionalCubesCompletedEventHandler AddAdditionalCubesCompleted;
        
        /// <remarks/>
        public event ClearAdditionalCubesCompletedEventHandler ClearAdditionalCubesCompleted;
        
        /// <remarks/>
        public event InitializeCubeCompletedEventHandler InitializeCubeCompleted;
        
        /// <remarks/>
        public event InitializePivotTableCompletedEventHandler InitializePivotTableCompleted;
        
        /// <remarks/>
        public event HideToolbarButtonsCompletedEventHandler HideToolbarButtonsCompleted;
        
        /// <remarks/>
        public event AddCustomToolbarButtonsCompletedEventHandler AddCustomToolbarButtonsCompleted;
        
        /// <remarks/>
        public event ClearCustomToolbarButtonsCompletedEventHandler ClearCustomToolbarButtonsCompleted;
        
        /// <remarks/>
        public event HideSchemaTreePanelCompletedEventHandler HideSchemaTreePanelCompleted;
        
        /// <remarks/>
        public event AssignReportFilterCompletedEventHandler AssignReportFilterCompleted;
        
        /// <remarks/>
        public event SaveReportCompletedEventHandler SaveReportCompleted;
        
        /// <remarks/>
        public event SaveReportAsCompletedEventHandler SaveReportAsCompleted;
        
        /// <remarks/>
        public event CloseReportCompletedEventHandler CloseReportCompleted;
        
        /// <remarks/>
        public event ListDataSourcesCompletedEventHandler ListDataSourcesCompleted;
        
        /// <remarks/>
        public event CreateDataSourceCompletedEventHandler CreateDataSourceCompleted;
        
        /// <remarks/>
        public event UpdateDataSourceCompletedEventHandler UpdateDataSourceCompleted;
        
        /// <remarks/>
        public event DeleteDataSourceCompletedEventHandler DeleteDataSourceCompleted;
        
        /// <remarks/>
        public event AddObjectPermissionCompletedEventHandler AddObjectPermissionCompleted;
        
        /// <remarks/>
        public event ChangeObjectPermissionCompletedEventHandler ChangeObjectPermissionCompleted;
        
        /// <remarks/>
        public event RemoveObjectPermissionCompletedEventHandler RemoveObjectPermissionCompleted;
        
        /// <remarks/>
        public event ClearObjectPermissionsCompletedEventHandler ClearObjectPermissionsCompleted;
        
        /// <remarks/>
        public event InheritParentPermissionsCompletedEventHandler InheritParentPermissionsCompleted;
        
        /// <remarks/>
        public event ListSystemLogsCompletedEventHandler ListSystemLogsCompleted;
        
        /// <remarks/>
        public event TruncateSystemLogCompletedEventHandler TruncateSystemLogCompleted;
        
        /// <remarks/>
        public event BackupSystemLogCompletedEventHandler BackupSystemLogCompleted;
        
        /// <remarks/>
        public event ChangeSystemLogPolicyCompletedEventHandler ChangeSystemLogPolicyCompleted;
        
        /// <remarks/>
        public event ListUsersCompletedEventHandler ListUsersCompleted;
        
        /// <remarks/>
        public event FindUserByIdCompletedEventHandler FindUserByIdCompleted;
        
        /// <remarks/>
        public event FindUserByNameCompletedEventHandler FindUserByNameCompleted;
        
        /// <remarks/>
        public event GetCurrentUserCompletedEventHandler GetCurrentUserCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event ListRolesCompletedEventHandler ListRolesCompleted;
        
        /// <remarks/>
        public event FindRoleByIdCompletedEventHandler FindRoleByIdCompleted;
        
        /// <remarks/>
        public event FindRoleByNameCompletedEventHandler FindRoleByNameCompleted;
        
        /// <remarks/>
        public event CreateRoleCompletedEventHandler CreateRoleCompleted;
        
        /// <remarks/>
        public event UpdateRoleCompletedEventHandler UpdateRoleCompleted;
        
        /// <remarks/>
        public event DeleteRoleCompletedEventHandler DeleteRoleCompleted;
        
        /// <remarks/>
        public event AddRoleMemberCompletedEventHandler AddRoleMemberCompleted;
        
        /// <remarks/>
        public event DeleteRoleMemberCompletedEventHandler DeleteRoleMemberCompleted;
        
        /// <remarks/>
        public event ClearRoleMembersCompletedEventHandler ClearRoleMembersCompleted;
        
        /// <remarks/>
        public event CreateDefinition64CompletedEventHandler CreateDefinition64Completed;
        
        /// <remarks/>
        public event AppendDefinition64CompletedEventHandler AppendDefinition64Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ImportBookmark", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ImportBookmark(SecurityContext context, int id, string name, string description, int ownerId, int reportId, bool isPublic, int handle) {
            object[] results = this.Invoke("ImportBookmark", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        reportId,
                        isPublic,
                        handle});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ImportBookmarkAsync(SecurityContext context, int id, string name, string description, int ownerId, int reportId, bool isPublic, int handle) {
            this.ImportBookmarkAsync(context, id, name, description, ownerId, reportId, isPublic, handle, null);
        }
        
        /// <remarks/>
        public void ImportBookmarkAsync(SecurityContext context, int id, string name, string description, int ownerId, int reportId, bool isPublic, int handle, object userState) {
            if ((this.ImportBookmarkOperationCompleted == null)) {
                this.ImportBookmarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportBookmarkOperationCompleted);
            }
            this.InvokeAsync("ImportBookmark", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        reportId,
                        isPublic,
                        handle}, this.ImportBookmarkOperationCompleted, userState);
        }
        
        private void OnImportBookmarkOperationCompleted(object arg) {
            if ((this.ImportBookmarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportBookmarkCompleted(this, new ImportBookmarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ImportReport", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ImportReport(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited, int handle) {
            object[] results = this.Invoke("ImportReport", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        parentId,
                        inherited,
                        handle});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ImportReportAsync(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited, int handle) {
            this.ImportReportAsync(context, id, name, description, ownerId, parentId, inherited, handle, null);
        }
        
        /// <remarks/>
        public void ImportReportAsync(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited, int handle, object userState) {
            if ((this.ImportReportOperationCompleted == null)) {
                this.ImportReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportReportOperationCompleted);
            }
            this.InvokeAsync("ImportReport", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        parentId,
                        inherited,
                        handle}, this.ImportReportOperationCompleted, userState);
        }
        
        private void OnImportReportOperationCompleted(object arg) {
            if ((this.ImportReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportReportCompleted(this, new ImportReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ImportReportWithDataSourceInfo", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ImportReportWithDataSourceInfo(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited, int handle, int dataSourceId, string asDatabaseName, string asCubeName) {
            object[] results = this.Invoke("ImportReportWithDataSourceInfo", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        parentId,
                        inherited,
                        handle,
                        dataSourceId,
                        asDatabaseName,
                        asCubeName});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ImportReportWithDataSourceInfoAsync(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited, int handle, int dataSourceId, string asDatabaseName, string asCubeName) {
            this.ImportReportWithDataSourceInfoAsync(context, id, name, description, ownerId, parentId, inherited, handle, dataSourceId, asDatabaseName, asCubeName, null);
        }
        
        /// <remarks/>
        public void ImportReportWithDataSourceInfoAsync(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited, int handle, int dataSourceId, string asDatabaseName, string asCubeName, object userState) {
            if ((this.ImportReportWithDataSourceInfoOperationCompleted == null)) {
                this.ImportReportWithDataSourceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportReportWithDataSourceInfoOperationCompleted);
            }
            this.InvokeAsync("ImportReportWithDataSourceInfo", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        parentId,
                        inherited,
                        handle,
                        dataSourceId,
                        asDatabaseName,
                        asCubeName}, this.ImportReportWithDataSourceInfoOperationCompleted, userState);
        }
        
        private void OnImportReportWithDataSourceInfoOperationCompleted(object arg) {
            if ((this.ImportReportWithDataSourceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportReportWithDataSourceInfoCompleted(this, new ImportReportWithDataSourceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ListReportNullRefDataSources", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem[] ListReportNullRefDataSources(SecurityContext context, int reportId) {
            object[] results = this.Invoke("ListReportNullRefDataSources", new object[] {
                        context,
                        reportId});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ListReportNullRefDataSourcesAsync(SecurityContext context, int reportId) {
            this.ListReportNullRefDataSourcesAsync(context, reportId, null);
        }
        
        /// <remarks/>
        public void ListReportNullRefDataSourcesAsync(SecurityContext context, int reportId, object userState) {
            if ((this.ListReportNullRefDataSourcesOperationCompleted == null)) {
                this.ListReportNullRefDataSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListReportNullRefDataSourcesOperationCompleted);
            }
            this.InvokeAsync("ListReportNullRefDataSources", new object[] {
                        context,
                        reportId}, this.ListReportNullRefDataSourcesOperationCompleted, userState);
        }
        
        private void OnListReportNullRefDataSourcesOperationCompleted(object arg) {
            if ((this.ListReportNullRefDataSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListReportNullRefDataSourcesCompleted(this, new ListReportNullRefDataSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ImportFolder", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ImportFolder(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited) {
            object[] results = this.Invoke("ImportFolder", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        parentId,
                        inherited});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ImportFolderAsync(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited) {
            this.ImportFolderAsync(context, id, name, description, ownerId, parentId, inherited, null);
        }
        
        /// <remarks/>
        public void ImportFolderAsync(SecurityContext context, int id, string name, string description, int ownerId, int parentId, bool inherited, object userState) {
            if ((this.ImportFolderOperationCompleted == null)) {
                this.ImportFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportFolderOperationCompleted);
            }
            this.InvokeAsync("ImportFolder", new object[] {
                        context,
                        id,
                        name,
                        description,
                        ownerId,
                        parentId,
                        inherited}, this.ImportFolderOperationCompleted, userState);
        }
        
        private void OnImportFolderOperationCompleted(object arg) {
            if ((this.ImportFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportFolderCompleted(this, new ImportFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ImportDataSource", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ImportDataSource(SecurityContext context, int id, string name, string description, int dataSourceType, string serverName, string initialCatalog, int certType, int ownerId, int parentId, bool inherited) {
            object[] results = this.Invoke("ImportDataSource", new object[] {
                        context,
                        id,
                        name,
                        description,
                        dataSourceType,
                        serverName,
                        initialCatalog,
                        certType,
                        ownerId,
                        parentId,
                        inherited});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ImportDataSourceAsync(SecurityContext context, int id, string name, string description, int dataSourceType, string serverName, string initialCatalog, int certType, int ownerId, int parentId, bool inherited) {
            this.ImportDataSourceAsync(context, id, name, description, dataSourceType, serverName, initialCatalog, certType, ownerId, parentId, inherited, null);
        }
        
        /// <remarks/>
        public void ImportDataSourceAsync(SecurityContext context, int id, string name, string description, int dataSourceType, string serverName, string initialCatalog, int certType, int ownerId, int parentId, bool inherited, object userState) {
            if ((this.ImportDataSourceOperationCompleted == null)) {
                this.ImportDataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDataSourceOperationCompleted);
            }
            this.InvokeAsync("ImportDataSource", new object[] {
                        context,
                        id,
                        name,
                        description,
                        dataSourceType,
                        serverName,
                        initialCatalog,
                        certType,
                        ownerId,
                        parentId,
                        inherited}, this.ImportDataSourceOperationCompleted, userState);
        }
        
        private void OnImportDataSourceOperationCompleted(object arg) {
            if ((this.ImportDataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDataSourceCompleted(this, new ImportDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ConfigMailServer", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ConfigMailServer(SecurityContext context, string serverName, int port, string userId, string password, string defaultSender, int authenticate, int sendUsing, int useSSL) {
            object[] results = this.Invoke("ConfigMailServer", new object[] {
                        context,
                        serverName,
                        port,
                        userId,
                        password,
                        defaultSender,
                        authenticate,
                        sendUsing,
                        useSSL});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ConfigMailServerAsync(SecurityContext context, string serverName, int port, string userId, string password, string defaultSender, int authenticate, int sendUsing, int useSSL) {
            this.ConfigMailServerAsync(context, serverName, port, userId, password, defaultSender, authenticate, sendUsing, useSSL, null);
        }
        
        /// <remarks/>
        public void ConfigMailServerAsync(SecurityContext context, string serverName, int port, string userId, string password, string defaultSender, int authenticate, int sendUsing, int useSSL, object userState) {
            if ((this.ConfigMailServerOperationCompleted == null)) {
                this.ConfigMailServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfigMailServerOperationCompleted);
            }
            this.InvokeAsync("ConfigMailServer", new object[] {
                        context,
                        serverName,
                        port,
                        userId,
                        password,
                        defaultSender,
                        authenticate,
                        sendUsing,
                        useSSL}, this.ConfigMailServerOperationCompleted, userState);
        }
        
        private void OnConfigMailServerOperationCompleted(object arg) {
            if ((this.ConfigMailServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfigMailServerCompleted(this, new ConfigMailServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/GetObjectPermissions", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ObjectPermission[] GetObjectPermissions(SecurityContext context, CatalogItem item) {
            object[] results = this.Invoke("GetObjectPermissions", new object[] {
                        context,
                        item});
            return ((ObjectPermission[])(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectPermissionsAsync(SecurityContext context, CatalogItem item) {
            this.GetObjectPermissionsAsync(context, item, null);
        }
        
        /// <remarks/>
        public void GetObjectPermissionsAsync(SecurityContext context, CatalogItem item, object userState) {
            if ((this.GetObjectPermissionsOperationCompleted == null)) {
                this.GetObjectPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectPermissionsOperationCompleted);
            }
            this.InvokeAsync("GetObjectPermissions", new object[] {
                        context,
                        item}, this.GetObjectPermissionsOperationCompleted, userState);
        }
        
        private void OnGetObjectPermissionsOperationCompleted(object arg) {
            if ((this.GetObjectPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectPermissionsCompleted(this, new GetObjectPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/GetUserPermission", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionInfo GetUserPermission(SecurityContext context, string userName, CatalogItem item) {
            object[] results = this.Invoke("GetUserPermission", new object[] {
                        context,
                        userName,
                        item});
            return ((PermissionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPermissionAsync(SecurityContext context, string userName, CatalogItem item) {
            this.GetUserPermissionAsync(context, userName, item, null);
        }
        
        /// <remarks/>
        public void GetUserPermissionAsync(SecurityContext context, string userName, CatalogItem item, object userState) {
            if ((this.GetUserPermissionOperationCompleted == null)) {
                this.GetUserPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPermissionOperationCompleted);
            }
            this.InvokeAsync("GetUserPermission", new object[] {
                        context,
                        userName,
                        item}, this.GetUserPermissionOperationCompleted, userState);
        }
        
        private void OnGetUserPermissionOperationCompleted(object arg) {
            if ((this.GetUserPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPermissionCompleted(this, new GetUserPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/GetUserRoles", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetUserRoles(SecurityContext context, string userName) {
            object[] results = this.Invoke("GetUserRoles", new object[] {
                        context,
                        userName});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(SecurityContext context, string userName) {
            this.GetUserRolesAsync(context, userName, null);
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(SecurityContext context, string userName, object userState) {
            if ((this.GetUserRolesOperationCompleted == null)) {
                this.GetUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRolesOperationCompleted);
            }
            this.InvokeAsync("GetUserRoles", new object[] {
                        context,
                        userName}, this.GetUserRolesOperationCompleted, userState);
        }
        
        private void OnGetUserRolesOperationCompleted(object arg) {
            if ((this.GetUserRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRolesCompleted(this, new GetUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/IsDescendFrom", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDescendFrom(SecurityContext context, CatalogItem item, int ascendantId) {
            object[] results = this.Invoke("IsDescendFrom", new object[] {
                        context,
                        item,
                        ascendantId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDescendFromAsync(SecurityContext context, CatalogItem item, int ascendantId) {
            this.IsDescendFromAsync(context, item, ascendantId, null);
        }
        
        /// <remarks/>
        public void IsDescendFromAsync(SecurityContext context, CatalogItem item, int ascendantId, object userState) {
            if ((this.IsDescendFromOperationCompleted == null)) {
                this.IsDescendFromOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDescendFromOperationCompleted);
            }
            this.InvokeAsync("IsDescendFrom", new object[] {
                        context,
                        item,
                        ascendantId}, this.IsDescendFromOperationCompleted, userState);
        }
        
        private void OnIsDescendFromOperationCompleted(object arg) {
            if ((this.IsDescendFromCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDescendFromCompleted(this, new IsDescendFromCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/LogonUser", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityContext LogonUser(string domainName, string userName, string password, int expiration) {
            object[] results = this.Invoke("LogonUser", new object[] {
                        domainName,
                        userName,
                        password,
                        expiration});
            return ((SecurityContext)(results[0]));
        }
        
        /// <remarks/>
        public void LogonUserAsync(string domainName, string userName, string password, int expiration) {
            this.LogonUserAsync(domainName, userName, password, expiration, null);
        }
        
        /// <remarks/>
        public void LogonUserAsync(string domainName, string userName, string password, int expiration, object userState) {
            if ((this.LogonUserOperationCompleted == null)) {
                this.LogonUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogonUserOperationCompleted);
            }
            this.InvokeAsync("LogonUser", new object[] {
                        domainName,
                        userName,
                        password,
                        expiration}, this.LogonUserOperationCompleted, userState);
        }
        
        private void OnLogonUserOperationCompleted(object arg) {
            if ((this.LogonUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogonUserCompleted(this, new LogonUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/LogonUserWithRoles", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityContext LogonUserWithRoles(string domainName, string userName, string password, string roles, int expiration) {
            object[] results = this.Invoke("LogonUserWithRoles", new object[] {
                        domainName,
                        userName,
                        password,
                        roles,
                        expiration});
            return ((SecurityContext)(results[0]));
        }
        
        /// <remarks/>
        public void LogonUserWithRolesAsync(string domainName, string userName, string password, string roles, int expiration) {
            this.LogonUserWithRolesAsync(domainName, userName, password, roles, expiration, null);
        }
        
        /// <remarks/>
        public void LogonUserWithRolesAsync(string domainName, string userName, string password, string roles, int expiration, object userState) {
            if ((this.LogonUserWithRolesOperationCompleted == null)) {
                this.LogonUserWithRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogonUserWithRolesOperationCompleted);
            }
            this.InvokeAsync("LogonUserWithRoles", new object[] {
                        domainName,
                        userName,
                        password,
                        roles,
                        expiration}, this.LogonUserWithRolesOperationCompleted, userState);
        }
        
        private void OnLogonUserWithRolesOperationCompleted(object arg) {
            if ((this.LogonUserWithRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogonUserWithRolesCompleted(this, new LogonUserWithRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/LogonUserWithCompanyId", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityContext LogonUserWithCompanyId(string domainName, string userName, string password, int companyId, int expiration) {
            object[] results = this.Invoke("LogonUserWithCompanyId", new object[] {
                        domainName,
                        userName,
                        password,
                        companyId,
                        expiration});
            return ((SecurityContext)(results[0]));
        }
        
        /// <remarks/>
        public void LogonUserWithCompanyIdAsync(string domainName, string userName, string password, int companyId, int expiration) {
            this.LogonUserWithCompanyIdAsync(domainName, userName, password, companyId, expiration, null);
        }
        
        /// <remarks/>
        public void LogonUserWithCompanyIdAsync(string domainName, string userName, string password, int companyId, int expiration, object userState) {
            if ((this.LogonUserWithCompanyIdOperationCompleted == null)) {
                this.LogonUserWithCompanyIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogonUserWithCompanyIdOperationCompleted);
            }
            this.InvokeAsync("LogonUserWithCompanyId", new object[] {
                        domainName,
                        userName,
                        password,
                        companyId,
                        expiration}, this.LogonUserWithCompanyIdOperationCompleted, userState);
        }
        
        private void OnLogonUserWithCompanyIdOperationCompleted(object arg) {
            if ((this.LogonUserWithCompanyIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogonUserWithCompanyIdCompleted(this, new LogonUserWithCompanyIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/LogoffUser", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityContext LogoffUser(SecurityContext context) {
            object[] results = this.Invoke("LogoffUser", new object[] {
                        context});
            return ((SecurityContext)(results[0]));
        }
        
        /// <remarks/>
        public void LogoffUserAsync(SecurityContext context) {
            this.LogoffUserAsync(context, null);
        }
        
        /// <remarks/>
        public void LogoffUserAsync(SecurityContext context, object userState) {
            if ((this.LogoffUserOperationCompleted == null)) {
                this.LogoffUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoffUserOperationCompleted);
            }
            this.InvokeAsync("LogoffUser", new object[] {
                        context}, this.LogoffUserOperationCompleted, userState);
        }
        
        private void OnLogoffUserOperationCompleted(object arg) {
            if ((this.LogoffUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoffUserCompleted(this, new LogoffUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ListChildren", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem[] ListChildren(SecurityContext context, int parentId) {
            object[] results = this.Invoke("ListChildren", new object[] {
                        context,
                        parentId});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ListChildrenAsync(SecurityContext context, int parentId) {
            this.ListChildrenAsync(context, parentId, null);
        }
        
        /// <remarks/>
        public void ListChildrenAsync(SecurityContext context, int parentId, object userState) {
            if ((this.ListChildrenOperationCompleted == null)) {
                this.ListChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListChildrenOperationCompleted);
            }
            this.InvokeAsync("ListChildren", new object[] {
                        context,
                        parentId}, this.ListChildrenOperationCompleted, userState);
        }
        
        private void OnListChildrenOperationCompleted(object arg) {
            if ((this.ListChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListChildrenCompleted(this, new ListChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/FindCatalogItemById", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem FindCatalogItemById(SecurityContext context, int id) {
            object[] results = this.Invoke("FindCatalogItemById", new object[] {
                        context,
                        id});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void FindCatalogItemByIdAsync(SecurityContext context, int id) {
            this.FindCatalogItemByIdAsync(context, id, null);
        }
        
        /// <remarks/>
        public void FindCatalogItemByIdAsync(SecurityContext context, int id, object userState) {
            if ((this.FindCatalogItemByIdOperationCompleted == null)) {
                this.FindCatalogItemByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCatalogItemByIdOperationCompleted);
            }
            this.InvokeAsync("FindCatalogItemById", new object[] {
                        context,
                        id}, this.FindCatalogItemByIdOperationCompleted, userState);
        }
        
        private void OnFindCatalogItemByIdOperationCompleted(object arg) {
            if ((this.FindCatalogItemByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCatalogItemByIdCompleted(this, new FindCatalogItemByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/FindCatalogItemByName", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem[] FindCatalogItemByName(SecurityContext context, string name) {
            object[] results = this.Invoke("FindCatalogItemByName", new object[] {
                        context,
                        name});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public void FindCatalogItemByNameAsync(SecurityContext context, string name) {
            this.FindCatalogItemByNameAsync(context, name, null);
        }
        
        /// <remarks/>
        public void FindCatalogItemByNameAsync(SecurityContext context, string name, object userState) {
            if ((this.FindCatalogItemByNameOperationCompleted == null)) {
                this.FindCatalogItemByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCatalogItemByNameOperationCompleted);
            }
            this.InvokeAsync("FindCatalogItemByName", new object[] {
                        context,
                        name}, this.FindCatalogItemByNameOperationCompleted, userState);
        }
        
        private void OnFindCatalogItemByNameOperationCompleted(object arg) {
            if ((this.FindCatalogItemByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCatalogItemByNameCompleted(this, new FindCatalogItemByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateFolder", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem CreateFolder(SecurityContext context, CatalogItem folder) {
            object[] results = this.Invoke("CreateFolder", new object[] {
                        context,
                        folder});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFolderAsync(SecurityContext context, CatalogItem folder) {
            this.CreateFolderAsync(context, folder, null);
        }
        
        /// <remarks/>
        public void CreateFolderAsync(SecurityContext context, CatalogItem folder, object userState) {
            if ((this.CreateFolderOperationCompleted == null)) {
                this.CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("CreateFolder", new object[] {
                        context,
                        folder}, this.CreateFolderOperationCompleted, userState);
        }
        
        private void OnCreateFolderOperationCompleted(object arg) {
            if ((this.CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderCompleted(this, new CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/UpdateFolder", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem UpdateFolder(SecurityContext context, CatalogItem folder) {
            object[] results = this.Invoke("UpdateFolder", new object[] {
                        context,
                        folder});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderAsync(SecurityContext context, CatalogItem folder) {
            this.UpdateFolderAsync(context, folder, null);
        }
        
        /// <remarks/>
        public void UpdateFolderAsync(SecurityContext context, CatalogItem folder, object userState) {
            if ((this.UpdateFolderOperationCompleted == null)) {
                this.UpdateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderOperationCompleted);
            }
            this.InvokeAsync("UpdateFolder", new object[] {
                        context,
                        folder}, this.UpdateFolderOperationCompleted, userState);
        }
        
        private void OnUpdateFolderOperationCompleted(object arg) {
            if ((this.UpdateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderCompleted(this, new UpdateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/DeleteFolder", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem DeleteFolder(SecurityContext context, int folderId) {
            object[] results = this.Invoke("DeleteFolder", new object[] {
                        context,
                        folderId});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(SecurityContext context, int folderId) {
            this.DeleteFolderAsync(context, folderId, null);
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(SecurityContext context, int folderId, object userState) {
            if ((this.DeleteFolderOperationCompleted == null)) {
                this.DeleteFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteFolder", new object[] {
                        context,
                        folderId}, this.DeleteFolderOperationCompleted, userState);
        }
        
        private void OnDeleteFolderOperationCompleted(object arg) {
            if ((this.DeleteFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderCompleted(this, new DeleteFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/SetPPSMode", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance SetPPSMode(SecurityContext context, ReportInstance instance, PPSModes mode) {
            object[] results = this.Invoke("SetPPSMode", new object[] {
                        context,
                        instance,
                        mode});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void SetPPSModeAsync(SecurityContext context, ReportInstance instance, PPSModes mode) {
            this.SetPPSModeAsync(context, instance, mode, null);
        }
        
        /// <remarks/>
        public void SetPPSModeAsync(SecurityContext context, ReportInstance instance, PPSModes mode, object userState) {
            if ((this.SetPPSModeOperationCompleted == null)) {
                this.SetPPSModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPPSModeOperationCompleted);
            }
            this.InvokeAsync("SetPPSMode", new object[] {
                        context,
                        instance,
                        mode}, this.SetPPSModeOperationCompleted, userState);
        }
        
        private void OnSetPPSModeOperationCompleted(object arg) {
            if ((this.SetPPSModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPPSModeCompleted(this, new SetPPSModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateReport", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance CreateReport(SecurityContext context, CatalogItem report, bool save) {
            object[] results = this.Invoke("CreateReport", new object[] {
                        context,
                        report,
                        save});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReportAsync(SecurityContext context, CatalogItem report, bool save) {
            this.CreateReportAsync(context, report, save, null);
        }
        
        /// <remarks/>
        public void CreateReportAsync(SecurityContext context, CatalogItem report, bool save, object userState) {
            if ((this.CreateReportOperationCompleted == null)) {
                this.CreateReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReportOperationCompleted);
            }
            this.InvokeAsync("CreateReport", new object[] {
                        context,
                        report,
                        save}, this.CreateReportOperationCompleted, userState);
        }
        
        private void OnCreateReportOperationCompleted(object arg) {
            if ((this.CreateReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReportCompleted(this, new CreateReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateReportAllowDuplicated", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance CreateReportAllowDuplicated(SecurityContext context, CatalogItem report, bool save) {
            object[] results = this.Invoke("CreateReportAllowDuplicated", new object[] {
                        context,
                        report,
                        save});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReportAllowDuplicatedAsync(SecurityContext context, CatalogItem report, bool save) {
            this.CreateReportAllowDuplicatedAsync(context, report, save, null);
        }
        
        /// <remarks/>
        public void CreateReportAllowDuplicatedAsync(SecurityContext context, CatalogItem report, bool save, object userState) {
            if ((this.CreateReportAllowDuplicatedOperationCompleted == null)) {
                this.CreateReportAllowDuplicatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReportAllowDuplicatedOperationCompleted);
            }
            this.InvokeAsync("CreateReportAllowDuplicated", new object[] {
                        context,
                        report,
                        save}, this.CreateReportAllowDuplicatedOperationCompleted, userState);
        }
        
        private void OnCreateReportAllowDuplicatedOperationCompleted(object arg) {
            if ((this.CreateReportAllowDuplicatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReportAllowDuplicatedCompleted(this, new CreateReportAllowDuplicatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateReportWithOptions", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance CreateReportWithOptions(SecurityContext context, CatalogItem report, int dataSourceId, string databaseName, string cubeName, PivotTable pivotTable, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible) {
            object[] results = this.Invoke("CreateReportWithOptions", new object[] {
                        context,
                        report,
                        dataSourceId,
                        databaseName,
                        cubeName,
                        pivotTable,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReportWithOptionsAsync(SecurityContext context, CatalogItem report, int dataSourceId, string databaseName, string cubeName, PivotTable pivotTable, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible) {
            this.CreateReportWithOptionsAsync(context, report, dataSourceId, databaseName, cubeName, pivotTable, hiddenButtons, schemaVisible, dataSourceVisible, null);
        }
        
        /// <remarks/>
        public void CreateReportWithOptionsAsync(SecurityContext context, CatalogItem report, int dataSourceId, string databaseName, string cubeName, PivotTable pivotTable, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible, object userState) {
            if ((this.CreateReportWithOptionsOperationCompleted == null)) {
                this.CreateReportWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReportWithOptionsOperationCompleted);
            }
            this.InvokeAsync("CreateReportWithOptions", new object[] {
                        context,
                        report,
                        dataSourceId,
                        databaseName,
                        cubeName,
                        pivotTable,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible}, this.CreateReportWithOptionsOperationCompleted, userState);
        }
        
        private void OnCreateReportWithOptionsOperationCompleted(object arg) {
            if ((this.CreateReportWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReportWithOptionsCompleted(this, new CreateReportWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateReportWithOptions2", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance CreateReportWithOptions2(SecurityContext context, CatalogItem report, int dataSourceId, string databaseName, string cubeName, PivotTable pivotTable, AdditionalCube[] cubes, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible) {
            object[] results = this.Invoke("CreateReportWithOptions2", new object[] {
                        context,
                        report,
                        dataSourceId,
                        databaseName,
                        cubeName,
                        pivotTable,
                        cubes,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReportWithOptions2Async(SecurityContext context, CatalogItem report, int dataSourceId, string databaseName, string cubeName, PivotTable pivotTable, AdditionalCube[] cubes, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible) {
            this.CreateReportWithOptions2Async(context, report, dataSourceId, databaseName, cubeName, pivotTable, cubes, hiddenButtons, schemaVisible, dataSourceVisible, null);
        }
        
        /// <remarks/>
        public void CreateReportWithOptions2Async(SecurityContext context, CatalogItem report, int dataSourceId, string databaseName, string cubeName, PivotTable pivotTable, AdditionalCube[] cubes, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible, object userState) {
            if ((this.CreateReportWithOptions2OperationCompleted == null)) {
                this.CreateReportWithOptions2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReportWithOptions2OperationCompleted);
            }
            this.InvokeAsync("CreateReportWithOptions2", new object[] {
                        context,
                        report,
                        dataSourceId,
                        databaseName,
                        cubeName,
                        pivotTable,
                        cubes,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible}, this.CreateReportWithOptions2OperationCompleted, userState);
        }
        
        private void OnCreateReportWithOptions2OperationCompleted(object arg) {
            if ((this.CreateReportWithOptions2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReportWithOptions2Completed(this, new CreateReportWithOptions2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/UpdateReport", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem UpdateReport(SecurityContext context, CatalogItem report) {
            object[] results = this.Invoke("UpdateReport", new object[] {
                        context,
                        report});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReportAsync(SecurityContext context, CatalogItem report) {
            this.UpdateReportAsync(context, report, null);
        }
        
        /// <remarks/>
        public void UpdateReportAsync(SecurityContext context, CatalogItem report, object userState) {
            if ((this.UpdateReportOperationCompleted == null)) {
                this.UpdateReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReportOperationCompleted);
            }
            this.InvokeAsync("UpdateReport", new object[] {
                        context,
                        report}, this.UpdateReportOperationCompleted, userState);
        }
        
        private void OnUpdateReportOperationCompleted(object arg) {
            if ((this.UpdateReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReportCompleted(this, new UpdateReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/DeleteReport", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem DeleteReport(SecurityContext context, int reportId) {
            object[] results = this.Invoke("DeleteReport", new object[] {
                        context,
                        reportId});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReportAsync(SecurityContext context, int reportId) {
            this.DeleteReportAsync(context, reportId, null);
        }
        
        /// <remarks/>
        public void DeleteReportAsync(SecurityContext context, int reportId, object userState) {
            if ((this.DeleteReportOperationCompleted == null)) {
                this.DeleteReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReportOperationCompleted);
            }
            this.InvokeAsync("DeleteReport", new object[] {
                        context,
                        reportId}, this.DeleteReportOperationCompleted, userState);
        }
        
        private void OnDeleteReportOperationCompleted(object arg) {
            if ((this.DeleteReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReportCompleted(this, new DeleteReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/GetReportLinkUrl", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportLinkUrl(SecurityContext context, int reportId, string serverPath) {
            object[] results = this.Invoke("GetReportLinkUrl", new object[] {
                        context,
                        reportId,
                        serverPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportLinkUrlAsync(SecurityContext context, int reportId, string serverPath) {
            this.GetReportLinkUrlAsync(context, reportId, serverPath, null);
        }
        
        /// <remarks/>
        public void GetReportLinkUrlAsync(SecurityContext context, int reportId, string serverPath, object userState) {
            if ((this.GetReportLinkUrlOperationCompleted == null)) {
                this.GetReportLinkUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportLinkUrlOperationCompleted);
            }
            this.InvokeAsync("GetReportLinkUrl", new object[] {
                        context,
                        reportId,
                        serverPath}, this.GetReportLinkUrlOperationCompleted, userState);
        }
        
        private void OnGetReportLinkUrlOperationCompleted(object arg) {
            if ((this.GetReportLinkUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportLinkUrlCompleted(this, new GetReportLinkUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/GetReportInstanceUrl", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportInstanceUrl(SecurityContext context, ReportInstance instance, string serverPath) {
            object[] results = this.Invoke("GetReportInstanceUrl", new object[] {
                        context,
                        instance,
                        serverPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportInstanceUrlAsync(SecurityContext context, ReportInstance instance, string serverPath) {
            this.GetReportInstanceUrlAsync(context, instance, serverPath, null);
        }
        
        /// <remarks/>
        public void GetReportInstanceUrlAsync(SecurityContext context, ReportInstance instance, string serverPath, object userState) {
            if ((this.GetReportInstanceUrlOperationCompleted == null)) {
                this.GetReportInstanceUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportInstanceUrlOperationCompleted);
            }
            this.InvokeAsync("GetReportInstanceUrl", new object[] {
                        context,
                        instance,
                        serverPath}, this.GetReportInstanceUrlOperationCompleted, userState);
        }
        
        private void OnGetReportInstanceUrlOperationCompleted(object arg) {
            if ((this.GetReportInstanceUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportInstanceUrlCompleted(this, new GetReportInstanceUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/GetSecureReportInstanceUrl", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSecureReportInstanceUrl(SecurityContext context, ReportInstance instance, string serverPath) {
            object[] results = this.Invoke("GetSecureReportInstanceUrl", new object[] {
                        context,
                        instance,
                        serverPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecureReportInstanceUrlAsync(SecurityContext context, ReportInstance instance, string serverPath) {
            this.GetSecureReportInstanceUrlAsync(context, instance, serverPath, null);
        }
        
        /// <remarks/>
        public void GetSecureReportInstanceUrlAsync(SecurityContext context, ReportInstance instance, string serverPath, object userState) {
            if ((this.GetSecureReportInstanceUrlOperationCompleted == null)) {
                this.GetSecureReportInstanceUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecureReportInstanceUrlOperationCompleted);
            }
            this.InvokeAsync("GetSecureReportInstanceUrl", new object[] {
                        context,
                        instance,
                        serverPath}, this.GetSecureReportInstanceUrlOperationCompleted, userState);
        }
        
        private void OnGetSecureReportInstanceUrlOperationCompleted(object arg) {
            if ((this.GetSecureReportInstanceUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecureReportInstanceUrlCompleted(this, new GetSecureReportInstanceUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/OpenReport", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance OpenReport(SecurityContext context, int reportId) {
            object[] results = this.Invoke("OpenReport", new object[] {
                        context,
                        reportId});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void OpenReportAsync(SecurityContext context, int reportId) {
            this.OpenReportAsync(context, reportId, null);
        }
        
        /// <remarks/>
        public void OpenReportAsync(SecurityContext context, int reportId, object userState) {
            if ((this.OpenReportOperationCompleted == null)) {
                this.OpenReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenReportOperationCompleted);
            }
            this.InvokeAsync("OpenReport", new object[] {
                        context,
                        reportId}, this.OpenReportOperationCompleted, userState);
        }
        
        private void OnOpenReportOperationCompleted(object arg) {
            if ((this.OpenReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenReportCompleted(this, new OpenReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/OpenReportWithOptions", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance OpenReportWithOptions(SecurityContext context, int reportId, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible) {
            object[] results = this.Invoke("OpenReportWithOptions", new object[] {
                        context,
                        reportId,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void OpenReportWithOptionsAsync(SecurityContext context, int reportId, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible) {
            this.OpenReportWithOptionsAsync(context, reportId, hiddenButtons, schemaVisible, dataSourceVisible, null);
        }
        
        /// <remarks/>
        public void OpenReportWithOptionsAsync(SecurityContext context, int reportId, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible, object userState) {
            if ((this.OpenReportWithOptionsOperationCompleted == null)) {
                this.OpenReportWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenReportWithOptionsOperationCompleted);
            }
            this.InvokeAsync("OpenReportWithOptions", new object[] {
                        context,
                        reportId,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible}, this.OpenReportWithOptionsOperationCompleted, userState);
        }
        
        private void OnOpenReportWithOptionsOperationCompleted(object arg) {
            if ((this.OpenReportWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenReportWithOptionsCompleted(this, new OpenReportWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/OpenReportWithOptions2", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance OpenReportWithOptions2(SecurityContext context, int reportId, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible, string[] reportFilter) {
            object[] results = this.Invoke("OpenReportWithOptions2", new object[] {
                        context,
                        reportId,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible,
                        reportFilter});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void OpenReportWithOptions2Async(SecurityContext context, int reportId, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible, string[] reportFilter) {
            this.OpenReportWithOptions2Async(context, reportId, hiddenButtons, schemaVisible, dataSourceVisible, reportFilter, null);
        }
        
        /// <remarks/>
        public void OpenReportWithOptions2Async(SecurityContext context, int reportId, ToolbarButton[] hiddenButtons, bool schemaVisible, bool dataSourceVisible, string[] reportFilter, object userState) {
            if ((this.OpenReportWithOptions2OperationCompleted == null)) {
                this.OpenReportWithOptions2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenReportWithOptions2OperationCompleted);
            }
            this.InvokeAsync("OpenReportWithOptions2", new object[] {
                        context,
                        reportId,
                        hiddenButtons,
                        schemaVisible,
                        dataSourceVisible,
                        reportFilter}, this.OpenReportWithOptions2OperationCompleted, userState);
        }
        
        private void OnOpenReportWithOptions2OperationCompleted(object arg) {
            if ((this.OpenReportWithOptions2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenReportWithOptions2Completed(this, new OpenReportWithOptions2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/AddAdditionalCubes", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance AddAdditionalCubes(SecurityContext context, ReportInstance instance, AdditionalCube[] cubes) {
            object[] results = this.Invoke("AddAdditionalCubes", new object[] {
                        context,
                        instance,
                        cubes});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdditionalCubesAsync(SecurityContext context, ReportInstance instance, AdditionalCube[] cubes) {
            this.AddAdditionalCubesAsync(context, instance, cubes, null);
        }
        
        /// <remarks/>
        public void AddAdditionalCubesAsync(SecurityContext context, ReportInstance instance, AdditionalCube[] cubes, object userState) {
            if ((this.AddAdditionalCubesOperationCompleted == null)) {
                this.AddAdditionalCubesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdditionalCubesOperationCompleted);
            }
            this.InvokeAsync("AddAdditionalCubes", new object[] {
                        context,
                        instance,
                        cubes}, this.AddAdditionalCubesOperationCompleted, userState);
        }
        
        private void OnAddAdditionalCubesOperationCompleted(object arg) {
            if ((this.AddAdditionalCubesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdditionalCubesCompleted(this, new AddAdditionalCubesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ClearAdditionalCubes", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance ClearAdditionalCubes(SecurityContext context, ReportInstance instance) {
            object[] results = this.Invoke("ClearAdditionalCubes", new object[] {
                        context,
                        instance});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void ClearAdditionalCubesAsync(SecurityContext context, ReportInstance instance) {
            this.ClearAdditionalCubesAsync(context, instance, null);
        }
        
        /// <remarks/>
        public void ClearAdditionalCubesAsync(SecurityContext context, ReportInstance instance, object userState) {
            if ((this.ClearAdditionalCubesOperationCompleted == null)) {
                this.ClearAdditionalCubesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearAdditionalCubesOperationCompleted);
            }
            this.InvokeAsync("ClearAdditionalCubes", new object[] {
                        context,
                        instance}, this.ClearAdditionalCubesOperationCompleted, userState);
        }
        
        private void OnClearAdditionalCubesOperationCompleted(object arg) {
            if ((this.ClearAdditionalCubesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearAdditionalCubesCompleted(this, new ClearAdditionalCubesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/InitializeCube", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance InitializeCube(SecurityContext context, ReportInstance instance, string componentName, int dataSourceId, string databaseName, string cubeName) {
            object[] results = this.Invoke("InitializeCube", new object[] {
                        context,
                        instance,
                        componentName,
                        dataSourceId,
                        databaseName,
                        cubeName});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeCubeAsync(SecurityContext context, ReportInstance instance, string componentName, int dataSourceId, string databaseName, string cubeName) {
            this.InitializeCubeAsync(context, instance, componentName, dataSourceId, databaseName, cubeName, null);
        }
        
        /// <remarks/>
        public void InitializeCubeAsync(SecurityContext context, ReportInstance instance, string componentName, int dataSourceId, string databaseName, string cubeName, object userState) {
            if ((this.InitializeCubeOperationCompleted == null)) {
                this.InitializeCubeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeCubeOperationCompleted);
            }
            this.InvokeAsync("InitializeCube", new object[] {
                        context,
                        instance,
                        componentName,
                        dataSourceId,
                        databaseName,
                        cubeName}, this.InitializeCubeOperationCompleted, userState);
        }
        
        private void OnInitializeCubeOperationCompleted(object arg) {
            if ((this.InitializeCubeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeCubeCompleted(this, new InitializeCubeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/InitializePivotTable", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance InitializePivotTable(SecurityContext context, ReportInstance instance, string componentName, PivotTable pivotTable) {
            object[] results = this.Invoke("InitializePivotTable", new object[] {
                        context,
                        instance,
                        componentName,
                        pivotTable});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void InitializePivotTableAsync(SecurityContext context, ReportInstance instance, string componentName, PivotTable pivotTable) {
            this.InitializePivotTableAsync(context, instance, componentName, pivotTable, null);
        }
        
        /// <remarks/>
        public void InitializePivotTableAsync(SecurityContext context, ReportInstance instance, string componentName, PivotTable pivotTable, object userState) {
            if ((this.InitializePivotTableOperationCompleted == null)) {
                this.InitializePivotTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializePivotTableOperationCompleted);
            }
            this.InvokeAsync("InitializePivotTable", new object[] {
                        context,
                        instance,
                        componentName,
                        pivotTable}, this.InitializePivotTableOperationCompleted, userState);
        }
        
        private void OnInitializePivotTableOperationCompleted(object arg) {
            if ((this.InitializePivotTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializePivotTableCompleted(this, new InitializePivotTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/HideToolbarButtons", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance HideToolbarButtons(SecurityContext context, ReportInstance instance, ToolbarButton[] buttons) {
            object[] results = this.Invoke("HideToolbarButtons", new object[] {
                        context,
                        instance,
                        buttons});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void HideToolbarButtonsAsync(SecurityContext context, ReportInstance instance, ToolbarButton[] buttons) {
            this.HideToolbarButtonsAsync(context, instance, buttons, null);
        }
        
        /// <remarks/>
        public void HideToolbarButtonsAsync(SecurityContext context, ReportInstance instance, ToolbarButton[] buttons, object userState) {
            if ((this.HideToolbarButtonsOperationCompleted == null)) {
                this.HideToolbarButtonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHideToolbarButtonsOperationCompleted);
            }
            this.InvokeAsync("HideToolbarButtons", new object[] {
                        context,
                        instance,
                        buttons}, this.HideToolbarButtonsOperationCompleted, userState);
        }
        
        private void OnHideToolbarButtonsOperationCompleted(object arg) {
            if ((this.HideToolbarButtonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HideToolbarButtonsCompleted(this, new HideToolbarButtonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/AddCustomToolbarButtons", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance AddCustomToolbarButtons(SecurityContext context, ReportInstance instance, CustomButton[] buttons) {
            object[] results = this.Invoke("AddCustomToolbarButtons", new object[] {
                        context,
                        instance,
                        buttons});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void AddCustomToolbarButtonsAsync(SecurityContext context, ReportInstance instance, CustomButton[] buttons) {
            this.AddCustomToolbarButtonsAsync(context, instance, buttons, null);
        }
        
        /// <remarks/>
        public void AddCustomToolbarButtonsAsync(SecurityContext context, ReportInstance instance, CustomButton[] buttons, object userState) {
            if ((this.AddCustomToolbarButtonsOperationCompleted == null)) {
                this.AddCustomToolbarButtonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomToolbarButtonsOperationCompleted);
            }
            this.InvokeAsync("AddCustomToolbarButtons", new object[] {
                        context,
                        instance,
                        buttons}, this.AddCustomToolbarButtonsOperationCompleted, userState);
        }
        
        private void OnAddCustomToolbarButtonsOperationCompleted(object arg) {
            if ((this.AddCustomToolbarButtonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomToolbarButtonsCompleted(this, new AddCustomToolbarButtonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ClearCustomToolbarButtons", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance ClearCustomToolbarButtons(SecurityContext context, ReportInstance instance) {
            object[] results = this.Invoke("ClearCustomToolbarButtons", new object[] {
                        context,
                        instance});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void ClearCustomToolbarButtonsAsync(SecurityContext context, ReportInstance instance) {
            this.ClearCustomToolbarButtonsAsync(context, instance, null);
        }
        
        /// <remarks/>
        public void ClearCustomToolbarButtonsAsync(SecurityContext context, ReportInstance instance, object userState) {
            if ((this.ClearCustomToolbarButtonsOperationCompleted == null)) {
                this.ClearCustomToolbarButtonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCustomToolbarButtonsOperationCompleted);
            }
            this.InvokeAsync("ClearCustomToolbarButtons", new object[] {
                        context,
                        instance}, this.ClearCustomToolbarButtonsOperationCompleted, userState);
        }
        
        private void OnClearCustomToolbarButtonsOperationCompleted(object arg) {
            if ((this.ClearCustomToolbarButtonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCustomToolbarButtonsCompleted(this, new ClearCustomToolbarButtonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/HideSchemaTreePanel", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance HideSchemaTreePanel(SecurityContext context, ReportInstance instance, bool dataSourceOnly) {
            object[] results = this.Invoke("HideSchemaTreePanel", new object[] {
                        context,
                        instance,
                        dataSourceOnly});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void HideSchemaTreePanelAsync(SecurityContext context, ReportInstance instance, bool dataSourceOnly) {
            this.HideSchemaTreePanelAsync(context, instance, dataSourceOnly, null);
        }
        
        /// <remarks/>
        public void HideSchemaTreePanelAsync(SecurityContext context, ReportInstance instance, bool dataSourceOnly, object userState) {
            if ((this.HideSchemaTreePanelOperationCompleted == null)) {
                this.HideSchemaTreePanelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHideSchemaTreePanelOperationCompleted);
            }
            this.InvokeAsync("HideSchemaTreePanel", new object[] {
                        context,
                        instance,
                        dataSourceOnly}, this.HideSchemaTreePanelOperationCompleted, userState);
        }
        
        private void OnHideSchemaTreePanelOperationCompleted(object arg) {
            if ((this.HideSchemaTreePanelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HideSchemaTreePanelCompleted(this, new HideSchemaTreePanelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/AssignReportFilter", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance AssignReportFilter(SecurityContext context, ReportInstance instance, string[] members) {
            object[] results = this.Invoke("AssignReportFilter", new object[] {
                        context,
                        instance,
                        members});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void AssignReportFilterAsync(SecurityContext context, ReportInstance instance, string[] members) {
            this.AssignReportFilterAsync(context, instance, members, null);
        }
        
        /// <remarks/>
        public void AssignReportFilterAsync(SecurityContext context, ReportInstance instance, string[] members, object userState) {
            if ((this.AssignReportFilterOperationCompleted == null)) {
                this.AssignReportFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignReportFilterOperationCompleted);
            }
            this.InvokeAsync("AssignReportFilter", new object[] {
                        context,
                        instance,
                        members}, this.AssignReportFilterOperationCompleted, userState);
        }
        
        private void OnAssignReportFilterOperationCompleted(object arg) {
            if ((this.AssignReportFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignReportFilterCompleted(this, new AssignReportFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/SaveReport", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance SaveReport(SecurityContext context, ReportInstance instance) {
            object[] results = this.Invoke("SaveReport", new object[] {
                        context,
                        instance});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportAsync(SecurityContext context, ReportInstance instance) {
            this.SaveReportAsync(context, instance, null);
        }
        
        /// <remarks/>
        public void SaveReportAsync(SecurityContext context, ReportInstance instance, object userState) {
            if ((this.SaveReportOperationCompleted == null)) {
                this.SaveReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportOperationCompleted);
            }
            this.InvokeAsync("SaveReport", new object[] {
                        context,
                        instance}, this.SaveReportOperationCompleted, userState);
        }
        
        private void OnSaveReportOperationCompleted(object arg) {
            if ((this.SaveReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportCompleted(this, new SaveReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/SaveReportAs", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance SaveReportAs(SecurityContext context, ReportInstance instance, int parentId, string newName) {
            object[] results = this.Invoke("SaveReportAs", new object[] {
                        context,
                        instance,
                        parentId,
                        newName});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportAsAsync(SecurityContext context, ReportInstance instance, int parentId, string newName) {
            this.SaveReportAsAsync(context, instance, parentId, newName, null);
        }
        
        /// <remarks/>
        public void SaveReportAsAsync(SecurityContext context, ReportInstance instance, int parentId, string newName, object userState) {
            if ((this.SaveReportAsOperationCompleted == null)) {
                this.SaveReportAsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportAsOperationCompleted);
            }
            this.InvokeAsync("SaveReportAs", new object[] {
                        context,
                        instance,
                        parentId,
                        newName}, this.SaveReportAsOperationCompleted, userState);
        }
        
        private void OnSaveReportAsOperationCompleted(object arg) {
            if ((this.SaveReportAsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportAsCompleted(this, new SaveReportAsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CloseReport", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportInstance CloseReport(SecurityContext context, ReportInstance instance, bool saveBeforeClose) {
            object[] results = this.Invoke("CloseReport", new object[] {
                        context,
                        instance,
                        saveBeforeClose});
            return ((ReportInstance)(results[0]));
        }
        
        /// <remarks/>
        public void CloseReportAsync(SecurityContext context, ReportInstance instance, bool saveBeforeClose) {
            this.CloseReportAsync(context, instance, saveBeforeClose, null);
        }
        
        /// <remarks/>
        public void CloseReportAsync(SecurityContext context, ReportInstance instance, bool saveBeforeClose, object userState) {
            if ((this.CloseReportOperationCompleted == null)) {
                this.CloseReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseReportOperationCompleted);
            }
            this.InvokeAsync("CloseReport", new object[] {
                        context,
                        instance,
                        saveBeforeClose}, this.CloseReportOperationCompleted, userState);
        }
        
        private void OnCloseReportOperationCompleted(object arg) {
            if ((this.CloseReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseReportCompleted(this, new CloseReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ListDataSources", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSource[] ListDataSources(SecurityContext context) {
            object[] results = this.Invoke("ListDataSources", new object[] {
                        context});
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        public void ListDataSourcesAsync(SecurityContext context) {
            this.ListDataSourcesAsync(context, null);
        }
        
        /// <remarks/>
        public void ListDataSourcesAsync(SecurityContext context, object userState) {
            if ((this.ListDataSourcesOperationCompleted == null)) {
                this.ListDataSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDataSourcesOperationCompleted);
            }
            this.InvokeAsync("ListDataSources", new object[] {
                        context}, this.ListDataSourcesOperationCompleted, userState);
        }
        
        private void OnListDataSourcesOperationCompleted(object arg) {
            if ((this.ListDataSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDataSourcesCompleted(this, new ListDataSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateDataSource", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSource CreateDataSource(SecurityContext context, DataSource dataSource) {
            object[] results = this.Invoke("CreateDataSource", new object[] {
                        context,
                        dataSource});
            return ((DataSource)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDataSourceAsync(SecurityContext context, DataSource dataSource) {
            this.CreateDataSourceAsync(context, dataSource, null);
        }
        
        /// <remarks/>
        public void CreateDataSourceAsync(SecurityContext context, DataSource dataSource, object userState) {
            if ((this.CreateDataSourceOperationCompleted == null)) {
                this.CreateDataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDataSourceOperationCompleted);
            }
            this.InvokeAsync("CreateDataSource", new object[] {
                        context,
                        dataSource}, this.CreateDataSourceOperationCompleted, userState);
        }
        
        private void OnCreateDataSourceOperationCompleted(object arg) {
            if ((this.CreateDataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDataSourceCompleted(this, new CreateDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/UpdateDataSource", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSource UpdateDataSource(SecurityContext context, DataSource dataSource) {
            object[] results = this.Invoke("UpdateDataSource", new object[] {
                        context,
                        dataSource});
            return ((DataSource)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataSourceAsync(SecurityContext context, DataSource dataSource) {
            this.UpdateDataSourceAsync(context, dataSource, null);
        }
        
        /// <remarks/>
        public void UpdateDataSourceAsync(SecurityContext context, DataSource dataSource, object userState) {
            if ((this.UpdateDataSourceOperationCompleted == null)) {
                this.UpdateDataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataSourceOperationCompleted);
            }
            this.InvokeAsync("UpdateDataSource", new object[] {
                        context,
                        dataSource}, this.UpdateDataSourceOperationCompleted, userState);
        }
        
        private void OnUpdateDataSourceOperationCompleted(object arg) {
            if ((this.UpdateDataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataSourceCompleted(this, new UpdateDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/DeleteDataSource", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSource DeleteDataSource(SecurityContext context, int dataSourceId) {
            object[] results = this.Invoke("DeleteDataSource", new object[] {
                        context,
                        dataSourceId});
            return ((DataSource)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDataSourceAsync(SecurityContext context, int dataSourceId) {
            this.DeleteDataSourceAsync(context, dataSourceId, null);
        }
        
        /// <remarks/>
        public void DeleteDataSourceAsync(SecurityContext context, int dataSourceId, object userState) {
            if ((this.DeleteDataSourceOperationCompleted == null)) {
                this.DeleteDataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataSourceOperationCompleted);
            }
            this.InvokeAsync("DeleteDataSource", new object[] {
                        context,
                        dataSourceId}, this.DeleteDataSourceOperationCompleted, userState);
        }
        
        private void OnDeleteDataSourceOperationCompleted(object arg) {
            if ((this.DeleteDataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataSourceCompleted(this, new DeleteDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/AddObjectPermission", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState AddObjectPermission(SecurityContext context, ObjectPermission objectPermission) {
            object[] results = this.Invoke("AddObjectPermission", new object[] {
                        context,
                        objectPermission});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void AddObjectPermissionAsync(SecurityContext context, ObjectPermission objectPermission) {
            this.AddObjectPermissionAsync(context, objectPermission, null);
        }
        
        /// <remarks/>
        public void AddObjectPermissionAsync(SecurityContext context, ObjectPermission objectPermission, object userState) {
            if ((this.AddObjectPermissionOperationCompleted == null)) {
                this.AddObjectPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddObjectPermissionOperationCompleted);
            }
            this.InvokeAsync("AddObjectPermission", new object[] {
                        context,
                        objectPermission}, this.AddObjectPermissionOperationCompleted, userState);
        }
        
        private void OnAddObjectPermissionOperationCompleted(object arg) {
            if ((this.AddObjectPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddObjectPermissionCompleted(this, new AddObjectPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ChangeObjectPermission", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ChangeObjectPermission(SecurityContext context, ObjectPermission objectPermission) {
            object[] results = this.Invoke("ChangeObjectPermission", new object[] {
                        context,
                        objectPermission});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeObjectPermissionAsync(SecurityContext context, ObjectPermission objectPermission) {
            this.ChangeObjectPermissionAsync(context, objectPermission, null);
        }
        
        /// <remarks/>
        public void ChangeObjectPermissionAsync(SecurityContext context, ObjectPermission objectPermission, object userState) {
            if ((this.ChangeObjectPermissionOperationCompleted == null)) {
                this.ChangeObjectPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeObjectPermissionOperationCompleted);
            }
            this.InvokeAsync("ChangeObjectPermission", new object[] {
                        context,
                        objectPermission}, this.ChangeObjectPermissionOperationCompleted, userState);
        }
        
        private void OnChangeObjectPermissionOperationCompleted(object arg) {
            if ((this.ChangeObjectPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeObjectPermissionCompleted(this, new ChangeObjectPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/RemoveObjectPermission", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState RemoveObjectPermission(SecurityContext context, int objectId, int memberId) {
            object[] results = this.Invoke("RemoveObjectPermission", new object[] {
                        context,
                        objectId,
                        memberId});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveObjectPermissionAsync(SecurityContext context, int objectId, int memberId) {
            this.RemoveObjectPermissionAsync(context, objectId, memberId, null);
        }
        
        /// <remarks/>
        public void RemoveObjectPermissionAsync(SecurityContext context, int objectId, int memberId, object userState) {
            if ((this.RemoveObjectPermissionOperationCompleted == null)) {
                this.RemoveObjectPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveObjectPermissionOperationCompleted);
            }
            this.InvokeAsync("RemoveObjectPermission", new object[] {
                        context,
                        objectId,
                        memberId}, this.RemoveObjectPermissionOperationCompleted, userState);
        }
        
        private void OnRemoveObjectPermissionOperationCompleted(object arg) {
            if ((this.RemoveObjectPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveObjectPermissionCompleted(this, new RemoveObjectPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ClearObjectPermissions", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ClearObjectPermissions(SecurityContext context, int objectId) {
            object[] results = this.Invoke("ClearObjectPermissions", new object[] {
                        context,
                        objectId});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ClearObjectPermissionsAsync(SecurityContext context, int objectId) {
            this.ClearObjectPermissionsAsync(context, objectId, null);
        }
        
        /// <remarks/>
        public void ClearObjectPermissionsAsync(SecurityContext context, int objectId, object userState) {
            if ((this.ClearObjectPermissionsOperationCompleted == null)) {
                this.ClearObjectPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearObjectPermissionsOperationCompleted);
            }
            this.InvokeAsync("ClearObjectPermissions", new object[] {
                        context,
                        objectId}, this.ClearObjectPermissionsOperationCompleted, userState);
        }
        
        private void OnClearObjectPermissionsOperationCompleted(object arg) {
            if ((this.ClearObjectPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearObjectPermissionsCompleted(this, new ClearObjectPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/InheritParentPermissions", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState InheritParentPermissions(SecurityContext context, CatalogItem item, bool inherited) {
            object[] results = this.Invoke("InheritParentPermissions", new object[] {
                        context,
                        item,
                        inherited});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void InheritParentPermissionsAsync(SecurityContext context, CatalogItem item, bool inherited) {
            this.InheritParentPermissionsAsync(context, item, inherited, null);
        }
        
        /// <remarks/>
        public void InheritParentPermissionsAsync(SecurityContext context, CatalogItem item, bool inherited, object userState) {
            if ((this.InheritParentPermissionsOperationCompleted == null)) {
                this.InheritParentPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInheritParentPermissionsOperationCompleted);
            }
            this.InvokeAsync("InheritParentPermissions", new object[] {
                        context,
                        item,
                        inherited}, this.InheritParentPermissionsOperationCompleted, userState);
        }
        
        private void OnInheritParentPermissionsOperationCompleted(object arg) {
            if ((this.InheritParentPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InheritParentPermissionsCompleted(this, new InheritParentPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ListSystemLogs", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemLog[] ListSystemLogs(SecurityContext context) {
            object[] results = this.Invoke("ListSystemLogs", new object[] {
                        context});
            return ((SystemLog[])(results[0]));
        }
        
        /// <remarks/>
        public void ListSystemLogsAsync(SecurityContext context) {
            this.ListSystemLogsAsync(context, null);
        }
        
        /// <remarks/>
        public void ListSystemLogsAsync(SecurityContext context, object userState) {
            if ((this.ListSystemLogsOperationCompleted == null)) {
                this.ListSystemLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSystemLogsOperationCompleted);
            }
            this.InvokeAsync("ListSystemLogs", new object[] {
                        context}, this.ListSystemLogsOperationCompleted, userState);
        }
        
        private void OnListSystemLogsOperationCompleted(object arg) {
            if ((this.ListSystemLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSystemLogsCompleted(this, new ListSystemLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/TruncateSystemLog", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemLog TruncateSystemLog(SecurityContext context) {
            object[] results = this.Invoke("TruncateSystemLog", new object[] {
                        context});
            return ((SystemLog)(results[0]));
        }
        
        /// <remarks/>
        public void TruncateSystemLogAsync(SecurityContext context) {
            this.TruncateSystemLogAsync(context, null);
        }
        
        /// <remarks/>
        public void TruncateSystemLogAsync(SecurityContext context, object userState) {
            if ((this.TruncateSystemLogOperationCompleted == null)) {
                this.TruncateSystemLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTruncateSystemLogOperationCompleted);
            }
            this.InvokeAsync("TruncateSystemLog", new object[] {
                        context}, this.TruncateSystemLogOperationCompleted, userState);
        }
        
        private void OnTruncateSystemLogOperationCompleted(object arg) {
            if ((this.TruncateSystemLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TruncateSystemLogCompleted(this, new TruncateSystemLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/BackupSystemLog", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemLog BackupSystemLog(SecurityContext context) {
            object[] results = this.Invoke("BackupSystemLog", new object[] {
                        context});
            return ((SystemLog)(results[0]));
        }
        
        /// <remarks/>
        public void BackupSystemLogAsync(SecurityContext context) {
            this.BackupSystemLogAsync(context, null);
        }
        
        /// <remarks/>
        public void BackupSystemLogAsync(SecurityContext context, object userState) {
            if ((this.BackupSystemLogOperationCompleted == null)) {
                this.BackupSystemLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupSystemLogOperationCompleted);
            }
            this.InvokeAsync("BackupSystemLog", new object[] {
                        context}, this.BackupSystemLogOperationCompleted, userState);
        }
        
        private void OnBackupSystemLogOperationCompleted(object arg) {
            if ((this.BackupSystemLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupSystemLogCompleted(this, new BackupSystemLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ChangeSystemLogPolicy", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ChangeSystemLogPolicy(SecurityContext context, LogPolicy policy) {
            object[] results = this.Invoke("ChangeSystemLogPolicy", new object[] {
                        context,
                        policy});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeSystemLogPolicyAsync(SecurityContext context, LogPolicy policy) {
            this.ChangeSystemLogPolicyAsync(context, policy, null);
        }
        
        /// <remarks/>
        public void ChangeSystemLogPolicyAsync(SecurityContext context, LogPolicy policy, object userState) {
            if ((this.ChangeSystemLogPolicyOperationCompleted == null)) {
                this.ChangeSystemLogPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeSystemLogPolicyOperationCompleted);
            }
            this.InvokeAsync("ChangeSystemLogPolicy", new object[] {
                        context,
                        policy}, this.ChangeSystemLogPolicyOperationCompleted, userState);
        }
        
        private void OnChangeSystemLogPolicyOperationCompleted(object arg) {
            if ((this.ChangeSystemLogPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeSystemLogPolicyCompleted(this, new ChangeSystemLogPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ListUsers", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] ListUsers(SecurityContext context) {
            object[] results = this.Invoke("ListUsers", new object[] {
                        context});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void ListUsersAsync(SecurityContext context) {
            this.ListUsersAsync(context, null);
        }
        
        /// <remarks/>
        public void ListUsersAsync(SecurityContext context, object userState) {
            if ((this.ListUsersOperationCompleted == null)) {
                this.ListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUsersOperationCompleted);
            }
            this.InvokeAsync("ListUsers", new object[] {
                        context}, this.ListUsersOperationCompleted, userState);
        }
        
        private void OnListUsersOperationCompleted(object arg) {
            if ((this.ListUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUsersCompleted(this, new ListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/FindUserById", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User FindUserById(SecurityContext context, int userId) {
            object[] results = this.Invoke("FindUserById", new object[] {
                        context,
                        userId});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void FindUserByIdAsync(SecurityContext context, int userId) {
            this.FindUserByIdAsync(context, userId, null);
        }
        
        /// <remarks/>
        public void FindUserByIdAsync(SecurityContext context, int userId, object userState) {
            if ((this.FindUserByIdOperationCompleted == null)) {
                this.FindUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUserByIdOperationCompleted);
            }
            this.InvokeAsync("FindUserById", new object[] {
                        context,
                        userId}, this.FindUserByIdOperationCompleted, userState);
        }
        
        private void OnFindUserByIdOperationCompleted(object arg) {
            if ((this.FindUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUserByIdCompleted(this, new FindUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/FindUserByName", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User FindUserByName(SecurityContext context, string userName) {
            object[] results = this.Invoke("FindUserByName", new object[] {
                        context,
                        userName});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void FindUserByNameAsync(SecurityContext context, string userName) {
            this.FindUserByNameAsync(context, userName, null);
        }
        
        /// <remarks/>
        public void FindUserByNameAsync(SecurityContext context, string userName, object userState) {
            if ((this.FindUserByNameOperationCompleted == null)) {
                this.FindUserByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUserByNameOperationCompleted);
            }
            this.InvokeAsync("FindUserByName", new object[] {
                        context,
                        userName}, this.FindUserByNameOperationCompleted, userState);
        }
        
        private void OnFindUserByNameOperationCompleted(object arg) {
            if ((this.FindUserByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUserByNameCompleted(this, new FindUserByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/GetCurrentUser", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetCurrentUser(SecurityContext context) {
            object[] results = this.Invoke("GetCurrentUser", new object[] {
                        context});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentUserAsync(SecurityContext context) {
            this.GetCurrentUserAsync(context, null);
        }
        
        /// <remarks/>
        public void GetCurrentUserAsync(SecurityContext context, object userState) {
            if ((this.GetCurrentUserOperationCompleted == null)) {
                this.GetCurrentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentUserOperationCompleted);
            }
            this.InvokeAsync("GetCurrentUser", new object[] {
                        context}, this.GetCurrentUserOperationCompleted, userState);
        }
        
        private void OnGetCurrentUserOperationCompleted(object arg) {
            if ((this.GetCurrentUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentUserCompleted(this, new GetCurrentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateUser", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User CreateUser(SecurityContext context, User user) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        context,
                        user});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(SecurityContext context, User user) {
            this.CreateUserAsync(context, user, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(SecurityContext context, User user, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        context,
                        user}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/UpdateUser", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User UpdateUser(SecurityContext context, User user) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        context,
                        user});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(SecurityContext context, User user) {
            this.UpdateUserAsync(context, user, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(SecurityContext context, User user, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        context,
                        user}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/DeleteUser", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User DeleteUser(SecurityContext context, int userId) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        context,
                        userId});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(SecurityContext context, int userId) {
            this.DeleteUserAsync(context, userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(SecurityContext context, int userId, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        context,
                        userId}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ListRoles", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] ListRoles(SecurityContext context) {
            object[] results = this.Invoke("ListRoles", new object[] {
                        context});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRolesAsync(SecurityContext context) {
            this.ListRolesAsync(context, null);
        }
        
        /// <remarks/>
        public void ListRolesAsync(SecurityContext context, object userState) {
            if ((this.ListRolesOperationCompleted == null)) {
                this.ListRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRolesOperationCompleted);
            }
            this.InvokeAsync("ListRoles", new object[] {
                        context}, this.ListRolesOperationCompleted, userState);
        }
        
        private void OnListRolesOperationCompleted(object arg) {
            if ((this.ListRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRolesCompleted(this, new ListRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/FindRoleById", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role FindRoleById(SecurityContext context, int roleId) {
            object[] results = this.Invoke("FindRoleById", new object[] {
                        context,
                        roleId});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void FindRoleByIdAsync(SecurityContext context, int roleId) {
            this.FindRoleByIdAsync(context, roleId, null);
        }
        
        /// <remarks/>
        public void FindRoleByIdAsync(SecurityContext context, int roleId, object userState) {
            if ((this.FindRoleByIdOperationCompleted == null)) {
                this.FindRoleByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindRoleByIdOperationCompleted);
            }
            this.InvokeAsync("FindRoleById", new object[] {
                        context,
                        roleId}, this.FindRoleByIdOperationCompleted, userState);
        }
        
        private void OnFindRoleByIdOperationCompleted(object arg) {
            if ((this.FindRoleByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindRoleByIdCompleted(this, new FindRoleByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/FindRoleByName", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role FindRoleByName(SecurityContext context, string roleName) {
            object[] results = this.Invoke("FindRoleByName", new object[] {
                        context,
                        roleName});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void FindRoleByNameAsync(SecurityContext context, string roleName) {
            this.FindRoleByNameAsync(context, roleName, null);
        }
        
        /// <remarks/>
        public void FindRoleByNameAsync(SecurityContext context, string roleName, object userState) {
            if ((this.FindRoleByNameOperationCompleted == null)) {
                this.FindRoleByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindRoleByNameOperationCompleted);
            }
            this.InvokeAsync("FindRoleByName", new object[] {
                        context,
                        roleName}, this.FindRoleByNameOperationCompleted, userState);
        }
        
        private void OnFindRoleByNameOperationCompleted(object arg) {
            if ((this.FindRoleByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindRoleByNameCompleted(this, new FindRoleByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateRole", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role CreateRole(SecurityContext context, Role role) {
            object[] results = this.Invoke("CreateRole", new object[] {
                        context,
                        role});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRoleAsync(SecurityContext context, Role role) {
            this.CreateRoleAsync(context, role, null);
        }
        
        /// <remarks/>
        public void CreateRoleAsync(SecurityContext context, Role role, object userState) {
            if ((this.CreateRoleOperationCompleted == null)) {
                this.CreateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRoleOperationCompleted);
            }
            this.InvokeAsync("CreateRole", new object[] {
                        context,
                        role}, this.CreateRoleOperationCompleted, userState);
        }
        
        private void OnCreateRoleOperationCompleted(object arg) {
            if ((this.CreateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRoleCompleted(this, new CreateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/UpdateRole", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role UpdateRole(SecurityContext context, Role role) {
            object[] results = this.Invoke("UpdateRole", new object[] {
                        context,
                        role});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(SecurityContext context, Role role) {
            this.UpdateRoleAsync(context, role, null);
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(SecurityContext context, Role role, object userState) {
            if ((this.UpdateRoleOperationCompleted == null)) {
                this.UpdateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRoleOperationCompleted);
            }
            this.InvokeAsync("UpdateRole", new object[] {
                        context,
                        role}, this.UpdateRoleOperationCompleted, userState);
        }
        
        private void OnUpdateRoleOperationCompleted(object arg) {
            if ((this.UpdateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRoleCompleted(this, new UpdateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/DeleteRole", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role DeleteRole(SecurityContext context, int roleId) {
            object[] results = this.Invoke("DeleteRole", new object[] {
                        context,
                        roleId});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(SecurityContext context, int roleId) {
            this.DeleteRoleAsync(context, roleId, null);
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(SecurityContext context, int roleId, object userState) {
            if ((this.DeleteRoleOperationCompleted == null)) {
                this.DeleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteRole", new object[] {
                        context,
                        roleId}, this.DeleteRoleOperationCompleted, userState);
        }
        
        private void OnDeleteRoleOperationCompleted(object arg) {
            if ((this.DeleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoleCompleted(this, new DeleteRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/AddRoleMember", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RoleMember AddRoleMember(SecurityContext context, int roleId, RoleMember member) {
            object[] results = this.Invoke("AddRoleMember", new object[] {
                        context,
                        roleId,
                        member});
            return ((RoleMember)(results[0]));
        }
        
        /// <remarks/>
        public void AddRoleMemberAsync(SecurityContext context, int roleId, RoleMember member) {
            this.AddRoleMemberAsync(context, roleId, member, null);
        }
        
        /// <remarks/>
        public void AddRoleMemberAsync(SecurityContext context, int roleId, RoleMember member, object userState) {
            if ((this.AddRoleMemberOperationCompleted == null)) {
                this.AddRoleMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRoleMemberOperationCompleted);
            }
            this.InvokeAsync("AddRoleMember", new object[] {
                        context,
                        roleId,
                        member}, this.AddRoleMemberOperationCompleted, userState);
        }
        
        private void OnAddRoleMemberOperationCompleted(object arg) {
            if ((this.AddRoleMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRoleMemberCompleted(this, new AddRoleMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/DeleteRoleMember", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RoleMember DeleteRoleMember(SecurityContext context, int roleId, RoleMember member) {
            object[] results = this.Invoke("DeleteRoleMember", new object[] {
                        context,
                        roleId,
                        member});
            return ((RoleMember)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRoleMemberAsync(SecurityContext context, int roleId, RoleMember member) {
            this.DeleteRoleMemberAsync(context, roleId, member, null);
        }
        
        /// <remarks/>
        public void DeleteRoleMemberAsync(SecurityContext context, int roleId, RoleMember member, object userState) {
            if ((this.DeleteRoleMemberOperationCompleted == null)) {
                this.DeleteRoleMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoleMemberOperationCompleted);
            }
            this.InvokeAsync("DeleteRoleMember", new object[] {
                        context,
                        roleId,
                        member}, this.DeleteRoleMemberOperationCompleted, userState);
        }
        
        private void OnDeleteRoleMemberOperationCompleted(object arg) {
            if ((this.DeleteRoleMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoleMemberCompleted(this, new DeleteRoleMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/ClearRoleMembers", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState ClearRoleMembers(SecurityContext context, int roleId) {
            object[] results = this.Invoke("ClearRoleMembers", new object[] {
                        context,
                        roleId});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void ClearRoleMembersAsync(SecurityContext context, int roleId) {
            this.ClearRoleMembersAsync(context, roleId, null);
        }
        
        /// <remarks/>
        public void ClearRoleMembersAsync(SecurityContext context, int roleId, object userState) {
            if ((this.ClearRoleMembersOperationCompleted == null)) {
                this.ClearRoleMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearRoleMembersOperationCompleted);
            }
            this.InvokeAsync("ClearRoleMembers", new object[] {
                        context,
                        roleId}, this.ClearRoleMembersOperationCompleted, userState);
        }
        
        private void OnClearRoleMembersOperationCompleted(object arg) {
            if ((this.ClearRoleMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearRoleMembersCompleted(this, new ClearRoleMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/CreateDefinition64", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateDefinition64() {
            object[] results = this.Invoke("CreateDefinition64", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDefinition64Async() {
            this.CreateDefinition64Async(null);
        }
        
        /// <remarks/>
        public void CreateDefinition64Async(object userState) {
            if ((this.CreateDefinition64OperationCompleted == null)) {
                this.CreateDefinition64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDefinition64OperationCompleted);
            }
            this.InvokeAsync("CreateDefinition64", new object[0], this.CreateDefinition64OperationCompleted, userState);
        }
        
        private void OnCreateDefinition64OperationCompleted(object arg) {
            if ((this.CreateDefinition64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDefinition64Completed(this, new CreateDefinition64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategycompanion.com/webservices/AppendDefinition64", RequestNamespace="http://strategycompanion.com/webservices/", ResponseNamespace="http://strategycompanion.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaseState AppendDefinition64(int handle, string definition64) {
            object[] results = this.Invoke("AppendDefinition64", new object[] {
                        handle,
                        definition64});
            return ((BaseState)(results[0]));
        }
        
        /// <remarks/>
        public void AppendDefinition64Async(int handle, string definition64) {
            this.AppendDefinition64Async(handle, definition64, null);
        }
        
        /// <remarks/>
        public void AppendDefinition64Async(int handle, string definition64, object userState) {
            if ((this.AppendDefinition64OperationCompleted == null)) {
                this.AppendDefinition64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppendDefinition64OperationCompleted);
            }
            this.InvokeAsync("AppendDefinition64", new object[] {
                        handle,
                        definition64}, this.AppendDefinition64OperationCompleted, userState);
        }
        
        private void OnAppendDefinition64OperationCompleted(object arg) {
            if ((this.AppendDefinition64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppendDefinition64Completed(this, new AppendDefinition64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class SecurityContext : BaseState {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RoleMember))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LogPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SystemLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomButton))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdditionalCube))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PivotTable))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReportInstance))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PermissionInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectPermission))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CatalogItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(User))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Role))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SecurityContext))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class BaseState {
        
        private bool successField;
        
        private string messageField;
        
        private string sourceField;
        
        private string stackTraceField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Measure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Dimension))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class CubeElement {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class Measure : CubeElement {
        
        private MeasureTypes measureTypeField;
        
        /// <remarks/>
        public MeasureTypes MeasureType {
            get {
                return this.measureTypeField;
            }
            set {
                this.measureTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum MeasureTypes {
        
        /// <remarks/>
        Regular,
        
        /// <remarks/>
        KPIAll,
        
        /// <remarks/>
        KPIValue,
        
        /// <remarks/>
        KPIGoal,
        
        /// <remarks/>
        KPIStatus,
        
        /// <remarks/>
        KPITrend,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class Dimension : CubeElement {
        
        private DimensionTypes dimensionTypeField;
        
        /// <remarks/>
        public DimensionTypes DimensionType {
            get {
                return this.dimensionTypeField;
            }
            set {
                this.dimensionTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum DimensionTypes {
        
        /// <remarks/>
        Hierarchy,
        
        /// <remarks/>
        Dimension,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class RoleMember : BaseState {
        
        private int roleIdField;
        
        private int memberIdField;
        
        private RoleMemberType memberTypeField;
        
        /// <remarks/>
        public int RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public RoleMemberType MemberType {
            get {
                return this.memberTypeField;
            }
            set {
                this.memberTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum RoleMemberType {
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Group,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class LogPolicy : BaseState {
        
        private bool loginField;
        
        private bool createObjectField;
        
        private bool openObjectField;
        
        private bool modifyObjectField;
        
        private bool deleteObjectField;
        
        private bool executeObjectField;
        
        private bool copyObjectField;
        
        private bool sendObjectField;
        
        private int maxRecordsField;
        
        private bool backupBeforeTruncateField;
        
        /// <remarks/>
        public bool Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public bool CreateObject {
            get {
                return this.createObjectField;
            }
            set {
                this.createObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool OpenObject {
            get {
                return this.openObjectField;
            }
            set {
                this.openObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool ModifyObject {
            get {
                return this.modifyObjectField;
            }
            set {
                this.modifyObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool DeleteObject {
            get {
                return this.deleteObjectField;
            }
            set {
                this.deleteObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool ExecuteObject {
            get {
                return this.executeObjectField;
            }
            set {
                this.executeObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool CopyObject {
            get {
                return this.copyObjectField;
            }
            set {
                this.copyObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool SendObject {
            get {
                return this.sendObjectField;
            }
            set {
                this.sendObjectField = value;
            }
        }
        
        /// <remarks/>
        public int MaxRecords {
            get {
                return this.maxRecordsField;
            }
            set {
                this.maxRecordsField = value;
            }
        }
        
        /// <remarks/>
        public bool BackupBeforeTruncate {
            get {
                return this.backupBeforeTruncateField;
            }
            set {
                this.backupBeforeTruncateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class SystemLog : BaseState {
        
        private int idField;
        
        private int objectIdField;
        
        private string objectNameField;
        
        private string objectTypeField;
        
        private string actionField;
        
        private int userIdField;
        
        private string userNameField;
        
        private string userHostField;
        
        private System.DateTime logTimeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserHost {
            get {
                return this.userHostField;
            }
            set {
                this.userHostField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LogTime {
            get {
                return this.logTimeField;
            }
            set {
                this.logTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class CustomButton : BaseState {
        
        private string nameField;
        
        private string iconField;
        
        private string hintField;
        
        private string scriptField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public string Hint {
            get {
                return this.hintField;
            }
            set {
                this.hintField = value;
            }
        }
        
        /// <remarks/>
        public string Script {
            get {
                return this.scriptField;
            }
            set {
                this.scriptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class AdditionalCube : BaseState {
        
        private int dataSourceIdField;
        
        private string databaseNameField;
        
        private string cubeNameField;
        
        /// <remarks/>
        public int DataSourceId {
            get {
                return this.dataSourceIdField;
            }
            set {
                this.dataSourceIdField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseName {
            get {
                return this.databaseNameField;
            }
            set {
                this.databaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string CubeName {
            get {
                return this.cubeNameField;
            }
            set {
                this.cubeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class PivotTable : BaseState {
        
        private Dimension[] rowsField;
        
        private Dimension[] columnsField;
        
        private Dimension[] slicerField;
        
        private Measure[] measuresField;
        
        /// <remarks/>
        public Dimension[] Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
        
        /// <remarks/>
        public Dimension[] Columns {
            get {
                return this.columnsField;
            }
            set {
                this.columnsField = value;
            }
        }
        
        /// <remarks/>
        public Dimension[] Slicer {
            get {
                return this.slicerField;
            }
            set {
                this.slicerField = value;
            }
        }
        
        /// <remarks/>
        public Measure[] Measures {
            get {
                return this.measuresField;
            }
            set {
                this.measuresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class ReportInstance : BaseState {
        
        private string idField;
        
        private int reportIdField;
        
        private string[] componentNamesField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ReportId {
            get {
                return this.reportIdField;
            }
            set {
                this.reportIdField = value;
            }
        }
        
        /// <remarks/>
        public string[] ComponentNames {
            get {
                return this.componentNamesField;
            }
            set {
                this.componentNamesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class PermissionInfo : BaseState {
        
        private PermissionState readField;
        
        private PermissionState writeField;
        
        private PermissionState executeField;
        
        private PermissionState exportField;
        
        /// <remarks/>
        public PermissionState Read {
            get {
                return this.readField;
            }
            set {
                this.readField = value;
            }
        }
        
        /// <remarks/>
        public PermissionState Write {
            get {
                return this.writeField;
            }
            set {
                this.writeField = value;
            }
        }
        
        /// <remarks/>
        public PermissionState Execute {
            get {
                return this.executeField;
            }
            set {
                this.executeField = value;
            }
        }
        
        /// <remarks/>
        public PermissionState Export {
            get {
                return this.exportField;
            }
            set {
                this.exportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum PermissionState {
        
        /// <remarks/>
        NotSpecified,
        
        /// <remarks/>
        Grant,
        
        /// <remarks/>
        Deny,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class ObjectPermission : BaseState {
        
        private int objectIdField;
        
        private int memberIdField;
        
        private SecurityMemberType memberTypeField;
        
        private int permissionField;
        
        private PermissionInfo permissionInfoField;
        
        /// <remarks/>
        public int ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public SecurityMemberType MemberType {
            get {
                return this.memberTypeField;
            }
            set {
                this.memberTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Permission {
            get {
                return this.permissionField;
            }
            set {
                this.permissionField = value;
            }
        }
        
        /// <remarks/>
        public PermissionInfo PermissionInfo {
            get {
                return this.permissionInfoField;
            }
            set {
                this.permissionInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum SecurityMemberType {
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Group,
        
        /// <remarks/>
        Role,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(User))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Role))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class CatalogItem : BaseState {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private CatalogItemType itemTypeField;
        
        private int parentIdField;
        
        private string pathField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime modifiedDateField;
        
        private int createdByField;
        
        private int modifiedByField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public CatalogItemType ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public int ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum CatalogItemType {
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        Report,
        
        /// <remarks/>
        DataSource,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class User : CatalogItem {
        
        private string eMailAddressField;
        
        private SystemLanguages preferredLanguageField;
        
        private RowsPerPage rowsPerPageField;
        
        private DefaultHomePages defaultHomePageField;
        
        private bool allowSendMessageField;
        
        /// <remarks/>
        public string EMailAddress {
            get {
                return this.eMailAddressField;
            }
            set {
                this.eMailAddressField = value;
            }
        }
        
        /// <remarks/>
        public SystemLanguages PreferredLanguage {
            get {
                return this.preferredLanguageField;
            }
            set {
                this.preferredLanguageField = value;
            }
        }
        
        /// <remarks/>
        public RowsPerPage RowsPerPage {
            get {
                return this.rowsPerPageField;
            }
            set {
                this.rowsPerPageField = value;
            }
        }
        
        /// <remarks/>
        public DefaultHomePages DefaultHomePage {
            get {
                return this.defaultHomePageField;
            }
            set {
                this.defaultHomePageField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowSendMessage {
            get {
                return this.allowSendMessageField;
            }
            set {
                this.allowSendMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum SystemLanguages {
        
        /// <remarks/>
        English,
        
        /// <remarks/>
        TradChinese,
        
        /// <remarks/>
        SimpChinese,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum RowsPerPage {
        
        /// <remarks/>
        Fifteen,
        
        /// <remarks/>
        Thirty,
        
        /// <remarks/>
        Fifty,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum DefaultHomePages {
        
        /// <remarks/>
        WorkingArea,
        
        /// <remarks/>
        SharedReports,
        
        /// <remarks/>
        PersonalReports,
        
        /// <remarks/>
        KPIWatchList,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class DataSource : CatalogItem {
        
        private DataSourceType sourceTypeField;
        
        private string serverNameField;
        
        private string initialCatalogField;
        
        /// <remarks/>
        public DataSourceType SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ServerName {
            get {
                return this.serverNameField;
            }
            set {
                this.serverNameField = value;
            }
        }
        
        /// <remarks/>
        public string InitialCatalog {
            get {
                return this.initialCatalogField;
            }
            set {
                this.initialCatalogField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum DataSourceType {
        
        /// <remarks/>
        SqlAs2000,
        
        /// <remarks/>
        SqlAs2005,

		/// <remarks/>
		SqlAs2005Or2008,

		/// <remarks/>
		SqlAs2012,

		/// <remarks/>
		SqlAs2012Tabular,

    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public partial class Role : CatalogItem {
        
        private SystemLanguages preferredLanguageField;
        
        /// <remarks/>
        public SystemLanguages PreferredLanguage {
            get {
                return this.preferredLanguageField;
            }
            set {
                this.preferredLanguageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum PPSModes {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        DesignTime,
        
        /// <remarks/>
        Runtime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategycompanion.com/webservices/")]
    public enum ToolbarButton {
        
        /// <remarks/>
        DataSource,
        
        /// <remarks/>
        SchemaTree,
        
        /// <remarks/>
        ObjectPanel,
        
        /// <remarks/>
        BookmarkPanel,
        
        /// <remarks/>
        KPIPanel,
        
        /// <remarks/>
        LanguagePanel,
        
        /// <remarks/>
        Save,
        
        /// <remarks/>
        SaveAs,
        
        /// <remarks/>
        SendMsg,
        
        /// <remarks/>
        CreateBookmark,
        
        /// <remarks/>
        UpdateBookmark,
        
        /// <remarks/>
        Close,
        
        /// <remarks/>
        Config,
        
        /// <remarks/>
        PlayVideo,
        
        /// <remarks/>
        Refresh,
        
        /// <remarks/>
        ZoomIn,
        
        /// <remarks/>
        ZoomOut,
        
        /// <remarks/>
        ResetZoom,
        
        /// <remarks/>
        SwitchBorder,
        
        /// <remarks/>
        Excel,
        
        /// <remarks/>
        Print,
        
        /// <remarks/>
         ManageSubscr,
        
        /// <remarks/>
        Subscribe,
        
        /// <remarks/>
        Theme,
        
        /// <remarks/>
        EntireToolbar,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportBookmarkCompletedEventHandler(object sender, ImportBookmarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportBookmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportBookmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportReportCompletedEventHandler(object sender, ImportReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportReportWithDataSourceInfoCompletedEventHandler(object sender, ImportReportWithDataSourceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportReportWithDataSourceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportReportWithDataSourceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListReportNullRefDataSourcesCompletedEventHandler(object sender, ListReportNullRefDataSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListReportNullRefDataSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListReportNullRefDataSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportFolderCompletedEventHandler(object sender, ImportFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportDataSourceCompletedEventHandler(object sender, ImportDataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportDataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfigMailServerCompletedEventHandler(object sender, ConfigMailServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfigMailServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfigMailServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetObjectPermissionsCompletedEventHandler(object sender, GetObjectPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObjectPermission[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObjectPermission[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserPermissionCompletedEventHandler(object sender, GetUserPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserRolesCompletedEventHandler(object sender, GetUserRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsDescendFromCompletedEventHandler(object sender, IsDescendFromCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDescendFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDescendFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogonUserCompletedEventHandler(object sender, LogonUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogonUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogonUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityContext Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityContext)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogonUserWithRolesCompletedEventHandler(object sender, LogonUserWithRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogonUserWithRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogonUserWithRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityContext Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityContext)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogonUserWithCompanyIdCompletedEventHandler(object sender, LogonUserWithCompanyIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogonUserWithCompanyIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogonUserWithCompanyIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityContext Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityContext)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogoffUserCompletedEventHandler(object sender, LogoffUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoffUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoffUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityContext Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityContext)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListChildrenCompletedEventHandler(object sender, ListChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindCatalogItemByIdCompletedEventHandler(object sender, FindCatalogItemByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCatalogItemByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCatalogItemByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindCatalogItemByNameCompletedEventHandler(object sender, FindCatalogItemByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCatalogItemByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCatalogItemByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateFolderCompletedEventHandler(object sender, CreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFolderCompletedEventHandler(object sender, UpdateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFolderCompletedEventHandler(object sender, DeleteFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetPPSModeCompletedEventHandler(object sender, SetPPSModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPPSModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPPSModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateReportCompletedEventHandler(object sender, CreateReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateReportAllowDuplicatedCompletedEventHandler(object sender, CreateReportAllowDuplicatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReportAllowDuplicatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReportAllowDuplicatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateReportWithOptionsCompletedEventHandler(object sender, CreateReportWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReportWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReportWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateReportWithOptions2CompletedEventHandler(object sender, CreateReportWithOptions2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReportWithOptions2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReportWithOptions2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateReportCompletedEventHandler(object sender, UpdateReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteReportCompletedEventHandler(object sender, DeleteReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReportLinkUrlCompletedEventHandler(object sender, GetReportLinkUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportLinkUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportLinkUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReportInstanceUrlCompletedEventHandler(object sender, GetReportInstanceUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportInstanceUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportInstanceUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSecureReportInstanceUrlCompletedEventHandler(object sender, GetSecureReportInstanceUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecureReportInstanceUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecureReportInstanceUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OpenReportCompletedEventHandler(object sender, OpenReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OpenReportWithOptionsCompletedEventHandler(object sender, OpenReportWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenReportWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenReportWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OpenReportWithOptions2CompletedEventHandler(object sender, OpenReportWithOptions2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenReportWithOptions2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenReportWithOptions2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddAdditionalCubesCompletedEventHandler(object sender, AddAdditionalCubesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdditionalCubesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdditionalCubesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearAdditionalCubesCompletedEventHandler(object sender, ClearAdditionalCubesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearAdditionalCubesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearAdditionalCubesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InitializeCubeCompletedEventHandler(object sender, InitializeCubeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeCubeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeCubeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InitializePivotTableCompletedEventHandler(object sender, InitializePivotTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializePivotTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializePivotTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HideToolbarButtonsCompletedEventHandler(object sender, HideToolbarButtonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HideToolbarButtonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HideToolbarButtonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddCustomToolbarButtonsCompletedEventHandler(object sender, AddCustomToolbarButtonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCustomToolbarButtonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCustomToolbarButtonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearCustomToolbarButtonsCompletedEventHandler(object sender, ClearCustomToolbarButtonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCustomToolbarButtonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCustomToolbarButtonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HideSchemaTreePanelCompletedEventHandler(object sender, HideSchemaTreePanelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HideSchemaTreePanelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HideSchemaTreePanelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AssignReportFilterCompletedEventHandler(object sender, AssignReportFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignReportFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignReportFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveReportCompletedEventHandler(object sender, SaveReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveReportAsCompletedEventHandler(object sender, SaveReportAsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportAsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportAsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CloseReportCompletedEventHandler(object sender, CloseReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportInstance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListDataSourcesCompletedEventHandler(object sender, ListDataSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDataSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDataSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSource[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSource[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDataSourceCompletedEventHandler(object sender, CreateDataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSource Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSource)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDataSourceCompletedEventHandler(object sender, UpdateDataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSource Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSource)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDataSourceCompletedEventHandler(object sender, DeleteDataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSource Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSource)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddObjectPermissionCompletedEventHandler(object sender, AddObjectPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddObjectPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddObjectPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeObjectPermissionCompletedEventHandler(object sender, ChangeObjectPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeObjectPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeObjectPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveObjectPermissionCompletedEventHandler(object sender, RemoveObjectPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveObjectPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveObjectPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearObjectPermissionsCompletedEventHandler(object sender, ClearObjectPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearObjectPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearObjectPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InheritParentPermissionsCompletedEventHandler(object sender, InheritParentPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InheritParentPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InheritParentPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListSystemLogsCompletedEventHandler(object sender, ListSystemLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSystemLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSystemLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TruncateSystemLogCompletedEventHandler(object sender, TruncateSystemLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TruncateSystemLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TruncateSystemLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackupSystemLogCompletedEventHandler(object sender, BackupSystemLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupSystemLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupSystemLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeSystemLogPolicyCompletedEventHandler(object sender, ChangeSystemLogPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeSystemLogPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeSystemLogPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListUsersCompletedEventHandler(object sender, ListUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindUserByIdCompletedEventHandler(object sender, FindUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindUserByNameCompletedEventHandler(object sender, FindUserByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUserByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUserByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurrentUserCompletedEventHandler(object sender, GetCurrentUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListRolesCompletedEventHandler(object sender, ListRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindRoleByIdCompletedEventHandler(object sender, FindRoleByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindRoleByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindRoleByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindRoleByNameCompletedEventHandler(object sender, FindRoleByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindRoleByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindRoleByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateRoleCompletedEventHandler(object sender, CreateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateRoleCompletedEventHandler(object sender, UpdateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteRoleCompletedEventHandler(object sender, DeleteRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddRoleMemberCompletedEventHandler(object sender, AddRoleMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRoleMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRoleMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RoleMember Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RoleMember)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteRoleMemberCompletedEventHandler(object sender, DeleteRoleMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRoleMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRoleMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RoleMember Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RoleMember)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearRoleMembersCompletedEventHandler(object sender, ClearRoleMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearRoleMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearRoleMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDefinition64CompletedEventHandler(object sender, CreateDefinition64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDefinition64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDefinition64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AppendDefinition64CompletedEventHandler(object sender, AppendDefinition64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppendDefinition64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppendDefinition64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaseState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaseState)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591