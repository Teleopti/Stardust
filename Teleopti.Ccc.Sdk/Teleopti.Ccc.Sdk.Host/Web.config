<?xml version="1.0" encoding="utf-8"?>
<!--
	Note: As an alternative to hand editing this file you can use the 
	web admin tool to configure settings for your application. Use
	the Website->Asp.Net Configuration option in Visual Studio.
	A full list of settings and comments can be found in 
	machine.config.comments usually located in 
	\Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
    <sectionGroup name="teleopti">
      <section name="publishedSettings" type="System.Configuration.NameValueSectionHandler" />
    </sectionGroup>
    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
          <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere" />
          <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
  </configSections>
  <appSettings file="site.config">
    <!--WISEMETA: value="[SDK]"-->
    <add key="EnableAutoDenyAbsenceRequest" value="true" />
    <add key="SitePath" value="C:\Temp" />
  </appSettings>
  <log4net>
    <appender name="file" type="log4net.Appender.RollingFileAppender">
      <file value="log.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100KB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--dev help-->
    <root>
      <!--priority value can be set to ALL|DEBUG|INFO|WARN|ERROR|FATAL-->
      <level value="ERROR" />
      <appender-ref ref="file" />
    </root>
    <logger name="MbCache">
      <level value="Debug" />
    </logger>
  </log4net>
  <teleopti>
    <publishedSettings>
      <!--WISEMETA: value="[CONTEXT_HELP_URL]"-->
      <add key="HelpUrl" value="http://ANDERSFNC8430/TeleoptiCCC/ContextHelp/" />
      <add key="HelpUrlOnline" value="http://onlinehelp.teleopti.com/ccc/dev/" />
      <add key="HelpPrefixOnline" value="f01:" />
      <add key="HelpDividerOnline" value="+" />
      <add key="HelpSuffixOnline" value="" />
      <!--WISEMETA: value="[CONTEXT_HELP_Prefix]"-->
      <add key="HelpPrefix" value="f01:" />
      <!--WISEMETA: value="[CONTEXT_HELP_Divider]"-->
      <add key="HelpDivider" value="+" />
      <!--WISEMETA: value="[CONTEXT_HELP_Suffix]"-->
      <add key="HelpSuffix" value=" " />
      <!--WISEMETA: value="[MATRIX_WEB_SITE_URL]"-->
      <!--<add key="MatrixWebSiteUrl" value="http://localhost/Analytics"/>-->
      <add key="MatrixWebSiteUrl" value="http://localhost:1335" />
      <!--WISEMETA: value="[SQL_AUTH_STRING];Application Name=Teleopti.Ccc.Sdk.Host;Initial Catalog=[DB_MESSAGING]"-->
      <add key="MessageBroker" value="Data Source=.;Initial Catalog=PBI17243_Demoreg_TeleoptiAnalytics;Persist Security Info=True;User ID=sa;Password=cadadi" />
      <!--<add key="MessageBroker" value="Data Source=.;Initial Catalog=TeleoptiAnalytics;Persist Security Info=True;User ID=sa;Password=cadadi" />-->
      <!--<add key="MessageBroker" value="Data Source=TELEOPTI546;User Id=sa;Password=cadadi;Initial Catalog=Demoreg_TeleoptiAnalytics;Application name=Teleopti.MessageBroker"/>-->
      <add key="SharedKey" value="UUhPdWVyM0xNMVJlVDFzRi84Y25KR3dueU9mOUdoYXI=" />
      <add key="SharedIV" value="VW4xdmtPRCtYQVA2NmlyUw==" />
    </publishedSettings>
  </teleopti>
  <connectionStrings />
  <system.web>
    <!--<sessionState timeout="1"></sessionState>-->
    <!--
			Set compilation debug="true" to insert debugging 
			symbols into the compiled page. Because this 
			affects performance, set this value to true only 
			during development.
		-->
    <compilation debug="true">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!--
			The <authentication> section enables configuration 
			of the security authentication mode used by 
			ASP.NET to identify an incoming user. 
		-->
    <authentication mode="Windows" />
    <!--
			The <customErrors> section enables configuration 
			of what to do if/when an unhandled error occurs 
			during the execution of a request. Specifically, 
			it enables developers to configure html error pages 
			to be displayed in place of a error stack trace.

		<customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
			<error statusCode="403" redirect="NoAccess.htm" />
			<error statusCode="404" redirect="FileNotFound.htm" />
		</customErrors>
		-->
    <pages>
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </controls>
    </pages>
    <httpHandlers>
      <remove verb="*" path="*.asmx" />
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false" />
    </httpHandlers>
    <httpModules>
      <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </httpModules>
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5" />
        <providerOption name="WarnAsError" value="false" />
      </compiler>
    </compilers>
  </system.codedom>
  <!--
		The system.webServer section is required for running ASP.NET AJAX under Internet
		Information Services 7.0.  It is not necessary for previous version of IIS.
	-->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules>
      <add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated" />
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </handlers>
  </system.webServer>
  <!-- uncomment this if you want to log WCF communication (to get the complete log, you have to flush it by closing the host)
  <system.diagnostics>
	<sources>
	  <source name="System.ServiceModel" switchValue="All,ActivityTracing"
			  propagateActivity="true">
		<listeners>
		  <add initializeData="c:\temp\TeleoptiSDK.svclog" type="System.Diagnostics.XmlWriterTraceListener"
			   name="traceListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId">
		  </add>
		</listeners>
	  </source>
	  <source name="System.ServiceModel.MessageLogging" switchValue="Verbose,ActivityTracing">
		<listeners>
		  <add name="messageListener">
		  </add>
		</listeners>
	  </source>
	</sources>
	<sharedListeners>
	  <add initializeData="c:\temp\TeleoptiSDKMessages.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	  name="messageListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId">
	  </add>
	</sharedListeners>
  </system.diagnostics>
  -->
  <system.serviceModel>
    <!-- uncomment this if you want to log WCF communication messages
	<diagnostics>
	  <messageLogging logEntireMessage="true" logMalformedMessages="true"
		logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
	</diagnostics>
	-->
    <extensions>
      <!--<behaviorExtensions>
  <add name="wsdlExtensions" type="WCFExtras.Wsdl.WsdlExtensionsConfig, WCFExtras, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
</behaviorExtensions>-->
    </extensions>
    <services>
      <service behaviorConfiguration="Host2.TeleoptiCccSdkServiceBehavior" name="Teleopti.Ccc.Sdk.WcfService.TeleoptiCccSdkService">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_withSize" name="TeleoptiCccSdkService" contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiCccSdkService" behaviorConfiguration="Sample.WsdlSampleEndpointBehavior" bindingNamespace="http://schemas.ccc.teleopti.com/sdk/2010/04/">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_withSize" name="TeleoptiCccLogOnService" contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiCccLogOnService" behaviorConfiguration="Sample.WsdlSampleEndpointBehavior" bindingNamespace="http://schemas.ccc.teleopti.com/sdk/2010/04/">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_withSize" contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiForecastingService" name="TeleoptiForecastingService" behaviorConfiguration="Sample.WsdlSampleEndpointBehavior" bindingNamespace="http://schemas.ccc.teleopti.com/sdk/2010/04/">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_withSize" contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiSchedulingService" name="TeleoptiSchedulingService" behaviorConfiguration="Sample.WsdlSampleEndpointBehavior" bindingNamespace="http://schemas.ccc.teleopti.com/sdk/2010/04/">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_withSize" contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiOrganizationService" name="TeleoptiOrganizationService" behaviorConfiguration="Sample.WsdlSampleEndpointBehavior" bindingNamespace="http://schemas.ccc.teleopti.com/sdk/2010/04/">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_withSize" contract="Teleopti.Ccc.Sdk.Common.Contracts.ITeleoptiCccSdkInternal" name="TeleoptiOrganizationService" behaviorConfiguration="Sample.WsdlSampleEndpointBehavior" bindingNamespace="http://schemas.ccc.teleopti.com/sdk/2010/04/">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttpBinding_withSize" maxReceivedMessageSize="10000000" maxBufferSize="10000000">
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Ntlm" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="Sample.WsdlSampleEndpointBehavior">
          <!--<wsdlExtensions location="http://localhost:1335/teleopticccsdkservice.svc" singleFile="true"/>-->
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="Host2.TeleoptiCccSdkServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="Teleopti.Ccc.Sdk.WcfService.LogOn.CustomAuthorizationManager, Teleopti.Ccc.Sdk.WcfSdkService">
            <!-- 
          The serviceAuthorization behavior allows one to specify custom authorization policies.
          -->
            <authorizationPolicies>
              <add policyType="Teleopti.Ccc.Sdk.WcfService.LogOn.ClaimSetAuthorizationPolicy, Teleopti.Ccc.Sdk.WcfSdkService" />
            </authorizationPolicies>
          </serviceAuthorization>
          <dataContractSerializer maxItemsInObjectGraph="2147483646" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Rhino.Queues" publicKeyToken="0b3305902db7183f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.4.2.0" newVersion="1.4.2.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>