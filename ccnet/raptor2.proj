<?xml version="1.0"?>
<!--EXTERNAL_PROPERTIES: CCNetProject;CCNetWorkingDirectory-->
<Project DefaultTargets="BuildAndTest" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

	<PropertyGroup>
		<MsBuildPath>$(CCNetWorkingDirectory)\ccnet\MSBuild</MsBuildPath>
		<MSBuildCommunityTasksPath>$(CCNetWorkingDirectory)\.nuget\packages\MSBuildTasks.1.4.0.65\tools</MSBuildCommunityTasksPath>
		<DBNamePrefix>$(CCNetProject)</DBNamePrefix>
		<AzureDBNamePrefix>$(Computername)_$(CCNetProject)</AzureDBNamePrefix>
		<NugetPackages>$(CCNetWorkingDirectory)\packages</NugetPackages>
		<DBServer>$(Computername)</DBServer>
		<DBServerSQL2005>$(Computername)\SQL2005</DBServerSQL2005>
		<DoCodeAnalysis>false</DoCodeAnalysis>
		<RunWebBehaviorTests>true</RunWebBehaviorTests>
		<AgentPortalWebSiteName>$(CCNetProject)-AgentPortalWeb</AgentPortalWebSiteName>
	
		<vs2010ide>C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\devenv.exe</vs2010ide>
		<AsDBDeploy>C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\Microsoft.AnalysisServices.Deployment.exe</AsDBDeploy>

		<AzureDeploy>false</AzureDeploy>
		<SQL2005Deploy>false</SQL2005Deploy>
		<AzureDeploy Condition="'$(CCNetProject)' == 'EtlAndAzure'">true</AzureDeploy>
		<SQL2005Deploy Condition="'$(CCNetProject)' == 'EtlAndAzure'">true</SQL2005Deploy>
		<AzureAnalyticsReportTest>false</AzureAnalyticsReportTest>
		<AzureAnalyticsReportTest Condition="'$(CCNetProject)' == 'EtlAndAzure'">true</AzureAnalyticsReportTest>
		<AzureServer>s8v4m110k9.database.windows.net</AzureServer>
		<AzureMasterLogin>teleopti@s8v4m110k9</AzureMasterLogin>
		<AzureMasterPwd>T3l30pt1</AzureMasterPwd>
		<AzureDbLogin>ccnet</AzureDbLogin>
		<AzureDbPwd>V3rrYH@Passw0rd!</AzureDbPwd>
		<AzureMasterConn>SQLCMD -Stcp:$(AzureServer) -U$(AzureMasterLogin) -P$(AzureMasterPwd) -dmaster</AzureMasterConn>
		<DBManagerAzure>-S$(AzureServer) -U$(AzureMasterLogin) -P$(AzureMasterPwd) -T -C -L$(AzureDbLogin):$(AzureDbPwd)</DBManagerAzure>
		<DatabasePath>"$(CCNetWorkingDirectory)\database"</DatabasePath>

		
		<NDependTransferDataPath>C:\NDepend\NDependXmlToDb\NDependXmlToDb.exe</NDependTransferDataPath>
	</PropertyGroup>
	<Import Project="$(CCNetWorkingDirectory)\ccnet\movefilesToDeploymentPipeline.msbuild"/>
	<Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>
	<UsingTask TaskName="NCover.MSBuildTasks.NCover"  AssemblyFile="$(CCNetWorkingDirectory)\packages\Teleopti.NCover64.1.0.0\content\Build Task Plugins\NCover.MSBuildTasks.dll"/>
	<UsingTask TaskName="NCover.MSBuildTasks.NCoverReporting" AssemblyFile="$(CCNetWorkingDirectory)\packages\Teleopti.NCover64.1.0.0\content\Build Task Plugins\NCover.MSBuildTasks.dll" />
	<UsingTask AssemblyFile="$(CCNetWorkingDirectory)\packages\MSBuild.Extension.Pack.1.3.0\tools\net40\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.SqlServer.SqlExecute"/>

	<PropertyGroup>
		<NUnitExe>"$(NugetPackages)\NUnit.Runners.2.6.2\tools\nunit-console.exe"</NUnitExe>
		<NUnitArgs>/nologo /noshadow /config=$(Configuration) /domain=Multiple</NUnitArgs>
		<TrunkDbCreator>"$(CCNetWorkingDirectory)\Database\Tools\VersionTry.bat"</TrunkDbCreator>

		<CoverageReports>
			<Report>
				<ReportType>SymbolModule</ReportType>
				<Format>Xml</Format>
				<OutputPath>$(CCNetWorkingDirectory)\symbolmodule.xml</OutputPath>
			</Report>
		</CoverageReports>
		<MinimumCoverage>
			<Threshold>
				<CoverageMetric>SymbolCoverage</CoverageMetric>
				<Type>Assembly</Type>
				<Value>0</Value>
				<Pattern>.*</Pattern>
			</Threshold>
		</MinimumCoverage>
		<SatisfactoryCoverage>
			<Threshold>
				<CoverageMetric>SymbolCoverage</CoverageMetric>
				<Value>0</Value>
			</Threshold>
			<Threshold>
				<CoverageMetric>BranchCoverage</CoverageMetric>
				<Value>0</Value>
			</Threshold>
		</SatisfactoryCoverage>
	</PropertyGroup>

	<ItemGroup>
		<SolutionFile Include="$(CCNetWorkingDirectory)\cruisecontrol.sln;$(CCNetWorkingDirectory)\Teleopti.Runtime.Environment.sln" />
		<SQLFiles Include="$(CCNetWorkingDirectory)\Database\Tools\PK-namingStandard.sql"/>
		<SQLFiles Include="$(CCNetWorkingDirectory)\Database\Tools\NoHeapsCheck.sql"/>
		<AnalyticsReportsTest Include="$(CCNetWorkingDirectory)\Database\Tools\AnalyticsReportsCompile.sql"/>
	</ItemGroup>

	<Target Name="BuildAndTest" DependsOnTargets="ScriptTest;NCoverReporting;CopyNDependStatisticsToDatabase">
		<Message Importance="high" Text="BuildAndTest finished" />
	</Target>
	
	<Target Name="ScriptTest">
		<Message Importance="high" Text="Running pester tests ..." />
			
		<Exec Command="&quot;$(CCNetWorkingDirectory)\ccnet\pester\runAllTests.bat&quot;" />
	
	</Target>

	<Target Name="Compile" DependsOnTargets="CreateAnalyticsDb;BuildSSASXmla">
		<Message Importance="high" Text="Compile starting..." />

		<MSBuild Projects="@(SolutionFile)"
				Properties="Configuration=$(Configuration);Platform=Any CPU;TreatWarningsAsErrors=true;RunCodeAnalysis=$(DoCodeAnalysis);"
				BuildInParallel = "true"
				Targets="Build">
		</MSBuild>

		<Message Importance="high" Text="Compile finished." />
		<CallTarget Targets="MoveFilesToPipeLine" Condition="'$(CCNetProject)'=='CCC-Main'"/>
	</Target>
		
    <Target Name="BuildSSASXmla" Condition="Exists('$(vs2010ide)') And Exists('$(AsDBDeploy)')">

		<Message Text="Building dwproj-file ..." Importance="high" />
		<Exec Command="&quot;$(vs2010ide)&quot; &quot;$(CCNetWorkingDirectory)\Cube\TeleoptiAnalytics\TeleoptiAnalytics.sln&quot; /rebuild CreateDatabase2005 /Log &quot;c:\Temp\devenv_log_$(CCNetProject)_$(CCNetLabel).txt&quot;" />
		<Message Text="Building dwproj-file. Done!" Importance="high" />

		<Message Text="Creating XMLA ..." Importance="high" />
		<Exec Command="&quot;$(AsDBDeploy)&quot; &quot;$(CCNetWorkingDirectory)\Cube\TeleoptiAnalytics\bin\TeleoptiAnalytics.asdatabase&quot; /d /o:&quot;$(CCNetWorkingDirectory)\Cube\Xmla\CreateDatabase.xmla&quot;"/>	
		<Message Text="Creating XMLA. Done!" Importance="high" />

		<FileUpdate Files="$(CCNetWorkingDirectory)\Cube\Xmla\CreateDatabase.xmla"
			Regex="&lt;ConnectionString&gt;.*&lt;/ConnectionString&gt;"
			ReplacementText="&lt;ConnectionString&gt;#(SQL_CONN_STRING)&lt;/ConnectionString&gt;"/>
			
		<FileUpdate Files="$(CCNetWorkingDirectory)\Cube\Xmla\CreateDatabase.xmla"
			Regex="&lt;DatabaseID&gt;.*&lt;/DatabaseID&gt;"
			ReplacementText="&lt;DatabaseID&gt;#(SQL_DATABASE_NAME)&lt;/DatabaseID&gt;"/>			

		<FileUpdate Files="$(CCNetWorkingDirectory)\Cube\Xmla\CreateDatabase.xmla"
			Regex="(?m:^        )&lt;ID&gt;.*&lt;/ID&gt;"
			ReplacementText="        &lt;ID&gt;#(SQL_DATABASE_NAME)&lt;/ID&gt;"/>

		<FileUpdate Files="$(CCNetWorkingDirectory)\Cube\Xmla\CreateDatabase.xmla"
			Regex="(?m:^        )&lt;Name&gt;.*&lt;/Name&gt;"
			ReplacementText="        &lt;Name&gt;#(SQL_DATABASE_NAME)&lt;/Name&gt;"/>
    </Target>

	<Target Name="AzurePreDropDatabase">
		<Exec Command ="$(AzureMasterConn) -Q&quot;DROP DATABASE [$(AzureDBNamePrefix)_analytics]&quot;"/>
		<Exec Command ="$(AzureMasterConn) -Q&quot;DROP DATABASE [$(AzureDBNamePrefix)_ccc7]&quot;"/>
	</Target>
	
	<Target Name="AzurePostDropDatabase">
		<Exec Command ="$(AzureMasterConn) -Q&quot;DROP DATABASE [$(AzureDBNamePrefix)_analytics]&quot;"/>
		<Exec Command ="$(AzureMasterConn) -Q&quot;DROP DATABASE [$(AzureDBNamePrefix)_ccc7]&quot;"/>
	</Target>

	<Target Name="BuildDBManager">
		<Message Importance="high" Text="Compile of Db Manager starting..." />

		<MSBuild Projects="$(CCNetWorkingDirectory)\Teleopti.Ccc.DBManager\Teleopti.Ccc.DBManager\Teleopti.Ccc.DBManager.csproj"
				Properties="Configuration=$(Configuration);Platform=AnyCPU"
				Targets="Build">
			<Output ItemName="DbManagerExe" TaskParameter="TargetOutputs"/>
		</MSBuild>
		
		<Message Importance="high" Text="Compile of Db Manager starting..." />
		<Message Text="DbManagerOutput:   @(DbManagerExe)" />
	</Target>
	
	<Target Name="AzureCreateDatabase" DependsOnTargets="BuildDBManager">
		<Message Text="Create Azure database ..." Importance="high" />

		<Message Text="%22@(DBManagerExe)%22 $(DBManagerAzure) -D$(AzureDBNamePrefix)_analytics -OTeleoptiAnalytics -F$(DatabasePath)" Importance="high" />
		<Exec Command ="%22@(DBManagerExe)%22 $(DBManagerAzure) -D$(AzureDBNamePrefix)_analytics -OTeleoptiAnalytics -F$(DatabasePath)" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		
		<Message Text ="%22@(DBManagerExe)%22 $(DBManagerAzure) -D$(AzureDBNamePrefix)_ccc7 -OTeleoptiCCC7 -F$(DatabasePath)" Importance="high" />
		<Exec Command ="%22@(DBManagerExe)%22 $(DBManagerAzure) -D$(AzureDBNamePrefix)_ccc7 -OTeleoptiCCC7 -F$(DatabasePath)" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>

		<Message Text="Create Azure database. Done!" Importance="high" />
	</Target>
	
	<Target Name="AzureDeploy" Condition="'$(AzureDeploy)' == 'true'">
		<CallTarget Targets="AzurePreDropDatabase" />
		<CallTarget Targets="AzureCreateDatabase" />
		<CallTarget Targets="AzureAnalyticsReportTest" />
		<CallTarget Targets="AzurePostDropDatabase" />
	</Target>

	<Target Name="SQL2005Deploy" Condition="'$(SQL2005Deploy)' == 'true'" DependsOnTargets="BuildDBManager">

		<Message Importance="high" Text="Dropping Dbs on SQL 2005 ..."/>

		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="IF EXISTS (select name from sys.databases where name = '$(DBNamePrefix)_agg') BEGIN ALTER DATABASE [$(DBNamePrefix)_agg] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE [$(DBNamePrefix)_agg] END" ConnectionString="Data Source=$(DBServerSQL2005);Initial Catalog=master;Integrated Security=True"/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="IF EXISTS (select name from sys.databases where name = '$(DBNamePrefix)_analytics') BEGIN ALTER DATABASE [$(DBNamePrefix)_analytics] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE [$(DBNamePrefix)_analytics] END" ConnectionString="Data Source=$(DBServerSQL2005);Initial Catalog=master;Integrated Security=True"/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="IF EXISTS (select name from sys.databases where name = '$(DBNamePrefix)_ccc7') BEGIN ALTER DATABASE [$(DBNamePrefix)_ccc7] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE [$(DBNamePrefix)_ccc7] END" ConnectionString="Data Source=$(DBServerSQL2005);Initial Catalog=master;Integrated Security=True"/>
		
		<Message Importance="high" Text="Creating Dbs on SQL 2005 ..."/>
		
		<PropertyGroup>
			<CreateDBCommand>"@(DBManagerExe)" -S$(DBServerSQL2005) -E -C -T -Lnightly:nightly -A -F$(DatabasePath)</CreateDBCommand>
		</PropertyGroup>

		<Exec Command="$(CreateDBCommand) -D$(DBNamePrefix)_agg -OTeleoptiCCCAgg" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		<Message Text="The exit code is $(ErrorCode)"/>
		<Error Text="Error while executing: $(CreateDBCommand) -D$(DBNamePrefix)_agg -OTeleoptiCCCAgg" Condition="'$(ErrorCode)' != '0'" />

		<Exec Command="$(CreateDBCommand) -D$(DBNamePrefix)_analytics -OTeleoptiAnalytics" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		
		<Message Text="The exit code is $(ErrorCode)"/>
		<Error Text="Error while executing: $(CreateDBCommand) -D$(DBNamePrefix)_analytics -OTeleoptiAnalytics" Condition="'$(ErrorCode)' != '0'" />

		<Exec Command="$(CreateDBCommand) -D$(DBNamePrefix)_ccc7 -OTeleoptiCCC7" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		
		<Message Text="The exit code is $(ErrorCode)"/>
		<Error Text="Error while executing: $(CreateDBCommand) -D$(DBNamePrefix)_ccc7 -OTeleoptiCCC7" Condition="'$(ErrorCode)' != '0'" />
		
		<Message Importance="high" Text="Creation of dbs on SQL 2005 finished." />
		
		<OnError ExecuteTargets="MessageErrorHandler"/>	
		
	</Target>	

	<Target Name="AzureAnalyticsReportTest" Condition="'$(AzureAnalyticsReportTest)' == 'true'">
		<Message Importance="high" Text="Check all Analytics report controls and reports are working on Azure"/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" CommandTimeout="60" Files="@(AnalyticsReportsTest)" ConnectionString="Data Source=$(AzureServer);Initial Catalog=$(AzureDBNamePrefix)_analytics;User Id=$(AzureDbLogin);Password=$(AzureDbPwd)"/>
		<Message Importance="high" Text="Analytics report controls. Finished"/>
	</Target>
	
	<Target Name="CreateAnalyticsDb" DependsOnTargets="BuildDBManager">
		<Message Importance="high" Text="Dropping Analytics DB on local instance" />
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="IF EXISTS (select name from sys.databases where name = '$(DBNamePrefix)_agg') BEGIN ALTER DATABASE [$(DBNamePrefix)_agg] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE [$(DBNamePrefix)_agg] END" ConnectionString="Data Source=$(DBServer);Initial Catalog=master;Integrated Security=True"/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="IF EXISTS (select name from sys.databases where name = '$(DBNamePrefix)_analytics') BEGIN ALTER DATABASE [$(DBNamePrefix)_analytics] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE [$(DBNamePrefix)_analytics] END" ConnectionString="Data Source=$(DBServer);Initial Catalog=master;Integrated Security=True"/>
		<Message Importance="high" Text="Dropping Analytics DB finished" />
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="IF EXISTS (select name from sys.databases where name = '$(DBNamePrefix)_ccc7') BEGIN ALTER DATABASE [$(DBNamePrefix)_ccc7] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;DROP DATABASE [$(DBNamePrefix)_ccc7] END" ConnectionString="Data Source=$(DBServer);Initial Catalog=master;Integrated Security=True"/>
		<Message Importance="high" Text="Dropping $(DBNamePrefix)_ccc7 finished" />
		
		<Message Importance="high" Text="Creating Analytics ..."/>
		<PropertyGroup>
			<CreateDBCommand>"@(DBManagerExe)" -S$(DBServer) -E -C -T -Lnightly:nightly -A -F$(DatabasePath)</CreateDBCommand>
		</PropertyGroup>

		<Exec Command="$(CreateDBCommand) -D$(DBNamePrefix)_agg -OTeleoptiCCCAgg" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		<Message Text="The exit code is $(ErrorCode)"/>
		<Error Text="Error while executing: $(CreateDBCommand) -D$(DBNamePrefix)_agg -OTeleoptiCCCAgg" Condition="'$(ErrorCode)' != '0'" />

		<Exec Command="$(CreateDBCommand) -D$(DBNamePrefix)_analytics -OTeleoptiAnalytics" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		<Message Text="The exit code is $(ErrorCode)"/>
		<Error Text="Error while executing: $(CreateDBCommand) -D$(DBNamePrefix)_analytics -OTeleoptiAnalytics" Condition="'$(ErrorCode)' != '0'" />

		<Exec Command="$(CreateDBCommand) -D$(DBNamePrefix)_ccc7 -OTeleoptiCCC7" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		<Message Text="The exit code is $(ErrorCode)"/>
		<Error Text="Error while executing: $(CreateDBCommand) -D$(DBNamePrefix)_ccc7 -OTeleoptiCCC7" Condition="'$(ErrorCode)' != '0'" />
		
		<Message Importance="high" Text="Creation of dbs finished." />

		<Message Importance="high" Text="Check Naming Standard on [$(DBNamePrefix)_ccc7] at $(DBServer) ..."/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" Files="@(SQLFiles)" ConnectionString="Data Source=$(DBServer);Initial Catalog=$(DBNamePrefix)_ccc7;Integrated Security=True"/>
		<Message Importance="high" Text="Check Naming Standard. Finished"/>
		
		<Message Importance="high" Text="Check Naming Standard on [$(DBNamePrefix)_analytics] at $(DBServer)..."/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" Files="@(SQLFiles)" ConnectionString="Data Source=$(DBServer);Initial Catalog=$(DBNamePrefix)_analytics;Integrated Security=True"/>
		<Message Importance="high" Text="Check Naming Standard. Finished"/>

		<Message Importance="high" Text="Deploy Cross Db views  on local instance ..."/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" Sql="EXEC mart.sys_crossdatabaseview_target_update 'TeleoptiCCCAgg', '$(DBNamePrefix)_agg'" ConnectionString="Data Source=$(DBServer);Initial Catalog=$(DBNamePrefix)_analytics;Integrated Security=True"/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" Sql="EXEC mart.sys_crossDatabaseView_load" ConnectionString="Data Source=$(DBServer);Initial Catalog=$(DBNamePrefix)_analytics;Integrated Security=True"/>
		<Message Importance="high" Text="Deploy Cross Db views. Finished"/>

		<Message Importance="high" Text="Check all Analytics report controls and reports are working on local instance..."/>
		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" Files="@(AnalyticsReportsTest)" ConnectionString="Data Source=$(DBServer);Initial Catalog=$(DBNamePrefix)_analytics;Integrated Security=True"/>
		<Message Importance="high" Text="Analytics report controls. Finished"/>

		<OnError ExecuteTargets="MessageErrorHandler"/>
	</Target>

	<Target Name="MessageErrorHandler" DependsOnTargets="BuildDBManager">
		<Message Text="An error has occurred while executing database scripts. Please review DBManager logfile: @(DBManagerExe)"/>
	</Target>

	<Target Name="FixConfigFiles">
		<Message Importance="high" Text="Fixing config files..." />
		<Message Importance="high" Text="%22$(CCNetWorkingDirectory)\.debug-Setup\InfratestConfig.bat%22 %22$(DBNamePrefix)_ccc7%22 %22$(DBNamePrefix)_analytics%22 ALL $(Configuration)"/>
			<Exec Command="%22$(CCNetWorkingDirectory)\.debug-Setup\InfratestConfig.bat%22 %22$(DBNamePrefix)_ccc7%22 %22$(DBNamePrefix)_analytics%22 ALL $(Configuration)">
		</Exec>
		<Message Importance="high" Text="Fixing config files. Done!" />	
	</Target>

	<!--This is how we "går över ån och runt sjön för att hämta vatten"
		We run into something like this: http://www.mail-archive.com/rhinomocks@googlegroups.com/msg02457.html 
		So instead, try to run tests One By One to mimimize numbers of Mocks included.
		Collection = $(CCNetWorkingDirectory)\**\*Test.csproj
		But _exclude_ projects that we don't build as part of CruiseControl.sln
	-->
	<ItemGroup>
		<ProjectsToNCover
				Include="$(CCNetWorkingDirectory)\**\*Test.csproj"
				Exclude="
					$(CCNetWorkingDirectory)\Teleopti.Ccc.Web\Teleopti.Ccc.WebBehaviorTest\Teleopti.Ccc.WebBehaviorTest.csproj"/>
		<ProjectsToNCover Condition="'$(RunWebBehaviorTests)' == 'true' And '$(CCNetProject)'!='CCC-Main'"
			  Include="$(CCNetWorkingDirectory)\Teleopti.Ccc.Web\Teleopti.Ccc.WebBehaviorTest\Teleopti.Ccc.WebBehaviorTest.csproj"
		 />
	</ItemGroup>
	
	<Target Name="NCover" DependsOnTargets="FixConfigFiles;Compile">
		
		<MakeDir Directories="$(CCNetWorkingDirectory)\NcoverResult"/>
		<MakeDir Directories="$(CCNetWorkingDirectory)\NUnitResult"/>
		<MakeDir Directories="$(CCNetWorkingDirectory)\CoverageResult"/>
		
		<Message Importance="high" Text="Running NCover..." />
		<Message Importance="high" Text="RunWebBehaviorTests: $(RunWebBehaviorTests)." />
		<CallTarget Targets="NCoverLoop" />
		<Message Importance="high" Text="Running NCover finished." />
	</Target>

	<Target Name="NCoverLoop" Inputs="@(ProjectsToNCover)" Outputs="%(Identity).Dummy">
		<Message Text="Running NCover for @(ProjectsToNCover)" />
		<NCover
			ProjectName="$(CCNetProject)"
			ToolPath="$(CCNetWorkingDirectory)\packages\Teleopti.NCover64.1.0.0\content"
			TestRunnerExe="$(NUnitEXE)"
			TestRunnerArgs="&quot;@(ProjectsToNCover)&quot; $(ExcludedTestCategories) $(NUnitArgs) /xml=&quot;$(CCNetWorkingDirectory)\nunit%(filename).xml&quot;"
			CoverageFile="$(CCNetWorkingDirectory)\NcoverResult\%(filename).ncov"
			WorkingDirectory="$(CCNetWorkingDirectory)"
			RegisterProfiler="true"
			IncludeAssemblies="Teleopti.*"
			ExcludeAssemblies=".*Test"
			ExcludeFiles=".*.Designer.cs"
			OnlyAssembliesWithSource="true"
			/>
	</Target>
	
	<!-- ToolPath="$(CCNetWorkingDirectory)\ccnet\ncover64"-->
	<Target Name="NCoverReporting" DependsOnTargets="NCover">
		<Message Importance="high" Text="Running NCoverReporting..." />
		<NCoverReporting
				ToolPath="$(CCNetWorkingDirectory)\packages\Teleopti.NCover64.1.0.0\content"
				OutputPath="$(CCNetWorkingDirectory)"
				OutputReport="$(CoverageReports)"
				CoverageDataPaths="$(CCNetWorkingDirectory)\NcoverResult\*.ncov"
				MinimumCoverage="0"
				SatisfactoryCoverage="$(SatisfactoryCoverage)"
				MaxFailedToShow="150"
				ReportInvalidFiles="true">
		</NCoverReporting>

		<Message Importance="high" Text="NCoverReporting finished." />
	</Target> 
	
	<Target Name="NDepend" DependsOnTargets="Compile" >
    <PropertyGroup>
      <NDPath>C:\NDepend\NDepend.console.exe</NDPath>
      <NDProject>$(CCNetWorkingDirectory)\ccc.ndproj</NDProject>
	  <NDOut>$(CCNetWorkingDirectory)\..\Artifacts\buildlogs\Ndepend</NDOut>
    </PropertyGroup>
	<Message Importance="high" Text="Running NDepend with $(NDPath) on  $(NDProject) out = $(NDOut)" />
    <Exec
      Command='"$(NDPath)" "$(NDProject)" /OutDir "$(NDOut)"'/>
  </Target>
	<Target Name="CopyNDependStatisticsToDatabase" Condition="'$(CCNetProject)' == 'CCC-Main' AND '$(Computername)' == 'HEBE'" DependsOnTargets="NDepend">
		<PropertyGroup>
			<RevisionOutput>$(CCNetWorkingDirectory)\..\Artifacts\buildlogs\Ndepend\Revision.txt</RevisionOutput>
			<NDependOutput>$(CCNetWorkingDirectory)\..\Artifacts\buildlogs\Ndepend\\</NDependOutput>
			<NCoverOutput>$(CCNetWorkingDirectory)\\</NCoverOutput>
		</PropertyGroup>
		<Message Importance="high" Text="Copying data from xml to database" />
		<Exec Command="&quot;$(CCNetWorkingDirectory)\ccnet\GetRevision.bat&quot; &quot;$(RevisionOutput)&quot;"/>
		<Exec Command="&quot;$(NDependTransferDataPath)&quot; &quot;$(NDependOutput)&quot; &quot;$(NDependOutput)&quot; &quot;$(NCoverOutput)&quot;"/>
	</Target>
</Project>
