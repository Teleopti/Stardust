<?xml version="1.0" encoding="UTF-8"?>
<!--EXTERNAL_PROPERTIES: WorkingDirectory-->

<Project DefaultTargets="PrepareETLTest" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

	<PropertyGroup>
		<ETLStuff>$(WorkingDirectory)\ccnet\ETLNightlyBuild</ETLStuff>
		<ETLDBNamePrefix>prefix</ETLDBNamePrefix>
		<ETLNightlyBuild-PrepareETL>"$(ETLStuff)\ETLNightlyBuild-PrepareETL.sql"</ETLNightlyBuild-PrepareETL>
		<ETLNightlyBuild-PrepareFilesCmd>"$(ETLStuff)\ETLNightlyBuild-PrepareFiles.cmd"</ETLNightlyBuild-PrepareFilesCmd>
		<SqlInstanceName>$(Computername)</SqlInstanceName>
		<SqlInstanceName Condition="'$(computername)' == 'HEBE'">HEBE\SQL2014</SqlInstanceName>
		<SQLCmdConn>SQLCMD -S$(SqlInstanceName) -E</SQLCmdConn>
		<ETLServiceBinDir>$(WorkingDirectory)\Teleopti.Analytics.Etl.ServiceConsoleHost\bin\$(debug_release)</ETLServiceBinDir>
		<ETLCCC7DB>$(ETLDBNamePrefix)_DemoSales_TeleoptiCCC7</ETLCCC7DB>
		<ETLAnalyticsDB>$(ETLDBNamePrefix)_DemoSales_TeleoptiAnalytics</ETLAnalyticsDB>
		<ETLAggDB>$(ETLDBNamePrefix)_DemoSales_TeleoptiCCCAgg</ETLAggDB>
		<AppSqlLogin>TeleoptiDemoUser</AppSqlLogin>
		<AppSqlPwd>TeleoptiDemoPwd2</AppSqlPwd>
		<LoadDimensionSQL>"$(WorkingDirectory)\Database\Create\AggIntoAnalytics\LoadDimension.sql"</LoadDimensionSQL>
		<moveDataSQL>"$(WorkingDirectory)\Database\Create\AggIntoAnalytics\MoveData.sql"</moveDataSQL>
		<LogObjectId>1</LogObjectId>
		<RestoreToLocal>"$(WorkingDirectory)\.debug-Setup\Restore to Local.bat"</RestoreToLocal>
	</PropertyGroup>
	
	<UsingTask AssemblyFile="$(WorkingDirectory)\packages\MSBuild.Extension.Pack.1.3.0\tools\net40\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.SqlServer.SqlExecute"/>

	<Target Name="PrepareETLTest" DependsOnTargets="PrepareFiles;RestoreToLocal;MoveOneLogObject">
	</Target>
	
	<Target Name="RunETLTest">
		<Message Text="Make sure the etl service is running..." />
		<CallTarget Targets="AddSchedule"/>
		<!--
		This is our Test!!!
		The SP will Loop until ETL job is finished. If it finds an error Then a RaisError Should make SQLCMD to bail out
		-->
 		<MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteRawReader" Sql="[mart].[etl_nightlyBuild_CheckError]" CommandTimeout="1800" ConnectionString="Data Source=$(SqlInstanceName);Initial Catalog=$(ETLAnalyticsDB);Integrated Security=True"/>
 		<!-- Clean up-->
 		<!--Sleep for 10 secs then STOP service for clean up later on-->
 		<Exec Command ="PING 127.0.0.1 -n 10 > NUL"/>
 	</Target>
	
  		<!-- 
	a) Clean out the datamart (exept for Initial load data and sys_datasource)
	b) Clean out old ETL job history
	c) Add extra ETL Test SP
	d) Create one job for the ETL service
	-->
	<Target Name="AddSchedule">
		<Exec Command ="$(SQLCmdConn) -dmaster -i$(ETLNightlyBuild-PrepareETL) -v TeleoptiAnalytics=$(ETLAnalyticsDB)" ContinueOnError="false">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
	</Target>
  
	<Target Name="RestoreToLocal">
		<Exec Command ="$(RestoreToLocal) DemoSales $(debug_release) 1 $(ETLDBNamePrefix) $(SqlInstanceName)"/>
	</Target>

	<Target Name="MoveOneLogObject">
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -i$(LoadDimensionSQL) -v SourceAgg=$(ETLAggDB) -v logobjectid=$(LogObjectId)"/>
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -i$(LoadDimensionSQL) -v SourceAgg=$(ETLAggDB) -v logobjectid=$(LogObjectId)"/>
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -i$(moveDataSQL) -v SourceAgg=$(ETLAggDB) -v logobjectid=$(LogObjectId)"/>
		<Exec Command ="$(SQLCmdConn) -d$(ETLAnalyticsDB) -Q%22update [mart].[sys_datasource] set internal=1 where [log_object_id]=$(LogObjectId)%22"/>
	</Target>
	
	<Target Name="PrepareFiles">
		<Exec Command ="$(ETLNightlyBuild-PrepareFilesCmd) %22$(WorkingDirectory)%22 $(ETLServiceBinDir) $(ETLCCC7DB) $(ETLAnalyticsDB) $(debug_release) $(AppSqlLogin) $(AppSqlPwd) $(SqlInstanceName)"/>
	</Target>	
</Project>