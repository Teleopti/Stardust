<?xml version="1.0" encoding="utf-8"?>

<Project DefaultTargets="AcceptanceTests" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
	<PropertyGroup>
		<DestinationFolder Condition="'$(DestinationFolder)' == ''">$(CCNetArtifactDirectory)\pipeline</DestinationFolder>
		<PipelineFolder>\\hebe\d$\PipelineState</PipelineFolder>
		<SourceFiles Condition="'$(SourceFiles)' == ''">$(PipelineFolder)\138</SourceFiles>
		<SikuliPath Condition="'$(SikuliPath)' == ''">C:\Sikuli</SikuliPath>
		<Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
		<SikuliSrc>$(DestinationFolder)\SikuliSrc</SikuliSrc>
	</PropertyGroup>
	
    <UsingTask TaskName="RunSikuliTests" AssemblyFile="c:\Temp\ClassLibraryTask.dll" />	
	<UsingTask AssemblyFile="$(DestinationFolder)\packages\MSBuildTasks.1.4.0.65\tools\MSBuild.Community.Tasks.dll" TaskName="NUnit"/>
	
	<Target Name="AcceptanceTests">
		<CallTarget Targets="CopySourceFilesToWorkingDirectory" />
		<CallTarget Targets="RunSikuliTests"/>
	</Target>
	
	<Target Name="InstallSolutionDependencies" DependsOnTargets="CloneRepo">
		<PropertyGroup>
			<SikuliTestRepo>http://atom:5000/QA/AutomatedSmokeTests</SikuliTestRepo>
			<NugetFolder>$(SourceFiles)\.nuget</NugetFolder>
			<NugetExe>$(NugetFolder)\nuget.exe</NugetExe>
		</PropertyGroup>
		<exec command="%22$(NugetExe)%22 install %22$(NugetFolder)\packages.config%22 -o %22$(DestinationFolder)\packages%22"/>
		<exec command="hg pull $(SikuliTestRepo) --update" WorkingDirectory="$(SikuliSrc)"/>
	</Target>

	<Target Name="CloneRepo" Condition="!Exists('$(SikuliSrc)')">
		<PropertyGroup>
			<SikuliTestRepo>http://atom:5000/QA/AutomatedSmokeTests</SikuliTestRepo>
		</PropertyGroup>
		<exec command="hg clone $(SikuliTestRepo) %22$(SikuliSrc)%22"/>
		
	</Target>	
	
	<Target Name="CopySourceFilesToWorkingDirectory" DependsOnTargets="ClearWorkingDirectory">
		<ItemGroup>
			<DBManager Include="$(SourceFiles)\Teleopti.Ccc.DBManager\Teleopti.Ccc.DBManager\**\*.*"/>
			<AdminClientStandAlone Include="$(SourceFiles)\Teleopti.Ccc.SmartClientPortal\Teleopti.Ccc.SmartClientPortal.Shell\**\*.*"/>
			<CcNetFiles Include="$(SourceFiles)\ccnet\**\*.*" />
			<SupportTool Include="$(SourceFiles)\Teleopti.Support.Tool\**\*.*" />
			<BuildArtifacts Include="$(SourceFiles)\BuildArtifacts\**\*.*" />
			<DatabaseFiles Include="$(SourceFiles)\database\**\*.*"/>
		</ItemGroup>
		
		<Copy SourceFiles="@(DBManager)"
    			DestinationFiles="@(DBManager->'$(DestinationFolder)\Teleopti.Ccc.DBManager\Teleopti.Ccc.DBManager\%(RecursiveDir)%(Filename)%(Extension)')" />		
		<Copy SourceFiles="@(AdminClientStandAlone)"
    			DestinationFiles="@(AdminClientStandAlone->'$(DestinationFolder)\Teleopti.Ccc.SmartClientPortal\Teleopti.Ccc.SmartClientPortal.Shell\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(CcNetFiles)"
    			DestinationFiles="@(CcNetFiles->'$(DestinationFolder)\ccnet\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(SupportTool)"
    			DestinationFiles="@(SupportTool->'$(DestinationFolder)\Teleopti.Support.Tool\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(BuildArtifacts)"
    			DestinationFiles="@(BuildArtifacts->'$(DestinationFolder)\BuildArtifacts\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(DatabaseFiles)"
    			DestinationFiles="@(DatabaseFiles->'$(DestinationFolder)\database\%(RecursiveDir)%(Filename)%(Extension)')" />
	</Target>
	
	<Target Name="ClearWorkingDirectory">
		<MakeDir Condition="!Exists('$(DestinationFolder)')" Directories="$(DestinationFolder)" />
		<ItemGroup>
		  <FilesToClean Include="$(DestinationFolder)\**\*"/>
		  <Directories Include="$([System.IO.Directory]::GetDirectories('$(DestinationFolder)', '*', System.IO.SearchOption.AllDirectories))"
					   Exclude="$(TargetFolder)"/>
		</ItemGroup>

		<Delete Files="@(FilesToClean)" ContinueOnError="true"/>
		<RemoveDir Directories="@(Directories)" />
	</Target>

	<Target Name="RunSikuliTests" DependsOnTargets="InstallSolutionDependencies">
		<Exec Command ="ECHO %22$(SikuliPath)\runIDE.cmd%22 -r %22$(SikuliSrc)\BuildTest\Utveckling.sikuli%22> %22c:\Temp\runTests.bat%22" ContinueOnError='true'>
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
		<Message Text="The exit code is $(ErrorCode)"/>
		
		<!-- Custom Task by Teleopti -->
		<Message Text="Running Sikuli custom MsBuild Task by Teleopti..."/>
		<RunSikuliTests BatPath = "c:\\Temp\\runTests.bat"/>
		<Message Text="Running Sikuli custom MsBuild Task by Teleopti. Done!"/>
		
		<!-- Run batch directly from MSBuild -->
		<Message Text="Running Sikuli via Command line from MsBuild..."/>
		<Exec Command ="%22$(SikuliPath)\runIDE.cmd%22 -r %22$(SikuliSrc)\BuildTest\Utveckling.sikuli%22" ContinueOnError='true'>
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
		<Message Text="Running Sikuli via Command line from MsBuild. Done!"/>
		
		<Message Text="The exit code is $(ErrorCode)"/>
        <Error Text="Error while executing: %22$(SikuliPath)\runIDE.cmd%22 -r %22$(SikuliSrc)\BuildTest\Utveckling.sikuli%22" Condition="'$(ErrorCode)' > '0'" />
        <OnError ExecuteTargets="MessageErrorHandler"/>
  </Target>
     
  <!--Error Handler-->
  <Target Name="MessageErrorHandler">
        <Message Text="An error has occurred while running the batch file"/>
  </Target>
	
	<Target Name="ConfigureSettings">
		<PropertyGroup>
			<SetSettings>"$(DestinationFolder)\ccnet\pipeline\Acceptance\sikulitestSettings.bat"</SetSettings>
			<SupportTool>Teleopti.Support.Tool.exe</SupportTool>
		</PropertyGroup>
		<exec command="$(setSettings) a b"/>
		<exec command="$(SupportTool) -MOTest" WorkingDirectory="$(DestinationFolder)\Teleopti.Support.Tool\bin\$(Configuration)"/>
	</Target>
</Project>