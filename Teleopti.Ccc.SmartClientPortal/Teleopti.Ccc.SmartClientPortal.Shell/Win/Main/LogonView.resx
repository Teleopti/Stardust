<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAACACoCAAAJgAAABAQAgAAAAEAsAAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAA/5kAAP+ZAAD/mQAA/5kAAP+ZAAD/mQAA/5kAAP+oJgD/uU8A/8BiAP/S
        jgD/3qwA/+7VAP///wD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////ABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQ
        EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        EBAQEAAAAAAAAAAAAAAAAAAAAAAHCQkHAAAAAAAAAAAQEBAQAAAAAAAAAAAAAAAAAAAJDQ8PDw8NCgAA
        AAAAABAQEBAAAAAAAAAAAAAAAAAADA8MCAAACAwODAAAAAAAEBAQEAAAAAAKDAwMDAwMCQwOCAAAAAAA
        AAgNDAAAAAAQEBAQAAAACw8NDQ0NDQ0JDwkAAAAAAAALAAgOCQAAABAQEBAAAAAMDQAMCQkMAAwNAAAA
        AAAADA4AAAwMAAAAEBAQEAAAAAwNCQwLCwwIDQoAAAAADA0OCAAACQ8AAAAQEBAQAAAADA0JDAsLDAcN
        CQAAAAkPDQwAAAAADwAAABAQEBAAAAAMDQAMCQkMAA0JAAAACA4PCgAAAAgPAAAAEBAQEAAAAAwNDA0M
        DA0JDAwAAAAADA0AAAAACg0AAAAQEBAQAAAADA0ADAkJDAAKDgcAAAAMDQAAAAANDAAAABAQEBAAAAAM
        DQwNDAwNDAoNDAAAAAwNAAAADA4HAAAAEBAQEAAAAAwNAAwJCQwADQgODAgACwwABwwOCAAAAAAQEBAQ
        AAAADA0MDQwMDQwNDAoNDwwMDAwODQgAAAAAABAQEBAAAAAMDw8PDw8MAA0ADAAIDA0NDAoIAAAAAAAA
        EBAQEAAAAAwPDw8PDwwADQANAAoICAgADQwAAAAAAAAQEBAQAAAADA8PDw8PDw8PDw8PDw8PDw8PDAAA
        AAAAABAQEBAAAAAMDQwMDAwMDAwMDAwMDAwMDA0MAAAAAAAAEBAQEAAAAAwNAAwLCwwIDgAOCAwLCwwA
        DQwAAAAAAAAQEBAQAAAACw8NDQwMDQkPAA8JDQwMDQ0PCwAAAAAAABAQEBAAAAAACgoNDAwNCQ8ADwkN
        DAwNCgoAAAAAAAAAEBAQEAAAAAAAAAsJCQsIDAAMCAsJCQsAAAAAAAAAAAAQEBAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAABAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD///////////AAAA/gAAAHwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAAD4AAAA/AAAAf//////////ygAAAAQAAAAIAAAAAEAAQAAAAAAQAAAAAAA
        AAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//
        AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
</value>
  </data>
</root>