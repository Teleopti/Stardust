<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAO
        DgAAAk1TRnQBSQFMAgEBAgEAASwBAAEsAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGS4AAzoBYQNDAXdgAAMHAQkDTgGZAyQBNsAAAycBOwFnAisB8gM4AV4BXQI2
        Ae0BXAJTAckDLgFHAWQCQAHnAxcBIEgAAwYBCAExAjABTQMSARgDMwFSAYEBsgG8Af8BQAI/AW4DEwEa
        AzMBUgMKAQ60AANHAYIBgQG3Ab4B/wGBAaoBswH/AYUBygHQAf8BiAHOAdQB/wN/Af4BgQGwAboB/wNF
        AX1EAAMCAQMBYAJPAdQBgQGjAa0B/wFhAkEB5AFNAiAB+gGiAe4B8AH/AU0CIAH6AWUCQQHlA38B/gFT
        AlEBqrAAAwcBCQM4AV4BgQGxAboB/wGKAdwB4wH/AaYC+AH/Aa4C+gH/AaoB+QH6Af8BgQHAAcgB/wM7
        AWMDCQEMQAADAwEEAVkCUgHCAYEBuQHCAf8BgQGuAbcB/wGKAdMB2AH/AakB+QH6Af8BlwHZAd4B/wGB
        AbkBwAH/AYYBzwHVAf8BXAJSAcywAAMvAUkBgQGqAbMB/wGBAb4ByQH/AZEB5gHpAf8DPAFmATUCNAFV
        AaQC9QH/AZoB6wHtAf8BgQGmAbAB/wM+AWtEAAMaASUBgQGoAbMB/wGCAdoB4gH/AY0B4wHoAf8BlwH1
        AfYB/wGlA/8BvQP/AYEBtQG9Af8DNwFbsAABLAIrAUMBmwHbAeQB/wGpAdwB7QH/AV4CUgHOAxMBGgMg
        AS4BYQJIAdwBlgHuAfIB/wGdAesB7QH/ATYCNQFYA0sBjgFNAiAB+gMOARMDLQFGAwsBDxAAAxoBJQFa
        AlQBvQFZAlQBvgFZAlQBvgFZAlQBvgFZAlQBvgFZAlQBvgFhAj8B5gGBAacBsQH/AYEBugHFAf8BggHX
        Ad4B/wHAAdcB1AH/AdQBywHHAf8BuwHUAdEB/wGiAvwB/wGfAeoB7AH/AU0CIAH6AU4CTQGVrAADBAEG
        AzQBVAGkAeoB8AH/AYsBwQHOAf8BRQJAAf0BRgJAAf0BgQGyAb4B/wGRAesB7QH/AYEBtQG8Af8BagEh
        ASQB+QFEAkAB/QGXAeEB5AH/AYEBpAGvAf8BQwJAAf0BYAJPAdQDBgEICAADEQEXAVACTwGbAYICQAH9
        AYEBigGpAf8BgQGLAakB/wGBAYsBqQH/AYEBiwGpAf8BgQGFAaMB/wGdAdYB3wH/AakB3QHnAf8BowHZ
        AegB/wGFAc8B1AH/AYEBkAGrAf8BgQGKAakB/wGBAYoBqAH/AYkB1wHcAf8BlgHtAfAB/wGjAfgB+QH/
        A04BmbAAAVACTwGbAaMB6QHuAf8BpwHeAesB/wGgAdEB4gH/AaQB1AHjAf8BmQHbAeUB/wGfAvMB/wGB
        AcsB0AH/AYEBvwHIAf8BmAHqAewB/wGyAv0B/wGYAecB6gH/AYEBwgHKAf8BXgJSAc4DBQEHCAADHwEs
        AWkBgQG3Af8BSgGBAa4B/wFLAYEBrwH/AUsBgQGvAf8BSwGBAa8B/wFLAYEBrwH/AUgBgQGtAf8BYgGD
        AbsB/wGBAa0BzwH/Aa8B5wHxAf8BkAHIAdMB/wGBAakBtgH/AYEBnwG4Af8BgQGjAbUB/wGBAbMBvQH/
        AYIB0wHbAf8DSgGMAx0BKrAAAzUBVwFfAikB8wNLAY4BXgJSAc4BYQJIAdwBTAJLAZABmAHqAewB/wGB
        AbkBwAH/AYEBygHVAf8BYQJDAeIBVQJTAa0BpwL5Af8BoAHoAeoB/wFfAkMB4wMvAUoIAAMeASsBagGB
        AbYB/wFKAYEBrQH/AUsBgQGtAf8BSwGBAa0B/wFLAYEBrQH/AUsBgQGtAf8BSwGBAa0B/wFIAYEBrAH/
        AXoBkwG2Af8BogLsAf8BqgHbAekB/wGHAcABzAH/AYEBswG8Af8BgwG9AcgB/wGCAcYB1AH/A38B/gNH
        AYK8AAMTARoBWwJTAcYBTgJNAZYDDQESAY0BzAHUAf8BiAHBAc4B/wGNAkAB/QMiATIEAAFQAk8BngGb
        AfEB8wH/AYUBzgHTAf8DPwFtCAADHgErAW0BgQG4Af8BVQGBAbEB/wFVAYEBtQH/AVEBgQHCAf8BVQGB
        AbUB/wFWAYEBsQH/AVYBgQGxAf8BVgGBAbEB/wGvAf8B/QH/AacB6wHvAf8BowH5AfsB/wGnAeAB7gH/
        AbAB4wHxAf8BrgHhAe0B/wGrAfgB9QH/AZUB3gHlAf8BYAJIAd60AAM2AVkBUAJPAZsDTgGYAYEBwwHK
        Af8BVwJTAboBRQJEAXwBXwIhAfsBXQItAfABnQHOAdwB/wFYAlMBwQFRAlABogFiAi8B7wGBAc0B1QH/
        AVsCUgHLAx4BKwgAAx4BKwF0AYEBugH/AWMBgQG6Af8BcQGBAaIB/wOBAf8BdwGBAZgB/wFjAYEBvAH/
        AWQBgQG3Af8BZAGBAbYB/wFrAYEBuwH/AYQBzwHmAf8BgQGLAZgB/wGBAakBqAH/Aa4B7gH1Af8BgQHL
        Ad4B/wGBAZQBwgH/AWoCJAH5AycBOrQAAV8CIQH7AYEBqwG1Af8BgQGuAbcB/wG0AfsB/AH/AYEBtAG9
        Af8BgQGpAbIB/wGBAaoBswH/AZEB4wHlAf8BqwHbAesB/wGGAb4BywH/AYEBswG+Af8BiAHGAdIB/wGK
        AdoB4QH/AV4CTwHVAwcBCQgAAx4BKwGBAYYBvAH/AXgBiAHHAf8CgQGLAf8ChgGHAf8CgQGEAf8BeAGK
        AckB/wGBAYcBvgH/AYEBhwG+Af8BegGDAb0B/wF1AYEBtQH/A4EB/wKBAYwB/wGaAeAB6AH/AYEBoAHL
        Af8BdQGBAboB/wFnAiEB+AMfAS2wAAMKAQ4BVgJTAbMBgQHAAckB/wGPAeQB6QH/AaEC9QH/Aa4B+AH5
        Af8BoAHlAegB/wFdAi0B8AFhAjMB7gGbAkAB/QGiAkAB/QGlAeAB6QH/AZ8B7AHtAf8BmAHpAesB/wFe
        Ak8B1QMHAQkIAAMeASsBgQGDAbUB/wF6AYEBrQH/AZEBmwGmAf8D9QH/AaUBqQGwAf8BeQGBAa4B/wKB
        AasB/wKBAasB/wKBAasB/wKBAaoB/wGaAZgBmQH/AoEBrgH/AYEBjgGhAf8CgQGsAf8BegGBAbMB/wFn
        AiEB+AMfAS2sAAMCAQMBXAJTAckBgQGrAbUB/wGBAcQB0gH/AV0CTgHSAy0BRQFXAlUBtwGpAvsB/wGB
        Aa4BtwH/AV4CSAHdAxEBFwNMAZIBXwIhAfsDDwEUAy4BSAMMARAMAAMeASsBgQGQAcQB/wGBAZsBzwH/
        AYEBnAHAAf8BsgGxAbMB/wGEAZ0BuwH/AYEBmwHQAf8BgQGbAc0B/wGBAZsBzQH/AYEBmwHNAf8BgQGb
        Ac8B/wGOAZ0BtQH/AZgBnAGmAf8BhQGcAbwB/wGBAZsBzgH/AYEBkgHJAf8BZwIhAfgDHwEtrwABAQFc
        AlIBzAGsAeIB7wH/AaQB3AHrAf8DQgF1BAADKwFCAYEBywHTAf8BpAH9AfwB/wFXAlQBuCQAAx4BKwGB
        AZ8BywH/AasBwAHdAf8BpAG+Ad0B/wGeAb4B5wH/AaQBvgHeAf8BpwG+AdsB/wGoAb4B2wH/AagBvgHb
        Af8BqAG+AdsB/wGnAb4B2wH/AaQBvgHfAf8BnwG+AeUB/wGjAb4B3wH/AagBvgHbAf8BhgGpAdMB/wFq
        AisB/AMhATCwAAMSARgBUwJRAaoBsgHiAfIB/wFqAiQB+QFcAkQB3wFbAisB/AGBAcMBzQH/AZ8B9wH1
        Af8DFAEcJAADHwEtAYEBmAHHAf8BlAGwAdUB/wGRAa8B1QH/AZMBswHhAf8BlAG1Ad4B/wGSAa8B1wH/
        AZIBrwHVAf8BkgGvAdUB/wGSAa8B1QH/AZIBrwHYAf8BlAGzAdwB/wGUAbUB4gH/AZEBrgHVAf8BkgGv
        AdUB/wGBAZ8BzAH/A0gBhQMMARC0AAFnAisB/AGlAeAB6gH/AacB2wHpAf8BlQHLAdgB/wGkAdgB5gH/
        AZIB2AHjAf8BkwHmAecB/wMkATUkAAMIAQsDLAFEAywBRAM4AV4DgQH/A0cBggMrAUIDLAFEAywBRAMs
        AUQBLAIrAUMDOwFjAWICIgH2Az8BbQMsAUQDLAFEAwsBD7gAA0oBiwFcAlIBzwNMAZIBpAHfAeoB/wFY
        AlMBuQFSAlABowFUAlIBrAMGAQgwAAMEAQUBYgIvAe8BZAJAAecBUQJQAZ8BUAJPAZ0BUAJPAZ0BUAJP
        AZ0BUAJPAZ4BYAJIAd4BWQIlAfUDBgEIxAADAwEEAwEBAgMdASoBVQJTAbIDHQEpQAADCgENAVICUQGp
        AVUCUwGyAVUCUwGyAVUCUwGyAVUCUwGyAVUCUwGyAVQCUgGuAx4BK/8A+QABQgFNAT4HAAE+AwABKAMA
        AVADAAEUAwABAQEAAQEFAAHwFwAD/wEAAf4BfwL/AY8HAAHwAQ8B/wH8AQEHAAHwAQ8B/wH4AQEHAAHg
        AQcB/wH4AQEHAAHgAQcB/wH8AQEHAAHgAQABPAkAAeABAAEYCQAB8AEAARgJAAHwAQABGAEAAQEHAAH8
        AQIBGAEAAQEHAAHwAQABGAEAAQEHAAHwAQABGAEAAQEHAAHgAQABGAEAAQEHAAHAAQABOAEAAQEHAAHB
        AQ8B+AEAAQEHAAHgAQ8B+AEAAQEHAAHwAQ8B+AEAAQMHAAHwAQ8B/wEAAR8HAAHwAX8B/wGAAT8HAAX/
        BwAL
</value>
  </data>
</root>