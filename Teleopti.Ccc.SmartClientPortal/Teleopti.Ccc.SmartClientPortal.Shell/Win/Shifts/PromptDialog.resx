<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAA
        DgAAAk1TRnQBSQFMAgEBAgEAATQBAAE0AQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGS4AAzoBYQNDAXdgAAMHAQkDTgGZAyQBNsAAAycBOwFnAjEB8gM4AV4BXQI7
        Ae0BXAJWAckDLgFHAWQCRgHnAxcBIEgAAwYBCAExAjABTQMSARgDMwFSAYEBsgG8Af8BQAI/AW4DEwEa
        AzMBUgMKAQ60AANHAYIBgQG3Ab4B/wGBAaoBswH/AYUBygHQAf8BiAHOAdQB/wN/Af4BgQGwAboB/wNF
        AX1EAAMCAQMBYAJUAdQBgQGjAa0B/wFhAkYB5AFNAiEB+gGiAe4B8AH/AU0CIQH6AWUCRgHlA38B/gFT
        AlIBqrAAAwcBCQM4AV4BgQGxAboB/wGKAdwB4wH/AaYC+AH/Aa4C+gH/AaoB+QH6Af8BgQHAAcgB/wM7
        AWMDCQEMQAADAwEEAVkCVAHCAYEBuQHCAf8BgQGuAbcB/wGKAdMB2AH/AakB+QH6Af8BlwHZAd4B/wGB
        AbkBwAH/AYYBzwHVAf8BXAJWAcywAAMvAUkBgQGqAbMB/wGBAb4ByQH/AZEB5gHpAf8DPAFmATUCNAFV
        AaQC9QH/AZoB6wHtAf8BgQGmAbAB/wM+AWtEAAMaASUBgQGoAbMB/wGCAdoB4gH/AY0B4wHoAf8BlwH1
        AfYB/wGlA/8BvQP/AYEBtQG9Af8DNwFbsAABLAIrAUMBmwHbAeQB/wGpAdwB7QH/AV4CVQHOAxMBGgMg
        AS4BYQJNAdwBlgHuAfIB/wGdAesB7QH/ATYCNQFYA0sBjgFNAiEB+gMOARMDLQFGAwsBDxAAAxoBJQFa
        AlYBvQFZAlYBvgFZAlYBvgFZAlYBvgFZAlYBvgFZAlYBvgFhAkYB5gGBAacBsQH/AYEBugHFAf8BggHX
        Ad4B/wHAAdcB1AH/AdQBywHHAf8BuwHUAdEB/wGiAvwB/wGfAeoB7AH/AU0CIQH6AU4CTQGVrAADBAEG
        AzQBVAGkAeoB8AH/AYsBwQHOAf8BRAJAAf0BRQJAAf0BgQGyAb4B/wGRAesB7QH/AYEBtQG8Af8BagEj
        ASUB+QFDAkAB/QGXAeEB5AH/AYEBpAGvAf8BQgJAAf0BYAJUAdQDBgEICAADEQEXAVACTwGbAYICQAH9
        AYEBigGpAf8BgQGLAakB/wGBAYsBqQH/AYEBiwGpAf8BgQGFAaMB/wGdAdYB3wH/AakB3QHnAf8BowHZ
        AegB/wGFAc8B1AH/AYEBkAGrAf8BgQGKAakB/wGBAYoBqAH/AYkB1wHcAf8BlgHtAfAB/wGjAfgB+QH/
        A04BmbAAAVACTwGbAaMB6QHuAf8BpwHeAesB/wGgAdEB4gH/AaQB1AHjAf8BmQHbAeUB/wGfAvMB/wGB
        AcsB0AH/AYEBvwHIAf8BmAHqAewB/wGyAv0B/wGYAecB6gH/AYEBwgHKAf8BXgJVAc4DBQEHCAADHwEs
        AWgBgQG3Af8BSQGBAa4B/wFKAYEBrwH/AUoBgQGvAf8BSgGBAa8B/wFKAYEBrwH/AUcBgQGtAf8BYQGD
        AbsB/wGBAa0BzwH/Aa8B5wHxAf8BkAHIAdMB/wGBAakBtgH/AYEBnwG4Af8BgQGjAbUB/wGBAbMBvQH/
        AYIB0wHbAf8DSgGMAx0BKrAAAzUBVwFfAi0B8wNLAY4BXgJVAc4BYQJNAdwBTAJLAZABmAHqAewB/wGB
        AbkBwAH/AYEBygHVAf8BYQJIAeIBVQJTAa0BpwL5Af8BoAHoAeoB/wFfAkkB4wMvAUoIAAMeASsBaQGB
        AbYB/wFJAYEBrQH/AUoBgQGtAf8BSgGBAa0B/wFKAYEBrQH/AUoBgQGtAf8BSgGBAa0B/wFHAYEBrAH/
        AXkBkwG2Af8BogLsAf8BqgHbAekB/wGHAcABzAH/AYEBswG8Af8BgwG9AcgB/wGCAcYB1AH/A38B/gNH
        AYK8AAMTARoBWwJVAcYBTgJNAZYDDQESAY0BzAHUAf8BiAHBAc4B/wGNAkAB/QMiATIEAANQAZ4BmwHx
        AfMB/wGFAc4B0wH/Az8BbQgAAx4BKwFsAYEBuAH/AVQBgQGxAf8BVAGBAbUB/wFQAYEBwgH/AVQBgQG1
        Af8BVQGBAbEB/wFVAYEBsQH/AVUBgQGxAf8BrwH/Af0B/wGnAesB7wH/AaMB+QH7Af8BpwHgAe4B/wGw
        AeMB8QH/Aa4B4QHtAf8BqwH4AfUB/wGVAd4B5QH/AWACTgHetAADNgFZAVACTwGbA04BmAGBAcMBygH/
        AVcCVQG6AUUCRAF8AV8CIQH7AV0CMQHwAZ0BzgHcAf8BWAJVAcEDUQGiAWICNAHvAYEBzQHVAf8BWwJU
        AcsDHgErCAADHgErAXMBgQG6Af8BYgGBAboB/wFwAYEBogH/A4EB/wF2AYEBmAH/AWIBgQG8Af8BYwGB
        AbcB/wFjAYEBtgH/AWoBgQG7Af8BhAHPAeYB/wGBAYsBmAH/AYEBqQGoAf8BrgHuAfUB/wGBAcsB3gH/
        AYEBlAHCAf8BagIlAfkDJwE6tAABXwIhAfsBgQGrAbUB/wGBAa4BtwH/AbQB+wH8Af8BgQG0Ab0B/wGB
        AakBsgH/AYEBqgGzAf8BkQHjAeUB/wGrAdsB6wH/AYYBvgHLAf8BgQGzAb4B/wGIAcYB0gH/AYoB2gHh
        Af8BXgJUAdUDBwEJCAADHgErAYEBhgG8Af8BdwGIAccB/wKBAYsB/wKGAYcB/wKBAYQB/wF3AYoByQH/
        AYEBhwG+Af8BgQGHAb4B/wF5AYMBvQH/AXQBgQG1Af8DgQH/AoEBjAH/AZoB4AHoAf8BgQGgAcsB/wF0
        AYEBugH/AWUCIwH4Ax8BLbAAAwoBDgFWAlQBswGBAcAByQH/AY8B5AHpAf8BoQL1Af8BrgH4AfkB/wGg
        AeUB6AH/AV0CMQHwAWECOQHuAZsCQAH9AaICQAH9AaUB4AHpAf8BnwHsAe0B/wGYAekB6wH/AV4CVAHV
        AwcBCQgAAx4BKwGBAYMBtQH/AXkBgQGtAf8BkQGbAaYB/wP1Af8BpQGpAbAB/wF4AYEBrgH/AoEBqwH/
        AoEBqwH/AoEBqwH/AoEBqgH/AZoBmAGZAf8CgQGuAf8BgQGOAaEB/wKBAawB/wF5AYEBswH/AWUCIwH4
        Ax8BLawAAwIBAwFcAlYByQGBAasBtQH/AYEBxAHSAf8BXQJSAdIDLQFFAVcCVQG3AakC+wH/AYEBrgG3
        Af8BXgJNAd0DEQEXA0wBkgFfAiEB+wMPARQDLgFIAwwBEAwAAx4BKwGBAZABxAH/AYEBmwHPAf8BgQGc
        AcAB/wGyAbEBswH/AYQBnQG7Af8BgQGbAdAB/wGBAZsBzQH/AYEBmwHNAf8BgQGbAc0B/wGBAZsBzwH/
        AY4BnQG1Af8BmAGcAaYB/wGFAZwBvAH/AYEBmwHOAf8BgQGSAckB/wFlAiMB+AMfAS2vAAEBAVwCVgHM
        AawB4gHvAf8BpAHcAesB/wNCAXUEAAMrAUIBgQHLAdMB/wGkAf0B/AH/AVcCVgG4JAADHgErAYEBnwHL
        Af8BqwHAAd0B/wGkAb4B3QH/AZ4BvgHnAf8BpAG+Ad4B/wGnAb4B2wH/AagBvgHbAf8BqAG+AdsB/wGo
        Ab4B2wH/AacBvgHbAf8BpAG+Ad8B/wGfAb4B5QH/AaMBvgHfAf8BqAG+AdsB/wGGAakB0wH/AWkCKwH8
        AyEBMLAAAxIBGAFTAlIBqgGyAeIB8gH/AWoCJQH5AVwCSgHfAVoCKwH8AYEBwwHNAf8BnwH3AfUB/wMU
        ARwkAAMfAS0BgQGYAccB/wGUAbAB1QH/AZEBrwHVAf8BkwGzAeEB/wGUAbUB3gH/AZIBrwHXAf8BkgGv
        AdUB/wGSAa8B1QH/AZIBrwHVAf8BkgGvAdgB/wGUAbMB3AH/AZQBtQHiAf8BkQGuAdUB/wGSAa8B1QH/
        AYEBnwHMAf8DSAGFAwwBELQAAWYCKwH8AaUB4AHqAf8BpwHbAekB/wGVAcsB2AH/AaQB2AHmAf8BkgHY
        AeMB/wGTAeYB5wH/AyQBNSQAAwgBCwMsAUQDLAFEAzgBXgOBAf8DRwGCAysBQgMsAUQDLAFEAywBRAEs
        AisBQwM7AWMBYgImAfYDPwFtAywBRAMsAUQDCwEPuAADSgGLAVwCVgHPA0wBkgGkAd8B6gH/AVgCVAG5
        AVICUAGjAVQCUwGsAwYBCDAAAwQBBQFiAjQB7wFkAkYB5wFRAlABnwNQAZ0DUAGdA1ABnQNQAZ4BYAJO
        Ad4BWQIqAfUDBgEIxAADAwEEAwEBAgMdASoBVQJUAbIDHQEpQAADCgENA1IBqQFVAlQBsgFVAlQBsgFV
        AlQBsgFVAlQBsgFVAlQBsgFUAlMBrgMeASv/APkAAUIBTQE+BwABPgMAASgDAAFQAwABFAMAAQEBAAEB
        BQAB8BcAA/8BAAH+AX8C/wGPBwAB8AEPAf8B/AEBBwAB8AEPAf8B+AEBBwAB4AEHAf8B+AEBBwAB4AEH
        Af8B/AEBBwAB4AEAATwJAAHgAQABGAkAAfABAAEYCQAB8AEAARgBAAEBBwAB/AECARgBAAEBBwAB8AEA
        ARgBAAEBBwAB8AEAARgBAAEBBwAB4AEAARgBAAEBBwABwAEAATgBAAEBBwABwQEPAfgBAAEBBwAB4AEP
        AfgBAAEBBwAB8AEPAfgBAAEDBwAB8AEPAf8BAAEfBwAB8AF/Af8BgAE/BwAF/wcACw==
</value>
  </data>
</root>