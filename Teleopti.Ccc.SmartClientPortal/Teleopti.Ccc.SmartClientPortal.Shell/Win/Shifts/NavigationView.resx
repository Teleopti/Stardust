<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA+
        CwAAAk1TRnQBSQFMAgEBBAEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8ALgADCAELAygBPQMj
        ATMBSQJIAYgDIgExAycBOgMEAQY4AAMBAQIDDAEQAw0BEQNKAY0DLAFEAwcBCgMJAQwDAAEBjAADLgFH
        AWoBdAF/AfkBWwFdAV8BwQFpAX8BgAHtAVcCWAGzAW4BewF/AfMDJwE7NwABAQNAAW4DUQGcA0wBkgFy
        AYkBigHpAVUCUgG0A0oBigNHAYIDEgEYiAADAwEEAzEBTwGBAbMBuwH/AY0B1wHdAf8BoQHuAe8B/wGh
        AeAB4QH/AYEBvAHFAf8DMgFRAwQBBTAAAwIBAwNZAccBgAGpAbEB/QFvAZgBmwH7AZwB4wHlAf8BfwGl
        AakB/gF5AaABowH6AWUCcwHiAyIBMYgAAxoBJQFhAWwBbQHSAYEBvgHJAf8BaQJ+AdkDOAFeAW4CfQHV
        AZoB6wHtAf8BZgJyAdoDJAE2NAADGgElAYEBtQG/Af8BiAHfAeUB/wGVAfEB8wH/AaUD/wGuAe0B7wH/
        AVcCWAGtAxEBF4gAAxMBGgFYAVkBWgGsAagB4AHuAf8CWAFaAbkDNwJaAlwBxQGVAe0B8QH/AW4CgQHf
        A00BlQFcAlgB5wMxAU4DPAFnAxgBIgMAAQEEAAMQARUDSQGIA14BzgJeAV8BzgJeAV8BzgJeAV8BzgFl
        AWgBbAHlAYsBtQG/Af8BiAHHAdEB/wGaAc0B0wH/AbwBvgHCAf8BrQHCAccB/wGcAfEB8gH/AX8BmwGc
        Af4DVAGviAADAQECAzcBWwGkAeoB7wH/AY8BvgHKAf8BcQGCAYoB/gGHAbcBwgH/AZgB7wHwAf8BegGu
        AbUB/wFqAYcBjAH9AZcB2QHaAf8BjQHGAc0B/wFfAW8BcAHzAz8BbQMBAQIEAAMxAU0CYQFvAeYBXQF4
        AZ8B/wFdAYYBrAH/AV0BhgGsAf8BXAGFAaoB/wFwAaMBxAH/AZUBxQHbAf8BogHbAecB/wGGAbUBwwH/
        AYEBlwGxAf8BgQGXAa8B/wGHAcwB0wH/AW8BjAGNAeMDRAF7FAADEwEaAzYBgAMdAdUDHQHVAzQBgAMT
        ARooAAMVARoDbQGAA7gB1QO3AdUDbAGAAxUBGiAAAzEBTgFlAmIB9gFYAlkBtgFmAmsB4AFZAlsBugGa
        AewB7gH/AYEBwAHHAf8BbgGSAZYB9QFeAmMBywGjAvUB/wGGAasBrAH3A0oBjAMLAQ8EAAM6AWABSwGB
        AbIB/wE8AYEBrgH/ATwBgQGuAf8BPAGBAa4B/wE8AYEBrQH/AT8BggGvAf8BcAGaAbwB/wGlAeYB6wH/
        AZUByQHWAf8BgwGxAb4B/wGDAbcBwwH/AYEBtgHBAf8BWgJcAcIDHQEqFAADOQGAA18B/wOCAf8DfQH/
        A1YB/wM0AYAoAANuAYAD8AH/A/YB/wP1Af8D7wH/A2wBgCgAAy0BRQNUAa4DIwEzAY0BzAHUAf8BiQGh
        AaoB/wFPAk4BmAMKAQ0DUAGeAZYB6AHrAf8BWAJcAbYDFAEbBAADOgFgAVIBgQG1Af8BRgGBAbQB/wFC
        AYEBwgH/AUYBgQG0Af8BRwGBAbEB/wFHAYEBsQH/Aa8B/wH9Af8BpgHvAfIB/wGlAe0B9QH/Aa4B4gHw
        Af8BrgHhAe0B/wGmAfIB8QH/AW8BhgGHAe8DJgE4FAADLgHVA4gB/wNhAf8DVQH/A30B/wMdAdUoAAO8
        AdUD9wH/A/AB/wPvAf8D9gH/A7gB1SAAAzoBYQFWAlgBtAFdAWABYwHFAWsBggGDAeYBUwJVAakBZAE9
        AT4B/AFuAYIBhgH3AXIBhAGFAegBWQJbAb8BZgFhAWYB8wFwAZoBoAHzA0MBeAMHAQkEAAM6AWABYQGD
        AbwB/wFlAYIBpQH/AoIBgwH/AWgBggGeAf8BWwGDAb0B/wFbAYMBuAH/AWABggG8Af8BegGvAcgB/wGB
        AZQBmgH/AZ8B2AHeAf8BgQHAAdkB/wFuAXkBlwH+A04BmAMKAQ4UAAMxAdUDigH/A2YB/wNcAf8DgQH/
        Ax8B1SgAA7wB1QP3Af8D8gH/A/AB/wP2Af8DuQHVHAADAwEEAVICUAGjAYEBtgG/Af8BkQHVAdoB/wGi
        AegB6gH/AZMBywHRAf8BawFzAXgB+AGBAY0BjgH5AZUBfwGGAf4BkwG3AcAB/wGUAdkB4AH/AX4BpwGq
        AfUDQAFvAwEBAgQAAzoBYAFwAYUBugH/AYMBjAGhAf8DvgH/AYoBkQGjAf8BbAGFAbkB/wFuAYQBtQH/
        AW0BggG0Af8BeAGEAacB/wGIAYcBlgH/AYsBqgG7Af8BdgGRAbwB/wFhAWcBmAH9A0wBkwMIAQsUAAM9
        AYADaQH/A4oB/wOGAf8DYgH/AzcBgCgAA24BgAPyAf8D9wH/A/cB/wPxAf8DbQGAGwABAQMxAU4BYQFr
        AW0B2AGBAcMB0AH/AVsCXwHDAVACUQGeAYkCswHyAW0BkAGVAfsBWQJWAb4BRgJFAX8BZwJWAekDMQFP
        Az0BaQMYASIDAAEBBAADOgFgAXsBkQHEAf8BgwGaAb0B/wHDAcIBxAH/AYgBngG8Af8BeQGVAccB/wF6
        AZUBxQH/AXoBlQHFAf8BhQGXAcAB/wGSAZkBrAH/AYgBmAGyAf8BegGVAcYB/wFtAXEBoQH9A0wBkwMI
        AQsUAAMTARoDPQGAAzIB1QMwAdUDOgGAAxMBGigAAxUBGgNuAYADvAHVA7wB1QNuAYADFQEaHAADPQFn
        AYkBowGrAfIBpAHcAesB/wM2AVgDGAEhAWICcQHQAaQB/QH8Af8DSgGKHAADOgFgAZYBsAHUAf8BpgG/
        Ad0B/wGeAb4B5wH/AaUBvgHdAf8BqAG+AdsB/wGoAb4B2wH/AagBvgHbAf8BpgG+AdwB/wGiAb4B4gH/
        AaIBvgHhAf8BqAG+AdsB/wF9AYIBogH+AU4CTQGWAwkBDIgAAwcBCQNOAZQBrwHiAfAB/wFtAmIB9gFn
        AWYBZwHyAX4BpQGtAf4BnAHzAfIB/wMTARocAAMyAVABZQFqAXEB0AFpAXABdwHVAY4BpwHJAf8BbQF2
        AX8B3AFlAWwBdAHQAWUBbAFzAdABZQFsAXMB0AFnAW0BdQHSAXcBgQGTAesBbgF2AYUB4wFlAWwBcwHQ
        AVkBWgFfAbcDJwE6AwIBA4wAA0wBkwFyAoEB5wFpAXUBdgHWAXwBlgGbAe4BZQFuAXAB1AFkAnIB1gMR
        ARccAAMKAQ0DGAEiAyABLgFtAmUB9wFSAlABpANAAXEDQAFxA0ABcQNFAX0BWgJWAcwDPQFpAxgBIgMU
        ARwDAwEEkAADFAEcAyQBNQM7AWQDSgGKAyIBMgMeASsDAQECJwABAQMtAUYDVgG2A1QBrQNUAa0DVAGt
        A1UBsANKAYwDEgEZ/wCRAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAB4AE/
        Af8BAAT/AeABPwH+AQAE/wHAAR8B/gEABP8BwAEfAf8BAAT/AcABAAGAAQAE/wHAAQABgAEAAfgBHwH4
        AR8B4AEAAYABAAH4AR8B+AEfAfgBAAGAAQAB+AEfAfgBHwHgAQABgAEAAfgBHwH4AR8BwAEAAYABAAH4
        AR8B+AEfAYABAAGAAQAB+AEfAfgBHwHAAT8BgAEABP8BwAE/AYABAAT/AeABPwGAAQEE/wHgAT8B4AEP
        DP8L
</value>
  </data>
</root>