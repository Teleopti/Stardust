<UserControl x:Class="Teleopti.Ccc.WpfControls.Controls.Intraday.Views.RealTimeScheduleView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit"
    xmlns:UserTexts="clr-namespace:Teleopti.Ccc.UserTexts;assembly=Teleopti.Ccc.UserTexts"
    xmlns:Converters="clr-namespace:Teleopti.Ccc.WinCode.Converters;assembly=Teleopti.Ccc.WinCode"
    xmlns:Timeline="clr-namespace:Teleopti.Ccc.WpfControls.Controls.Time.Timeline"
    xmlns:Converters1="clr-namespace:Teleopti.Ccc.WpfControls.Converters"
    xmlns:Layers="clr-namespace:Teleopti.Ccc.WpfControls.Controls.Layers"
    xmlns:GuiHelpers="clr-namespace:Teleopti.Ccc.WinCode.Common.GuiHelpers;assembly=Teleopti.Ccc.WinCode">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="..\..\..\Resources\Common.xaml"/>
				<ResourceDictionary Source="..\..\..\Resources\DateTimeConverters.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<!--Henrik 090601. These can be removed and put on the viewmodel instead-->
			<Converters:ElapsedTimeConverter x:Key="elapsedTimeConverter"/>
			<Converters:TimeSpanRoundingConverter x:Key="timeSpanRoundingConverter"/>
			<Converters:SimpleConverter x:Key="simpleConverter"/>
			<Style TargetType="Control" x:Key="SpecialHeader">
				<Setter Property="Background" Value="{StaticResource RaptorStandardGradientBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>
            
            <Style TargetType="Control" x:Key="SpecialLeftHeader" BasedOn="{StaticResource HeaderStyle}">
                <Setter Property="BorderBrush" Value="{StaticResource RaptorStandardCellBorderBrush}"/>
                <Setter Property="BorderThickness" Value="0.5"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>
            <Style TargetType="Control" x:Key="HeaderWithHand" BasedOn="{StaticResource HeaderStyle}">
                <Setter Property="Cursor" Value="Hand"/>
            </Style>
            <Style TargetType="Layers:LayerListBox" x:Key="LayerListBoxStyle">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

	</UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

	<Controls:DataGrid Grid.ColumnSpan="4"
        HorizontalScrollBarVisibility="Visible" 
                       FrozenColumnCount="9" 
                       BorderBrush="{StaticResource RaptorStandardGradientBrush}" 
                       Background="{StaticResource RaptorStandardLightGradientBrush}"  
                       HorizontalAlignment="Stretch"  
					   VerticalAlignment="Stretch" 
					   ItemsSource="{Binding Path=DayLayerViewModel.Models}"
					   AutoGenerateColumns="False"
                       CellStyle="{StaticResource CellStyle}"
                       SelectionMode="Extended" CanUserSortColumns="True"
                       RowStyle="{StaticResource RtaScheduleRowStyle}"
                       EnableColumnVirtualization="True"
                       VerticalGridLinesBrush="{StaticResource RaptorStandardCellBorderBrush}"
                       HorizontalGridLinesBrush="{StaticResource RaptorStandardCellBorderBrush}"
					   x:Name="realTimeDataGrid"
					   x:FieldModifier="private">

		<!--AgentName Column-->
		<Controls:DataGrid.Columns>
			<Controls:DataGridTextColumn HeaderStyle="{StaticResource SpecialLeftHeader}"
                                             Header="{x:Static Member=UserTexts:Resources.AgentName}" 
                                             Width="Auto"
                                             CanUserSort="True"
                                             SortMemberPath="CommonNameDescription"
                                             CanUserReorder="False"
                                             Binding="{Binding Path=CommonNameDescription,Mode=OneWay}"/>

			<!--AgentGroup Column-->
                <Controls:DataGridTextColumn HeaderStyle="{StaticResource HeaderWithHand}"
                                             Header="{x:Static Member=UserTexts:Resources.Team}" 
                                             Width="Auto"                            
                                             CanUserSort="True"
                                             SortMemberPath="Team.Description.Name"
                                         CanUserReorder="False"
                                             Binding="{Binding Path=Team.Description.Name,Mode=OneWay}"/>

			<!--AgentState Column-->
                <Controls:DataGridTextColumn HeaderStyle="{StaticResource HeaderWithHand}"
                                             Header="{x:Static Member=UserTexts:Resources.State}" 
                                             Width="Auto" 
                                             CanUserSort="True"
                                             SortMemberPath="CurrentStateDescription"
                                         CanUserReorder="False"
                                             Binding="{Binding Path=CurrentStateDescription,Mode=OneWay}"/>

			<!-- Current Activity Column-->
                <Controls:DataGridTextColumn HeaderStyle="{StaticResource HeaderWithHand}"
                                             Header="{x:Static Member=UserTexts:Resources.Scheduled}" 
                                             Width="Auto" 
                                             CanUserSort="True"
                                             SortMemberPath="CurrentActivityDescription"
                                         CanUserReorder="False"
                                             Binding="{Binding Path=CurrentActivityDescription,Mode=OneWay}"/>
			<!--Binding="{Binding Path=CurrentActivityLayer, Converter={StaticResource layerDescriptionConverter},Mode=OneWay}"/>-->


			<!--Next Activity Column-->
                <Controls:DataGridTextColumn HeaderStyle="{StaticResource HeaderWithHand}"
                                             Header="{x:Static Member=UserTexts:Resources.Next}" 
                                             Width="Auto" 
                                             CanUserSort="True"
                                             SortMemberPath="NextActivityDescription"
                                         CanUserReorder="False"
                                             Binding="{Binding Path=NextActivityDescription,Mode=OneWay}"/>

			<!--Next Start Column-->
                <Controls:DataGridTemplateColumn HeaderStyle="{StaticResource HeaderWithHand}"
                                             Header="{x:Static Member=UserTexts:Resources.NextStart}" 
                                             Width="Auto"
                                             CanUserSort="True"
                                             CanUserReorder="False"
                                             SortMemberPath="NextActivityStartDateTime">
				<Controls:DataGridTemplateColumn.CellTemplate>
					<DataTemplate>
						<TextBlock VerticalAlignment="Top" x:Name="nextStartTextBlock">
							<TextBlock.Text>
							<MultiBinding Converter="{StaticResource DateTimeToLocalConverter}" StringFormat="t">
								<MultiBinding.Bindings>
									<Binding Path="NextActivityLayer.Period.StartDateTime"/>
									<Binding RelativeSource="{RelativeSource Self}" Path="(GuiHelpers:VisualTreeTimeZoneInfo.TimeZoneInfo)"/>
								</MultiBinding.Bindings>
							</MultiBinding>
							</TextBlock.Text>
						</TextBlock>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=ShowNextActivity}" Value="False">
								<DataTrigger.Setters>
									<Setter TargetName="nextStartTextBlock" Property="TextBlock.Text" Value=""/>
								</DataTrigger.Setters>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</Controls:DataGridTemplateColumn.CellTemplate>
			</Controls:DataGridTemplateColumn>


			<!--Alarm name Column-->
                <Controls:DataGridTextColumn HeaderStyle="{StaticResource HeaderWithHand}"
                                             Header="{x:Static Member=UserTexts:Resources.Name}" 
                                             Width="Auto"
                                             CanUserSort="True"
                                             SortMemberPath="AlarmDescription"
                                         CanUserReorder="False"
                                             Binding="{Binding Path=AlarmDescription,Mode=OneWay}"/>

			<!--Alarm time Column-->
                <Controls:DataGridTextColumn HeaderStyle="{StaticResource HeaderWithHand}"
                                             Header="{x:Static Member=UserTexts:Resources.Time}" 
                                             Width="Auto"  
                                             SortMemberPath="SortTime"
                                             Binding="{Binding Path=AlarmLayer.Period, Converter={StaticResource elapsedTimeConverter}, StringFormat=T,Mode=OneWay}"/>

			<!--Pinned Column-->
                <Controls:DataGridTemplateColumn CanUserReorder="False" SortMemberPath="IsPinned" CanUserSort="True" HeaderStyle="{StaticResource HeaderWithHand}" Header="{x:Static Member=UserTexts:Resources.Pin}" >
				<Controls:DataGridTemplateColumn.CellTemplate>
					<DataTemplate>
						<!--<Grid Height="10" Width="10">-->
						<!--<Border Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{StaticResource Raptor_CheckIcon}" Visibility="{Binding Path=IsPinned,Converter={StaticResource visibilityConverter}}"/>-->
						<CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=IsPinned,Mode=TwoWay,Converter={StaticResource simpleConverter}}" Opacity="1" Cursor="Hand"/>
						<!--</Grid>-->
					</DataTemplate>
				</Controls:DataGridTemplateColumn.CellTemplate>
			</Controls:DataGridTemplateColumn>


                <!-- ScheduleColumn -->
                <!-- Note: In codebehind, we get the schedulecolumn by getting the last column!!!! Dont move this column without refactoring the codebehind! -->
			<Controls:DataGridTemplateColumn CanUserReorder="False" 
											 HeaderStyle="{StaticResource SpecialHeader}"
                                             SortMemberPath="ScheduleStartDateTime"
                                             CanUserSort="True" 
											 Width="2400" >

                <Controls:DataGridTemplateColumn.Header>
                        <Timeline:TimelineControl IsHitTestVisible="False" DataContext="{Binding Path=TimelineModel}" Loaded="TimelineControl_Loaded"/>
                </Controls:DataGridTemplateColumn.Header>
                <Controls:DataGridTemplateColumn.CellTemplate>
				    <DataTemplate>
                            <Layers:LayerListBox DataContext="{Binding Path=Layers}" Loaded="LayerListBox_Loaded"
											    Background="{StaticResource RaptorStandardLightGradientBrush}" Style="{StaticResource LayerListBoxStyle}"/>
                        
				    </DataTemplate>
				</Controls:DataGridTemplateColumn.CellTemplate>
			</Controls:DataGridTemplateColumn>
		</Controls:DataGrid.Columns>
		<!-- Note: In codebehind, we get the schedulecolumn by getting the last column!!!! Dont move this column without refactoring the codebehind! -->


		</Controls:DataGrid>
        <TextBox x:Name="aa"
                 FontWeight ="Bold"
                 FontFamily ="SegoeUI, Segoe UI, Tahoma"
                 VerticalAlignment="Top" 
                 Grid.Column="0"
                 Margin="7,1,0,0"
                 Height="25"
                 Width="{Binding Path=AgentColumnWidth}"
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Text="{x:Static UserTexts:Resources.Agent}" 
                 BorderThickness="0.3"
                 IsHitTestVisible="False"
                 BorderBrush="{StaticResource RaptorStandardCellBorderBrush}" Background="{StaticResource RaptorAgentGradientSeeThroughBrush}"></TextBox>
        <TextBox x:Name="bb"
                 FontWeight ="Bold"
                 FontFamily ="SegoeUI, Segoe UI, Tahoma"
                 VerticalAlignment="Top"
                 Margin="0,1,0,0"
                 Grid.Column="1"
                 Height="25"
                 Width="{Binding Path=ActivityColumnWidth}"
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Text="{x:Static UserTexts:Resources.Activity}" 
                 BorderThickness="0,0.3,0.3,0.3" 
                 IsHitTestVisible="False"
                 BorderBrush="{StaticResource RaptorStandardCellBorderBrush}" Background="{StaticResource RaptorActivityGradientSeeThroughBrush}" ></TextBox>
        <TextBox x:Name="cc"
                 FontWeight ="Bold"
                 FontFamily ="SegoeUI, Segoe UI, Tahoma"
                 VerticalAlignment="Top"
                 Margin="0,1,0,0"
                 Grid.Column="2"
                 Height="25"
                 Width="{Binding Path=AlarmColumnWith}"
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Text="{x:Static UserTexts:Resources.Alarm}" 
                 BorderThickness="0,0.3,0.3,0.3" 
                 IsHitTestVisible="False"
                 BorderBrush="{StaticResource RaptorStandardCellBorderBrush}" Background="{StaticResource RaptorAlarmGradientSeeThroughBrush}"></TextBox>
   
    </Grid>

</UserControl>
