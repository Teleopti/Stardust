<UserControl x:Class="Teleopti.Ccc.WpfControls.Controls.Restriction.RestrictionEditorTabbedView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Restriction="clr-namespace:Teleopti.Ccc.WinCode.Scheduling.Restriction;assembly=Teleopti.Ccc.WinCode"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Converters="clr-namespace:Teleopti.Ccc.WinCode.Converters;assembly=Teleopti.Ccc.WinCode"
    xmlns:Commands="clr-namespace:Teleopti.Ccc.WinCode.Common.Commands;assembly=Teleopti.Ccc.WinCode"
    xmlns:Controls="clr-namespace:Teleopti.Ccc.WpfControls.Controls" 
    HorizontalAlignment="Stretch"
    Grid.IsSharedSizeScope="True"
    Background="White">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\..\Resources\Common.xaml"/>
                <ResourceDictionary Source="..\..\Resources\CommonBrushes.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="ContextMenu" x:Key="BasicContextMenu">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="MenuItem">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Converters:SimpleConverter x:Key="SimpleConverter"/>
      
        <!-- Local styles, move up....-->

        <Style TargetType="GroupBox" x:Key="GroupBoxStyle" >
            <Setter Property="Padding" Value="10,10,10,10"/>
        </Style>


        <Style TargetType="Label" x:Key="HeaderStyleLocal">
            <Setter Property="Background" Value="{StaticResource LightBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontFamily" Value="SegoeUI, Segoe UI, Tahoma"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0.2"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Background" Value="{StaticResource LightBrush}"></Setter>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Border" x:Key="CellBorder">
            <Setter Property="BorderThickness" Value="0.2"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Border.BorderBrush" Value="{StaticResource RaptorStandardCellBorderBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

            <Style TargetType="ComboBox" x:Key="StandardComboBox" BasedOn="{StaticResource BasicComboBox}">
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="MaxHeight" Value="22"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource LightBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
                <Setter Property="FontFamily" Value="SegoeUI, Segoe UI, Tahoma"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- 
            Henrik: Special gridtemplates
            To be able to use different templates for different rows, instead of gridview, we use ItemsControl.
            To get the columnwidth in sync without using code and states, if used starwidth, bind the template like
            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[xxx].Width}"/>
            Where xxx is the maingrids column
            Or if Auto-sized use the SharedSizeGroup Cxxx where xxx is the column in the maingrid.like:
            <ColumnDefinition SharedSizeGroup="C2"/>
            Or set static width (dont recommend)
        -->

        <DataTemplate x:Key="TabbedTemplate">
            <TabItem Background="{StaticResource LightBrush}" Header="{Binding Path=Description}">
                    <TabItem.Content>
                        <ContentControl Content="{Binding}" HorizontalAlignment="Stretch"/>
                    </TabItem.Content>
                </TabItem>
        </DataTemplate>
        
        <!--Limitation -->
        <DataTemplate DataType="{x:Type Restriction:LimitationViewModel}">
            <UniformGrid Rows="1" HorizontalAlignment="Stretch">
                <Controls:AnalogPresenter  DataContext="{x:Static System:DateTime.Now}" Height="50" Width="50"/>
                
                <TextBox  HorizontalContentAlignment="Right" 
                         Text="{Binding Path=StartTime, Mode=Twoway, Converter={StaticResource SimpleConverter}}" 
                         IsEnabled="{Binding Path=EditableStartTime}"
                         Height="20"/>
                
                <TextBox Name="endTime" HorizontalContentAlignment="Right" 
                         Text="{Binding Path=EndTime, Mode=Twoway, Converter={StaticResource SimpleConverter}}" 
                         IsEnabled="{Binding Path=EditableEndTime}"
                         Height="20"/>
                
                <Controls:AnalogPresenter  DataContext="{x:Static System:DateTime.Now}" Height="50" Width="50"/>
            </UniformGrid>
        </DataTemplate>

        <!-- Available & StudentAvailable -->
        <DataTemplate DataType="{x:Type Restriction:AvailableRestrictionViewModel}">
            <DockPanel>
                <DockPanel LastChildFill="True" DockPanel.Dock="Top">


                    <Button Commands:CreateCommandBinding.Command="{Binding Path=UpdateCommandModel}"
                                Command="{Binding UpdateCommandModel.Command}"
                                Content="xxUpdate"
                                ToolTip="{Binding UpdateCommandModel.Text}"
                                DockPanel.Dock="Left"/>


                    <Label Style="{StaticResource HeaderStyleLocal}" Content="{Binding Path=Description}" FontSize="24"/>
                </DockPanel>
                <UniformGrid Rows="1" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                    <GroupBox Header="xxStartTime" Style="{StaticResource GroupBoxStyle}">
                        <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch"/>
                    </GroupBox>
                    <GroupBox Header="xxEndTime" Style="{StaticResource GroupBoxStyle}">
                        <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch"/>
                    </GroupBox>
                  
                </UniformGrid>

                <UniformGrid Rows="1" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                    <GroupBox Header="xxDayOff" Style="{StaticResource GroupBoxStyle}">
                        <CheckBox  IsChecked="{Binding Path=DayOff}" Content="xxDayOff" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="False" Padding="4,0,4,0" Margin="10,0,10,0"/>
                    </GroupBox>

                </UniformGrid>
            </DockPanel>
        </DataTemplate>
        
        <!--Rotation-->
        <DataTemplate DataType="{x:Type Restriction:RotationRestrictionViewModel}">
            <DockPanel LastChildFill="True">
                <DockPanel LastChildFill="True" DockPanel.Dock="Top">


                    <Button Commands:CreateCommandBinding.Command="{Binding Path=UpdateCommandModel}"
                                Command="{Binding UpdateCommandModel.Command}"
                                Content="xxUpdate"
                                ToolTip="{Binding UpdateCommandModel.Text}"
                                DockPanel.Dock="Left"/>


                    <Label Style="{StaticResource HeaderStyleLocal}" Content="{Binding Path=Description}" FontSize="20"/>
                </DockPanel>
                <UniformGrid Rows="1" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                    <GroupBox Header="xxStartTime" Style="{StaticResource GroupBoxStyle}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch"/>
                            </StackPanel>
                    </GroupBox>
                    <GroupBox Header="xxEndTime" Style="{StaticResource GroupBoxStyle}">
                        <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch"/>
                    </GroupBox>
                    <GroupBox Header="xxWorkTime" Style="{StaticResource GroupBoxStyle}">
                        <ContentPresenter Content="{Binding Path=WorkTimeLimits}" HorizontalAlignment="Stretch"/>
                    </GroupBox>
                </UniformGrid>

                <UniformGrid Rows="1" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                    <GroupBox Header="xxDayOff" Style="{StaticResource GroupBoxStyle}">
                      <CheckBox  IsChecked="{Binding Path=DayOff}" 
                               Content="xxDayOff" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Padding="4,0,4,0" 
                               Margin="10,0,10,0"/>
                    </GroupBox>
                 
                </UniformGrid>
            </DockPanel>
        </DataTemplate>

        <!--Preference-->
        <DataTemplate DataType="{x:Type Restriction:PreferenceRestrictionViewModel}">
                <DockPanel LastChildFill="True">    
                <DockPanel LastChildFill="True" DockPanel.Dock="Top">
                    
               
                    <Button Commands:CreateCommandBinding.Command="{Binding Path=UpdateCommandModel}"
                                Command="{Binding UpdateCommandModel.Command}"
                                Content="xxUpdate"
                                ToolTip="{Binding UpdateCommandModel.Text}"
                                DockPanel.Dock="Left"/>
                
                  
                <Label Style="{StaticResource HeaderStyleLocal}" Content="{Binding Path=Description}" FontSize="24"/>
                </DockPanel>
                <UniformGrid Rows="1" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                    <GroupBox Header="xxStartTime" Style="{StaticResource GroupBoxStyle}">
                        <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch"/>
                    </GroupBox>
                    <GroupBox Header="xxEndTime" Style="{StaticResource GroupBoxStyle}">
                        <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch"/>
                    </GroupBox>
                    <GroupBox Header="xxWorkTime" Style="{StaticResource GroupBoxStyle}">
                        <ContentPresenter Content="{Binding Path=WorkTimeLimits}" HorizontalAlignment="Stretch"/>
                    </GroupBox>
                </UniformGrid>

                <UniformGrid Rows="1" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                    <GroupBox Header="xxShiftCategory" Style="{StaticResource GroupBoxStyle}">
                        <ComboBox ItemsSource="{Binding Path=Categories.View}" 
									DisplayMemberPath="Description.Name" 
									IsSynchronizedWithCurrentItem="True"
									Style="{StaticResource StandardComboBox}"/>
                    </GroupBox>
                    <GroupBox Header="xxActivity" Style="{StaticResource GroupBoxStyle}">
                        <ComboBox ItemsSource="{Binding Path=Activities.View}" 
                          DisplayMemberPath="Name" 
                          IsSynchronizedWithCurrentItem="True"
						  Style="{StaticResource StandardComboBox}"/>
                    </GroupBox>
                </UniformGrid>
            </DockPanel>
        </DataTemplate>
    
        </ResourceDictionary>
            
        </UserControl.Resources>


    <Grid HorizontalAlignment="Stretch">
        <Grid.ContextMenu>
            <ContextMenu Style="{StaticResource BasicContextMenu}">
                <MenuItem Commands:CreateCommandBinding.Command="{Binding Path=AddPreferenceRestrictionCommand}"
                              Command="{Binding AddPreferenceRestrictionCommand.Command}"
                              Header="{Binding AddPreferenceRestrictionCommand.Text}"
                              CommandParameter="{Binding}"
                              />
                
            </ContextMenu>
        </Grid.ContextMenu>
        <TabControl ItemsSource="{Binding Path=RestrictionModels}" 
                    Background="{StaticResource CommonLightBrush}" 
                    ItemTemplate="{StaticResource TabbedTemplate}">
        </TabControl>
        </Grid>
</UserControl>
