<UserControl x:Class="Teleopti.Ccc.WpfControls.Controls.Restriction.RestrictionEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:GuiHelpers="clr-namespace:Teleopti.Ccc.WinCode.Common.GuiHelpers;assembly=Teleopti.Ccc.WinCode"
    xmlns:Restriction="clr-namespace:Teleopti.Ccc.WinCode.Scheduling.Restriction;assembly=Teleopti.Ccc.WinCode"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Domain="clr-namespace:Teleopti.Interfaces.Domain;assembly=Teleopti.Interfaces"
    xmlns:Converters="clr-namespace:Teleopti.Ccc.WinCode.Converters;assembly=Teleopti.Ccc.WinCode"
    xmlns:Commands="clr-namespace:Teleopti.Ccc.WinCode.Common.Commands;assembly=Teleopti.Ccc.WinCode" 
    HorizontalAlignment="Stretch"
    Grid.IsSharedSizeScope="True"
    Background="White">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\..\Resources\Common.xaml"/>
                <ResourceDictionary Source="..\..\Resources\Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Converters:SimpleConverter x:Key="SimpleConverter"/>
           
            <Style TargetType="Border" x:Key="CellBorder">
                <Setter Property="BorderThickness" Value="0.2"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="Border.BorderBrush" Value="{StaticResource RaptorStandardCellBorderBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
            </Style>

            <Style TargetType="ComboBox" x:Key="StandardComboBox">
                <Setter Property="MinWidth" Value="100"/>
                <Setter Property="Background" Value="{DynamicResource RaptorStandardGradientBrush}"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="MaxHeight" Value="22"/>
                <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource RaptorStandardHoverGradientBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="FontFamily" Value="SegoeUI, Segoe UI, Tahoma"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>

            <!-- 
            Henrik: Special gridtemplates
            To be able to use different templates for different rows, instead of gridview, we use ItemsControl.
            To get the columnwidth in sync without using code and states, if used starwidth, bind the template like
            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[xxx].Width}"/>
            Where xxx is the maingrids column
            Or if Auto-sized use the SharedSizeGroup Cxxx where xxx is the column in the maingrid.like:
            <ColumnDefinition SharedSizeGroup="C2"/>
            Or set static width (dont recommend)
        -->

            <!--Limitation -->
            <DataTemplate DataType="{x:Type Restriction:LimitationViewModel}">
                <UniformGrid Rows="1" HorizontalAlignment="Stretch">
                    <TextBox Name="startTime" HorizontalContentAlignment="Right" 
                         Text="{Binding Path=StartTime, Mode=Twoway, Converter={StaticResource SimpleConverter}}"  
                         IsEnabled="{Binding Path=EditableStartTime}" 
                         IsHitTestVisible="{Binding Path=EditableStartTime}"
                         />
                    <TextBox Name="endTime" HorizontalContentAlignment="Right" Text="{Binding Path=EndTime, Mode=Twoway, Converter={StaticResource SimpleConverter}}" 
                         IsEnabled="{Binding Path=EditableEndTime}" 
                         IsHitTestVisible="{Binding Path=EditableEndTime}"
                         />
                </UniformGrid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=Invalid}" Value="True">
                        <Setter TargetName="startTime" Property="Background" Value="{StaticResource RaptorNotValidBrush}"/>
                        <Setter TargetName="endTime" Property="Background" Value="{StaticResource RaptorNotValidBrush}"/>
                    </DataTrigger>
                </DataTemplate.Triggers>

            </DataTemplate>

            <!-- StudentAvailable -->
            <DataTemplate DataType="{x:Type Restriction:AvailableRestrictionViewModel}">
                <Border>
                    <Grid IsHitTestVisible="{Binding Path=Available}" IsEnabled="{Binding Path=Available}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  SharedSizeGroup="C0"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[1].Width}"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[2].Width}"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[3].Width}"/>
                            <ColumnDefinition  SharedSizeGroup="C4"/>
                            <ColumnDefinition  SharedSizeGroup="C5"/>

                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0" Style="{StaticResource CellBorder}">
                            <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">

                                <!--<Button Commands:CreateCommandBinding.Command="{Binding Path=UpdateCommandModel}"
                                Command="{Binding UpdateCommandModel.Command}"
                                Content="{Binding UpdateCommandModel.Text}"
                                ToolTip="{Binding UpdateCommandModel.DescriptionText}"
                                DockPanel.Dock="Left"/>-->

                                <Button Commands:CreateCommandBinding.Command="{Binding Path=DeleteCommandModel}"
                                Command="{Binding DeleteCommandModel.Command}"
                                ToolTip="{Binding DeleteCommandModel.DescriptionText}"
                                Style="{StaticResource DeleteButtonStyle}"
                                DockPanel.Dock="Left"
                                Width="25"/>

                                <Label Style="{StaticResource HeaderStyle}" Content="{Binding Path=Description}"/>
                            </DockPanel>
                        </Border>
                        <Border Grid.Column="1" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch"/>
                        </Border>
                        <Border Grid.Column="2" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch"/>
                        </Border>
                        <Border Grid.Column="3" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=WorkTimeLimits}" HorizontalAlignment="Stretch"/>
                        </Border>
                        <Border Grid.Column="4" Style="{StaticResource CellBorder}">
                            <TextBox Grid.Column="4" Text="{Binding Path=ShiftCategory}" IsEnabled="False"/>
                        </Border>
                        <Border Grid.Column="5" Style="{StaticResource CellBorder}">
                            <CheckBox  IsChecked="{Binding Path=HasDayOff}" 
                                   Content="xxDayOff" VerticalAlignment="Center" 
                                   HorizontalAlignment="Center" 
                                   IsEnabled="False" 
                                   Padding="4,0,4,0" 
                                   Margin="10,0,10,0"/>
                        </Border>

                    </Grid>
                </Border>
            </DataTemplate>
            <!-- Available  -->
            <DataTemplate DataType="{x:Type Restriction:AvailabilityRestrictionViewModel}">
                <Border>
                    <Grid IsHitTestVisible="False" IsEnabled="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  SharedSizeGroup="C0"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[1].Width}"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[2].Width}"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[3].Width}"/>
                            <ColumnDefinition  SharedSizeGroup="C4"/>
                            <ColumnDefinition  SharedSizeGroup="C5"/>

                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0" Style="{StaticResource CellBorder}">
                            <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">

                                <!--<Button Commands:CreateCommandBinding.Command="{Binding Path=UpdateCommandModel}"
                                Command="{Binding UpdateCommandModel.Command}"
                                Content="{Binding UpdateCommandModel.Text}"
                                ToolTip="{Binding UpdateCommandModel.DescriptionText}"
                                DockPanel.Dock="Left"/>-->

                                <Button Commands:CreateCommandBinding.Command="{Binding Path=DeleteCommandModel}"
                                Command="{Binding DeleteCommandModel.Command}"
                                ToolTip="{Binding DeleteCommandModel.DescriptionText}"
                                Style="{StaticResource DeleteButtonStyle}"
                                DockPanel.Dock="Left"
                                Width="25"/>

                                <Label Style="{StaticResource HeaderStyle}" Content="{Binding Path=Description}"/>
                            </DockPanel>
                        </Border>
                        <Border Grid.Column="1" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch"/>
                        </Border>
                        <Border Grid.Column="2" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch"/>
                        </Border>
                        <Border Grid.Column="3" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=WorkTimeLimits}" HorizontalAlignment="Stretch"/>
                        </Border>
                        <Border Grid.Column="4" Style="{StaticResource CellBorder}">
                            <TextBox Grid.Column="4" Text="{Binding Path=ShiftCategory}" IsEnabled="False"/>
                        </Border>
                        <Border Grid.Column="5" Style="{StaticResource CellBorder}">
                            <CheckBox IsChecked="{Binding Path=HasDayOff}" 
                                   Content="xxDayOff" VerticalAlignment="Center" 
                                   HorizontalAlignment="Center" 
                                   IsEnabled="False" 
                                   Padding="4,0,4,0" 
                                   Margin="10,0,10,0"/>
                        </Border>

                    </Grid>
                </Border>
            </DataTemplate>
            <!--Rotation-->
            <DataTemplate DataType="{x:Type Restriction:RotationRestrictionViewModel}">
                <!--<Border Style="{StaticResource TemplateBorder}">-->
                <Grid IsHitTestVisible="False" IsEnabled="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  SharedSizeGroup="C0"/>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[1].Width}"/>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[2].Width}"/>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[3].Width}"/>
                        <ColumnDefinition  SharedSizeGroup="C4"/>
                        <ColumnDefinition  SharedSizeGroup="C5"/>

                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Style="{StaticResource CellBorder}">
                        <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">
                            <Label Style="{StaticResource HeaderStyle}" Content="{Binding Path=Description}"/>
                        </DockPanel>
                    </Border>
                    <Border Grid.Column="1" Style="{StaticResource CellBorder}">
                        <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch"/>
                    </Border>
                    <Border Grid.Column="2" Style="{StaticResource CellBorder}">
                        <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch"/>
                    </Border>
                    <Border Grid.Column="3" Style="{StaticResource CellBorder}">
                        <ContentPresenter Content="{Binding Path=WorkTimeLimits}" HorizontalAlignment="Stretch"/>
                    </Border>
                    <Border Grid.Column="4" Style="{StaticResource CellBorder}">
                        <TextBlock Text="{Binding Path=ShiftCategory}" />
                    </Border>
                    <Border Grid.Column="5" Style="{StaticResource CellBorder}">
                        <CheckBox  IsChecked="{Binding Path=DayOff}" Content="xxDayOff" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4,0,4,0" Margin="10,0,10,0"/>
                    </Border>

                </Grid>
            </DataTemplate>
            <!--Preference-->
            <DataTemplate DataType="{x:Type Restriction:PreferenceRestrictionViewModel}">

                <Border>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  SharedSizeGroup="C0"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[1].Width}"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[2].Width}"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[3].Width}"/>
                            <ColumnDefinition  SharedSizeGroup="C4"/>
                            <ColumnDefinition  SharedSizeGroup="C5"/>

                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Style="{StaticResource CellBorder}">
                            <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">

                                <!--<Button Commands:CreateCommandBinding.Command="{Binding Path=UpdateCommandModel}"
                                Command="{Binding UpdateCommandModel.Command}"
                                Content="{Binding UpdateCommandModel.Text}"
                                ToolTip="{Binding UpdateCommandModel.DescriptionText}"
                                DockPanel.Dock="Left"/>-->

                                <Button Commands:CreateCommandBinding.Command="{Binding Path=DeleteCommandModel}"
                                        Style="{StaticResource DeleteButtonStyle}"
                                Command="{Binding DeleteCommandModel.Command}"
                              Width="25"
                                ToolTip="{Binding DeleteCommandModel.DescriptionText}"
                                DockPanel.Dock="Left"/>

                                <Label Style="{StaticResource HeaderStyle}" Content="{Binding Path=Description}"/>
                            </DockPanel>
                        </Border>
                        <Border Grid.Column="1" Style="{StaticResource CellBorder}" >
                            <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch" Name="startLimits"/>
                        </Border>
                        <Border Grid.Column="2" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch" Name="endLimits"/>
                        </Border>
                        <Border Grid.Column="3" Style="{StaticResource CellBorder}">
                            <ContentPresenter Content="{Binding Path=WorkTimeLimits}" HorizontalAlignment="Stretch" Name="workLimits"/>
                        </Border>
                        <Border Grid.Column="4" Style="{StaticResource CellBorder}">
                            <StackPanel Orientation="Horizontal">
                                <ComboBox ItemsSource="{Binding Path=Categories.View}" 
									DisplayMemberPath="Description" 
									IsSynchronizedWithCurrentItem="True"
									Style="{StaticResource StandardComboBox}"
                                    Name="categories"/>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="5" Style="{StaticResource CellBorder}" >
                            <StackPanel Orientation="Horizontal">
                                <ComboBox ItemsSource="{Binding Path=DayOffTemplates.View}" 
									DisplayMemberPath="Description" 
									IsSynchronizedWithCurrentItem="True"
									Style="{StaticResource StandardComboBox}"
                                      Name="dayoffs"/>
                            </StackPanel>
                        </Border>

                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=HasDayOff}" Value="True">
                        <!--This can be done with  resource instead or exposed View in the viewmodel-->
                        <Setter TargetName="startLimits" Property="Opacity" Value="0.3" />
                        <Setter TargetName="startLimits" Property="IsHitTestVisible" Value="False" />

                        <Setter TargetName="endLimits" Property="Opacity" Value="0.3" />
                        <Setter TargetName="endLimits" Property="IsHitTestVisible" Value="False" />

                        <Setter TargetName="workLimits" Property="Opacity" Value="0.3" />
                        <Setter TargetName="workLimits" Property="IsHitTestVisible" Value="False" />

                        <Setter TargetName="categories" Property="IsEnabled" Value="False" />
                        <Setter TargetName="dayoffs"  Property="Background" Value="{StaticResource RaptorStandardHoverGradientBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=HasShiftCategory}" Value="True">
                        <Setter TargetName="categories" Property="Background" Value="{StaticResource RaptorStandardHoverGradientBrush}"/>
                        <Setter TargetName="dayoffs"  Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <!--ReadOnly-->
            <DataTemplate DataType="{x:Type Restriction:ReadOnlyRestrictionViewModel}">
                <!--<Border Style="{StaticResource TemplateBorder}">-->
                <Grid IsHitTestVisible="False" IsEnabled="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  SharedSizeGroup="C0"/>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[1].Width}"/>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[2].Width}"/>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=ColumnDefinitions[3].Width}"/>
                        <ColumnDefinition  SharedSizeGroup="C4"/>
                        <ColumnDefinition  SharedSizeGroup="C5"/>

                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Style="{StaticResource CellBorder}">
                        <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">
                            <Label Style="{StaticResource HeaderStyle}" Content="{Binding Path=Description}"/>
                        </DockPanel>
                    </Border>
                    <Border Grid.Column="1" Style="{StaticResource CellBorder}">
                        <ContentPresenter Content="{Binding Path=StartTimeLimits}" HorizontalAlignment="Stretch"/>
                    </Border>
                    <Border Grid.Column="2" Style="{StaticResource CellBorder}">
                        <ContentPresenter Content="{Binding Path=EndTimeLimits}" HorizontalAlignment="Stretch"/>
                    </Border>
                    <Border Grid.Column="3" Style="{StaticResource CellBorder}">
                        <ContentPresenter Content="{Binding Path=WorkTimeLimits}" HorizontalAlignment="Stretch"/>
                    </Border>
                    <Border Grid.Column="4" Style="{StaticResource CellBorder}">
                        <TextBlock Text="{Binding Path=ShiftCategory}" />
                    </Border>
                    <Border Grid.Column="5" Style="{StaticResource CellBorder}">
                        <CheckBox  IsChecked="{Binding Path=DayOff}" Content="xxDayOff" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4,0,4,0" Margin="10,0,10,0"/>
                    </Border>

                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch" 
          ShowGridLines="False"
          Commands:TextBoxBehavior.TextChangedCommand="{Binding Path=ChangedCommand}"
          Commands:SelectorBehavior.SelectionChangedCommand="{Binding Path=ChangedCommand}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="C0"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="C4"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="C5"/>

            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>



            <Label Style="{StaticResource HeaderStyle}" Content="xxDescription" Grid.Column="0" />
            <Label Style="{StaticResource HeaderStyle}" Content="xxStartTime" Grid.Column="1" />
            <Label Style="{StaticResource HeaderStyle}" Content="xxEndTime" Grid.Column="2" />
            <Label Style="{StaticResource HeaderStyle}" Content="xxWorkTime" Grid.Column="3" />
            <Label Style="{StaticResource HeaderStyle}" Content="xxShiftCategory" Grid.Column="4" />
            <Label Style="{StaticResource HeaderStyle}" Content="xxDayOff" Grid.Column="5" />

            <ItemsControl ItemsSource="{Binding Path=RestrictionModels}" 
                HorizontalAlignment="Stretch" Grid.Row="1" Grid.ColumnSpan="8"/>
        </Grid>
    </Grid>
</UserControl>
