<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Optimization"
                   default-access="field.camelcase-underscore">

	<class name="PlanningGroup">
		<id name="Id"
            type="guid"
		  			access="nosetter.camelcase-underscore"
            unsaved-value="null">
			<generator class="guid.comb" />
		</id>

		<bag name="Settings" cascade="all-delete-orphan" inverse="true">
			<key column="Parent" />
			<one-to-many class="PlanningGroupSettings"/>
		</bag>
		<many-to-one name="UpdatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"/>
		<property name="UpdatedOn"
              type="UtcDateTime"/>

		<many-to-one name="BusinessUnit"
			class="Teleopti.Ccc.Domain.Common.BusinessUnit"
			access="nosetter.camelcase-underscore"/>
    
    <property name="Name" access="property"/>


    <set name="Filters" table="PlanningGroupFilters" cascade="all-delete-orphan">
      <key column="PlanningGroup" />
      <many-to-any id-type="Guid" meta-type="System.String">
        <meta-value value="Contract" class="Teleopti.Ccc.Domain.Optimization.Filters.ContractFilter" />
        <meta-value value="Team" class="Teleopti.Ccc.Domain.Optimization.Filters.TeamFilter" />
        <meta-value value="Site" class="Teleopti.Ccc.Domain.Optimization.Filters.SiteFilter" />
        <meta-value value="Skill" class="Teleopti.Ccc.Domain.Optimization.Filters.SkillFilter" />
        <column name="FilterType" />
        <column name="Filter"/>
      </many-to-any>
    </set>

		<property name="IsDeleted"
		  type="boolean"
		  not-null="true"/>
		
		<filter name="businessUnitFilter"
			condition=":businessUnitParameter = BusinessUnit" />

		<filter name="deletedFlagFilter"
		  condition="IsDeleted = 0" />
	</class>

</hibernate-mapping>