<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Optimization"
                   default-access="field.camelcase-underscore">

	<class name="PlanningGroupSettings">
		<id name="Id"
            type="guid"
		  			access="nosetter.camelcase-underscore"
            unsaved-value="null">
			<generator class="guid.comb" />
		</id>
		<many-to-one name="UpdatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"/>
		<property name="UpdatedOn"
              type="UtcDateTime"/>

		<many-to-one name="BusinessUnit"
			class="Teleopti.Ccc.Domain.Common.BusinessUnit"
			access="nosetter.camelcase-underscore"/>

		<component name="DayOffsPerWeek" access="property">
			<property name="Minimum" column="MinDayOffsPerWeek" />
			<property name="Maximum" column="MaxDayOffsPerWeek" />
		</component>
		<component name="ConsecutiveWorkdays" access="property">
			<property name="Minimum" column="MinConsecutiveWorkdays" />
			<property name="Maximum" column="MaxConsecutiveWorkdays" />
		</component>
		<component name="ConsecutiveDayOffs" access="property">
			<property name="Minimum" column="MinConsecutiveDayOffs" />
			<property name="Maximum" column="MaxConsecutiveDayOffs" />
		</component>
		<property name="Default" column="DefaultSettings" access="property"/>
		<property name="Name" access="property"/>
		<property name="BlockFinderType" column="BlockFinderType" access="property"/>
		<property name="BlockSameStartTime" column="BlockSameStartTime" access="property"/>
		<property name="BlockSameShiftCategory" column="BlockSameShiftCategory" access="property"/>
		<property name="BlockSameShift" column="BlockSameShift" access="property"/>

		<many-to-one name="PlanningGroup"
					 class="Teleopti.Ccc.Domain.Optimization.PlanningGroup"
						access="nosetter.camelcase-underscore"
					 foreign-key="FK_PlanningGroupSettings_PlanningGroup"/>
		
		<set name="Filters" table="PlanningGroupSettingsFilters" cascade="all-delete-orphan">
			<key column="PlanningGroupSettings" />
			<many-to-any id-type="Guid" meta-type="System.String">
				<meta-value value="Contract" class="Teleopti.Ccc.Domain.Optimization.Filters.ContractFilter" />
				<meta-value value="Team" class="Teleopti.Ccc.Domain.Optimization.Filters.TeamFilter" />
				<meta-value value="Site" class="Teleopti.Ccc.Domain.Optimization.Filters.SiteFilter" />
				<column name="FilterType" />
				<column name="Filter"/>
			</many-to-any>
		</set>
		
		<filter name="businessUnitFilter"
			condition=":businessUnitParameter = BusinessUnit" />
	</class>

	<query name="loadGlobalDefault">
		select dor from PlanningGroupSettings dor where defaultsettings=1 and planningGroup is null
	</query>
</hibernate-mapping>