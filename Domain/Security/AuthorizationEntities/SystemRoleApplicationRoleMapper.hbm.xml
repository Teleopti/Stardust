<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Security.AuthorizationEntities"
                   default-access="field.camelcase-underscore">
  <class name="SystemRoleApplicationRoleMapper">
    <!--IEntity-->
    <id name="Id"
            type="guid"
		  access="nosetter.camelcase-underscore"
            unsaved-value="null">
      <generator class="guid.comb" />
    </id>
    <version name="Version"
             unsaved-value ="null"/>
    <many-to-one name="CreatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 update="false" foreign-key="FK_SystemRoleApplicationRoleMapper_Person_CreatedBy"/>
    <many-to-one name="UpdatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 foreign-key="FK_SystemRoleApplicationRoleMapper_Person_UpdatedBy"/>
    <property name="CreatedOn"
              type="UtcDateTime"
              not-null="true"
              update="false" />
    <property name="UpdatedOn"
              type="UtcDateTime"
              not-null="true"/>
    <!--IEntity-->
	  
    <property name="SystemRoleLongName"
              type="string"
              not-null="true"/>
	<property name="SystemName"
			  type="string"
			  not-null="false"/>
	<many-to-one name="ApplicationRole"
				class="Teleopti.Ccc.Domain.Security.AuthorizationEntities.ApplicationRole"
				not-null="true" foreign-key="FK_SystemRoleApplicationRoleMapper_ApplicationRole"/>
	  
	<property name="IsDeleted"
	  type="boolean"
	  not-null="true"/>
	  
    <many-to-one name="BusinessUnit"
        class="Teleopti.Ccc.Domain.Common.BusinessUnit"
        access="nosetter.camelcase-underscore"
        not-null="true" foreign-key="FK_SystemRoleApplicationRoleMapper_BusinessUnit"/>
    <filter name="businessUnitFilter"
        condition=":businessUnitParameter = BusinessUnit" />
	  <filter name="deletedFlagFilter"
		condition="IsDeleted = 0" />
  </class>
</hibernate-mapping>

