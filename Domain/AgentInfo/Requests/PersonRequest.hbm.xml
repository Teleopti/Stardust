<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.AgentInfo.Requests"
                   default-access="field.camelcase-underscore">

  <class name="PersonRequest">
    <!--IEntity-->
    <id name="Id"
            type="guid"
		  				access="nosetter.camelcase-underscore"
            unsaved-value="null">
      <generator class="guid.comb" />
    </id>
    <version name="Version"
             unsaved-value ="null"/>
    <many-to-one name="CreatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 update="false" foreign-key="FK_PersonRequest_Person_CreatedBy"/>
    <many-to-one name="UpdatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 foreign-key="FK_PersonRequest_Person_UpdatedBy"/>
    <property name="CreatedOn"
              type="UtcDateTime"
              not-null="true"
              update="false" />
    <property name="UpdatedOn"
              type="UtcDateTime"
              not-null="true"/>
    <!--IEntity-->

    <many-to-one name="Person"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true" foreign-key="FK_PersonRequest_Person3"/>
    
    <property name="requestStatus"
              access="field"
              type="int"
					    not-null="true"/>

    <property name="Subject"
    not-null="false"
    type="string"
    length="80"/>
    
    <property name="Message"
        not-null="false"
        type="string"
        length="2000"/>

	<property name="DenyReason"
		not-null="false"
		type="string"
		length="300"/>
    
    <bag name="requests"
            cascade="all-delete-orphan"
            inverse="true"
            access="field">
      <key column ="Parent" />
      <one-to-many class="Teleopti.Ccc.Domain.AgentInfo.Requests.Request" />
    </bag>

    <property name="IsDeleted"
      type="boolean"
      not-null="true"/>
    <many-to-one name="BusinessUnit"
      class="Teleopti.Ccc.Domain.Common.BusinessUnit"
      access="nosetter.camelcase-underscore"
      not-null="true" foreign-key="FK_PersonRequest_BusinessUnit"/>
    <filter name="businessUnitFilter"
            condition=":businessUnitParameter = BusinessUnit" />
    <filter name="deletedFlagFilter"
      condition="IsDeleted = 0" />
  </class>

  <query name="findAllExceptUnapprovedShiftTrades">
    <![CDATA[
    select pr from PersonRequest pr
          left join fetch pr.requests r
      where pr.Person in (:people)
          and (r.class <> ShiftTradeRequest and pr.requestStatus = 0)
          or (r.class = ShiftTradeRequest and pr.requestStatus = 0 and r.shiftTradeStatus = :ShiftTradeStatus)
    ]]>
  </query>

	<query name="findTextAndAbsenceRequestsForAgent">
		<![CDATA[
select pr from PersonRequest pr
inner join pr.requests r
where pr.Person = :person and 
(r.class=TextRequest or r.class=AbsenceRequest)
order by pr.UpdatedOn desc		
		]]>
	</query>
</hibernate-mapping>