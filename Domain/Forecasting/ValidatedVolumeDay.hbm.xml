<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Forecasting"
                   default-access="field.camelcase-underscore">
	<class name="ValidatedVolumeDay">
		<!--IEntity-->
		<id name="Id"
			 access="nosetter.camelcase-underscore"
				type="guid"
				unsaved-value="null">
			<generator class="guid.comb" />
		</id>
		<version name="Version"
				 unsaved-value ="null"/>
		<many-to-one name="CreatedBy"
					 class="Teleopti.Ccc.Domain.Common.Person"
					 not-null="true"
					 update="false" foreign-key="FK_ValidatedVolumeDay_Person_CreatedBy"/>
		<many-to-one name="UpdatedBy"
					 class="Teleopti.Ccc.Domain.Common.Person"
					 not-null="true"
					 foreign-key="FK_ValidatedVolumeDay_Person_UpdatedBy"/>
		<property name="CreatedOn"
				  type="UtcDateTime"
				  not-null="true"
				  update="false" />
		<property name="UpdatedOn"
				  type="UtcDateTime"
				  not-null="true"/>
		<!--IEntity-->

		<property name="VolumeDayDate"
				  type="Teleopti.Ccc.Infrastructure.NHibernateConfiguration.DateOnlyMappingType, Teleopti.Ccc.Infrastructure"
				  not-null="true"/>
		<many-to-one class="Workload"
                 name="Workload" 
                 not-null="true" foreign-key="FK_ValidatedVolumeDay_Workload"/>

    <property name="ValidatedTasks"
				  type="double"
				  not-null="false"/>
    <property name="validatedTaskTime"
              access="field"
				  type="TimeSpan"
				  not-null="false"/>
    <property name="validatedAfterTaskTime"
              access="field"
				  type="TimeSpan"
				  not-null="false"/>

    <many-to-one name="BusinessUnit"
      class="Teleopti.Ccc.Domain.Common.BusinessUnit"
      access="nosetter.camelcase-underscore"
      not-null="true" foreign-key="FK_ValidatedVolumeDay_BusinessUnit"/>
    <filter name="businessUnitFilter"
        condition=":businessUnitParameter = BusinessUnit" />
		</class>
</hibernate-mapping>
