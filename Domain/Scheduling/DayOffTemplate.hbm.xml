<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Scheduling"
                   default-access="field.camelcase-underscore">

  <class name="DayOffTemplate">
    <!--IEntity-->
    <id name="Id"
            type="guid"
		  access="nosetter.camelcase-underscore"
            unsaved-value="null">
      <generator class="guid.comb" />
    </id>
    <version name="Version"
             unsaved-value ="null"/>
    <many-to-one name="CreatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 update="false" foreign-key="FK_DayOff_Person_CreatedBy"/>
    <many-to-one name="UpdatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 foreign-key="FK_DayOff_Person_UpdatedBy"/>
    <property name="CreatedOn"
              type="UtcDateTime"
              not-null="true"
              update="false" />
    <property name="UpdatedOn"
              type="UtcDateTime"
              not-null="true"/>
    <!--IEntity-->

    <component name="Description" class="Teleopti.Interfaces.Domain.Description, Teleopti.Interfaces">
      <property name="Name"
          not-null="true"
          type="string"
          length="50"/>
      <property name="ShortName"
					  not-null="false"
					  type="string"
					  length="25"/>
    </component>
    <property name="Flexibility" type="TimeSpan" />
    <property name="Anchor" type="TimeSpan" />
		<property name="TargetLength" type="TimeSpan" />

    <property name="PayrollCode"
         not-null="false"
         type="string"
         length="20"/>
    
	 <property name="DisplayColor" type="Teleopti.Ccc.Infrastructure.NHibernateConfiguration.ColorNumber, Teleopti.Ccc.Infrastructure"
		not-null="true" />

   <many-to-one name="BusinessUnit"
   class="Teleopti.Ccc.Domain.Common.BusinessUnit"
   access="nosetter.camelcase-underscore"
   foreign-key="FK_DayOff_BusinessUnit"
   not-null="true"/>
    <property name="IsDeleted"
          type="boolean"
          not-null="true"/>

    <filter name="deletedFlagFilter"
  condition="IsDeleted = 0" />
    
    <filter name="businessUnitFilter"
        condition=":businessUnitParameter = BusinessUnit" />
  </class>
</hibernate-mapping>