<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Scheduling"
                   default-access="field.camelcase-underscore">
	<class name="PersonAbsence">
		<id name="Id"
			type="guid"
			 access="nosetter.camelcase-underscore"
			unsaved-value="null">
			<generator class="guid.comb" />
		</id>
		<version name="Version"
			 unsaved-value ="null"/>
		<many-to-one name="UpdatedBy"
					 class="Teleopti.Ccc.Domain.Common.Person"
					 not-null="true"
					 foreign-key="FK_PersonAbsence_Person_UpdatedBy"/>
  
		<property name="UpdatedOn"
				  type="UtcDateTime"
				  not-null="true"/>
		<!--IEntity-->

		<property name="LastChange"
				  type="UtcDateTime"
				  not-null="false"/>
		
		<many-to-one name="Person"
             class="Teleopti.Ccc.Domain.Common.Person"
             not-null="true"  foreign-key="FK_PersonAbsence_Person3"/>
		<many-to-one name="Scenario"
					 class="Teleopti.Ccc.Domain.Common.Scenario"
					 not-null="true" foreign-key="FK_PersonAbsence_Scenario"/>

   
    <component name="Layer" class="AbsenceLayer">
      <many-to-one class="Absence"
                 name="Payload"
                   foreign-key="FK_PersonAbsence_Absence"
                 not-null="true"/>
      
      <component name="Period" class="Teleopti.Interfaces.Domain.DateTimePeriod, Teleopti.Interfaces">
        <component name="period" access="field">
          <property name="Minimum"
              not-null="true"
              type="UtcDateTime" />
          <property name="Maximum"
              not-null="true"
              type="UtcDateTime"  />
        </component>
      </component>
    </component>
		<filter name="businessUnitFilter"
						condition="exists(select 1 from Scenario s where s.BusinessUnit = :businessUnitParameter and s.Id=Scenario)" />
    <filter name="deletedPeopleFilter"
        condition="exists(select 1 from Person p where Person=p.Id and p.IsDeleted=0)"/>
	</class>
</hibernate-mapping>
