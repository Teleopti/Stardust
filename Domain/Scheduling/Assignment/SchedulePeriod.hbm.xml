<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Scheduling.Assignment"
                   default-access="field.camelcase-underscore">
	<class name="SchedulePeriod">
		<id name="Id"
			type="guid"
			 access="nosetter.camelcase-underscore"
			unsaved-value="null">
			<generator class="guid.comb" />
		</id>

    <property name="DateFrom"
               type="Teleopti.Ccc.Infrastructure.NHibernateConfiguration.DateOnlyMappingType, Teleopti.Ccc.Infrastructure"
		  not-null="true"/>

		<property name="PeriodType"
				  not-null="true" />

		<property name="Number"
				  not-null="true"/>
		
		<property name="AverageWorkTimePerDay"
				  not-null="false"
				  type="TimeSpan"/>

    <property name="BalanceIn"
      not-null="true"
      type="TimeSpan"/>

    <property name="Extra"
      not-null="true"
      type="TimeSpan"/>

    <component name="Seasonality"
               class="Teleopti.Interfaces.Domain.Percent, Teleopti.Interfaces">
      <property name="Value" type="double" column="Seasonality"/>
    </component>

    <property name="BalanceOut"
      not-null="true"
      type="TimeSpan"/>
    
    <property name="DaysOff"
				  not-null="false"/>

    <property name="PeriodTime"
          not-null="false"
          type="TimeSpan"/>
    
    <property name="MustHavePreference"
              not-null="true"
              type="int"/>
		<many-to-one class="Teleopti.Ccc.Domain.Common.Person"
				  name ="Parent"
				  not-null="true" foreign-key="FK_SchedulePeriod_Person"/>

    <bag name="shiftCategoryLimitation" 
         table="SchedulePeriodShiftCategoryLimitation"
         access="field">
      <key foreign-key="FK_Limitation_SchedulePeriod">
        <column name="SchedulePeriod"
                unique-key="IX_SchedulePeriod_CategoryLimitation" />
      </key>
      <composite-element class="ShiftCategoryLimitation">
        <property name="Weekly" 
                  access="property"
                  not-null="true"/>
        <property name="MaxNumberOf" 
                  access="property"
                  not-null="true"/>
        <many-to-one name="ShiftCategory" 
                     not-null="true"
                     foreign-key="FK_Limitation_ShiftCategory"
                     unique-key="IX_SchedulePeriod_CategoryLimitation" 
                     class="Teleopti.Ccc.Domain.Scheduling.ShiftCategory"/>
      </composite-element>
    </bag>
	</class>
	<sql-query name="UniqueSchedulePeriods">
		<![CDATA[
SELECT PeriodType,Number,DateFrom,Culture,COUNT(*) AS [Priority] FROM (SELECT pp.PeriodType,pp.Number,pp.DateFrom,Person.Culture,
	ISNULL(
	(
		SELECT CASE WHEN ISNULL(p.LeavingDate,'20591231 00:00') < MIN(DATEADD(DAY,-1,ISNULL(pp2.DateFrom,'20591231 00:00'))) THEN ISNULL(p.LeavingDate,'20591231 00:00')
					ELSE MIN(DATEADD(DAY,-1,ISNULL(pp2.DateFrom,'20591231 00:00'))) END
		FROM scheduleperiod pp2
		WHERE pp2.parent = pp.parent
		AND pp2.DateFrom > pp.DateFrom
	)
		,ISNULL(p.LeavingDate,'20591231 00:00')) AS EndDate
FROM scheduleperiod pp
INNER JOIN Person ON Person.Id = pp.Parent
INNER JOIN readmodel.GroupingReadOnly p ON p.PersonId = pp.Parent and p.StartDate <= :date and p.EndDate >= :date
WHERE p.BusinessUnitId = :businessUnit AND pp.DateFrom <= isnull(p.LeavingDate,'20591231 00:00')) AS x
WHERE x.EndDate >= :date and x.DateFrom <= :date
GROUP BY PeriodType,Number,DateFrom,Culture
ORDER BY [Priority] DESC
		]]>
	</sql-query>
	<sql-query name="UniqueSchedulePeriodsForPeople">
		<![CDATA[
SELECT PeriodType,Number,DateFrom,Culture,COUNT(*) AS [Priority] FROM (SELECT pp.PeriodType,pp.Number,pp.DateFrom,person.Culture,
	ISNULL(
	(
		SELECT CASE WHEN ISNULL(p.LeavingDate,'20591231 00:00') < MIN(DATEADD(DAY,-1,ISNULL(pp2.DateFrom,'20591231 00:00'))) THEN ISNULL(p.LeavingDate,'20591231 00:00')
					ELSE MIN(DATEADD(DAY,-1,ISNULL(pp2.DateFrom,'20591231 00:00'))) END
		FROM scheduleperiod pp2
		WHERE pp2.parent = pp.parent
		AND pp2.DateFrom > pp.DateFrom
	)
		,ISNULL(p.LeavingDate,'20591231 00:00')) AS EndDate
FROM scheduleperiod pp
INNER JOIN Person person ON person.Id = pp.Parent
INNER JOIN readmodel.GroupingReadOnly p ON p.PersonId = pp.Parent and p.StartDate <= :date and p.EndDate >= :date
WHERE p.BusinessUnitId = :businessUnit AND pp.DateFrom <= isnull(p.LeavingDate,'20591231 00:00') AND person.Id in (:personIds)) AS x
WHERE x.EndDate >= :date
GROUP BY PeriodType,Number,DateFrom,Culture
ORDER BY [Priority] DESC
		]]>
	</sql-query>
</hibernate-mapping>
