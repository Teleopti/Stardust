<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
									 assembly="Teleopti.Ccc.Domain"
									 namespace="Teleopti.Ccc.Domain.Scheduling"
									 default-access="field.camelcase-underscore">
	<class name="PlanningPeriod">
		<!--IEntity-->
		<id name="Id"
						type="guid"
			 access="nosetter.camelcase-underscore"
						unsaved-value="null">
			<generator class="guid.comb" />
		</id>
		<many-to-one name="UpdatedBy"
								 class="Teleopti.Ccc.Domain.Common.Person"
								 not-null="true"
								 foreign-key="FK_PlanningPeriod_Person_UpdatedBy" />
		<property name="UpdatedOn"
							type="UtcDateTime"
							not-null="true"/>
		<!--IEntity-->

		<component name="Range" class="Teleopti.Interfaces.Domain.DateOnlyPeriod, Teleopti.Interfaces">
			<component class ="Teleopti.Interfaces.Domain.MinMax`1[Teleopti.Interfaces.Domain.DateOnly, Teleopti.Interfaces], Teleopti.Interfaces" name="period" access="field">
				<property name="Minimum" not-null="false" column="StartDate" type="Teleopti.Ccc.Infrastructure.NHibernateConfiguration.DateOnlyMappingType, Teleopti.Ccc.Infrastructure"/>
				<property name="Maximum" not-null="false" column="EndDate" type="Teleopti.Ccc.Infrastructure.NHibernateConfiguration.DateOnlyMappingType, Teleopti.Ccc.Infrastructure"/>
			</component>
		</component>

		<property name="_periodType"
						access="field"
							column="PeriodType"
				  not-null="true" />

		<property name="_number"
							column="Number"
						access="field"
				  not-null="true"/>

		<property name="_state"
							column="State"
						access="field"
				  not-null="true"/>

		<many-to-one name="BusinessUnit"
					 class="Teleopti.Ccc.Domain.Common.BusinessUnit"
						access="nosetter.camelcase-underscore"
					 not-null="true" foreign-key="FK_PlanningPeriod_BusinessUnit"/>
		<filter name="businessUnitFilter"
				condition=":businessUnitParameter = BusinessUnit" />
	</class>
</hibernate-mapping>
