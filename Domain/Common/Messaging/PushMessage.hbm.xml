<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Common.Messaging"
                   default-access="field.camelcase-underscore">

  <class name="PushMessage">
    <!--IEntity-->
    <id name="Id"
            type="guid"
            unsaved-value="null">
      <generator class="guid.comb" />
    </id>
    <version name="Version"
             unsaved-value ="null"/>
    <many-to-one name="CreatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 update="false" foreign-key="FK_PushMessage_Person_CreatedBy"/>
    <many-to-one name="UpdatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 foreign-key="FK_PushMessage_Person_UpdatedBy"/>
    <property name="CreatedOn"
              type="UtcDateTime"
              not-null="true"
              update="false" />
    <property name="UpdatedOn"
              type="UtcDateTime"
              not-null="true"/>
    <!--IEntity-->
						 
	  <property name="Title"				
				not-null="true" />

	  <property name="Message"
			  not-null="true" />

    <property name="AllowDialogueReply"
			  not-null="true"
        type="boolean" />

    <property name="TranslateMessage"
			  not-null="true"
        type="boolean" />

    <many-to-one name="Sender"
              class="Teleopti.Ccc.Domain.Common.Person"
              foreign-key="FK_PushMessage_Person_Sender"
              not-null="false"/>

    <bag name="ReplyOptions">
      <key column="id" foreign-key="FK_PushMessage_ReplyOption"/>
      <element column="elt" type="String"/>
    </bag>
  
    <many-to-one name="BusinessUnit"
      class="Teleopti.Ccc.Domain.Common.BusinessUnit"
      access="nosetter.camelcase-underscore"
      not-null="true"
      foreign-key="FK_PushMessage_BusinessUnit"/>
	  
    <filter name="businessUnitFilter"
        condition=":businessUnitParameter = BusinessUnit" />
   
  </class>
</hibernate-mapping>