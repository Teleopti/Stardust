<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Teleopti.Ccc.Domain"
                   namespace="Teleopti.Ccc.Domain.Common.Messaging"
                   default-access="field.camelcase-underscore">

  <class name="PushMessageDialogue">
    <!--IEntity-->
    <id name="Id"
            type="guid"
            unsaved-value="null">
      <generator class="guid.comb" />
    </id>
    <version name="Version"
             unsaved-value ="null"/>
    <many-to-one name="CreatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 update="false" foreign-key="FK_PushMessageDialogue_Person_CreatedBy"/>
    <many-to-one name="UpdatedBy"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 foreign-key="FK_PushMessageDialogue_Person_UpdatedBy"/>
    <property name="CreatedOn"
              type="UtcDateTime"
              not-null="true"
              update="false" />
    <property name="UpdatedOn"
              type="UtcDateTime"
              not-null="true"/>
    <!--IEntity-->

	  <many-to-one name="Receiver"
                 class="Teleopti.Ccc.Domain.Common.Person"
                 not-null="true"
                 update="false" foreign-key="FK_PushMessageDialogue_Receiver"/>
	  
	  <many-to-one name="PushMessage"
				   class="Teleopti.Ccc.Domain.Common.Messaging.PushMessage"
				   not-null="true"
				   update="false"
				   foreign-key="FK_PushMessageDialogue_PushMessage"/>

	  <bag name="DialogueMessages" cascade="all-delete-orphan" inverse="true">
		  <key column="Parent" />
		  <one-to-many class="DialogueMessage"/>
	  </bag>

    <many-to-one name="BusinessUnit"
      class="Teleopti.Ccc.Domain.Common.BusinessUnit"
      access="nosetter.camelcase-underscore"
      not-null="true"
      foreign-key="FK_PushMessageDialogue_BusinessUnit"/>

    <property name="IsReplied"
          not-null="true" />

    <property name="Reply" 
              not-null="true"/>
    
    <filter name="businessUnitFilter"
        condition=":businessUnitParameter = BusinessUnit" />
  </class>
</hibernate-mapping>