<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAI0AAAA2CAIAAAB1MY1EAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALDwAA
        Cw8BkvkDpQAAG5BJREFUeF7tXAd8VFW+XgRFIICQAqGXp+A+dV2x81zKqm9FisqCqG8FFnR1BcG1PRsK
        KvtTdG0gPYRQQxJSQAIhvU/KJDOT3vskM5Pp7ba57zvnzAwRWJTibng/juP15p5zT/l/59/PtY8sy7+6
        Vno/BYDTtdL7KfCr3j/FazMkMu8aFa4KClzD6aqA6Ro/XR0wXcPpGk5XCQWujmle00/XcPolKeCRJY9H
        8HhwJUXCP7LokQWJPJc8osALvN7J23iONEO1JIgi7/GIkkdAtSjjR96VPTL59fpy1fKTR5I9ggxyezwg
        PxADTKC/RB7gOWfhxdj8rqImCyDAE07meVkQCEISGrs8Mi/LEoWHoNXry1WLEyWw9ycJssRoTp5S+rs4
        jxiXYyiut9GHQI4xDqrAiqLs4QnMHoB6FYB0Vfu5XqKD6rwsgns6nWKzxV2lt6s7LKqW7sJ628Fc47FS
        o7rFVtFir9Q66vTODou728k5RMJVfnYCU/pQZDD3RuR6Iz9RpcFYwwOCYvMzzqEFNCXVVk5uM/Blbc7s
        Gmd8ifVgrn5vZkd4hjYsQxeWZYzIMe7PMX2XYdudYzqY2x2eZdudZtuVZt6badyXqY8qMCZpTIoGe22X
        S2dzuTycj9UokwFCOpxPKvYKmdiLcIJ6p7YAtQioRIKiB68IRPtAmxAK2jmuqtP1Q7ktPMewPblld2pr
        ZG7XMaU1t9ZR1mqu1znajM4um8vs5nROT1SBU1nDOTnRaBN0ZneLgavu4JT1rowye0yhNSKze2dS547T
        HUcKjTn1zlaL4BLpKBgLiszj4TwShCdmcclAXUGh2otwIgD5DDDYZSK2NWgEqSbz0Pp6myu3yhiRptua
        1B2R3n1aZSpvc3RYeJtbFIhyInxG2YJoHVztHj6msEtV3w2bAj3IshNKy9dMwksmB9dg4PNq3HH59j2n
        zd8nGSKLrCVtboubdiK7PR63JPEisSS9tsYVpPvFYt+LcCIEYdqBqR6RUBYWQqtVTCqz7Tyt357cnVBq
        K+/grE5Y2wwYavV5BNEDXiC2ASd5eDzwSE4ROOlVDSaAJEkiXnB7IEKBPrEQZY9blu30J7oluc3szqu1
        H8o2bE5s3ZdjyG/mTC6qwKDJ0PxiifoLtO9FOLHVASxmu3lkDg5QWoU1LKVtT4Y2vcrRbgFfsM1OoCCG
        GxDw6jAAyuxzCEs8k5yCHFVkVhJ7D24VtBxQgmQFg9I7MgRVf8S+xx+Ea52CWNvNxyoN25M6D2d0lTY6
        HRiKylufhjwPZMyB85dfACPS5UXjdNa0zhIFPWtBxHMb+58QEsPd8V1BO53R3mW2UzkjuSVR0eQOS9fu
        SW/Pb3SYXZBdPtuaEg0MJMoMFcaCPiOdaDYoOd4uiJFF5qJGK6Ey4VTi/5IZMWSIt8v0Ia4QbqSScbEg
        iW0W1/Gy7m+TOmIK9FoLOA8vCRzH2V0itOVZBZ32LKz2iqN10ThhToIAjUA3pHfp3pn3nC7DoGcD1t5f
        iEQhMgX0BrlAHj6+oGtftt7Oi2beFacyfZPYmVDcbbBBqRB/1v96j6ExBOmB2Ga0MAVFySSZRTFKYS1u
        xOusEWZD2jDL0U9K9iKdhveGspcACVnbaY/IaN2cqi1uETiPoGwx7k/XdeoB25m1n7VG/9b0z/ZKAXbR
        OP3MgRnVLlwYM/nblBu4rRntJzS240rntiRtcZPNifgB80wvWNhYjEY9G2ZX8y2Gs9/0j3hue39TjCpC
        isqS3immKu2H88ScdjmhjDtVZQdK5y1sw/mr2Ba8gox10TjV19cXFRWp1WqVSoUru/EX/Ina5uZmTJHn
        +erqaqVSiYcajYY1Zjd4iH4YpRxOZ0mpSqMpk3hHQbtrU7wu7LS1Xg+F4ZY9dggcg8GgVJZgNDaKf2jc
        ox+9Xg/qMLowMhmNpvzcnLDwXS/9bdO6T745lhDTWFfvdnspjJaQB4zRUVpbWwsLCzGruro6TLurq8vl
        AguSQkwTmTOauvb8ULxhp3LLYaVCraosK8U8MIfy8vKysjLcFBcX19bWsj4bGxsLCgq0Wu2VBQmTuWic
        XnjhhcDAwNDQ0FGjRuE6ZsyYCRMmjB07lj0ZPXr08OHDX3nlFXQN+j766KNogIeoosX7VlBQ0FNPPWWz
        kaAOsJs69dcomrKqlBpxa6Z5V7o+rdLk4EFZosejDh8eN2782LHj8P7IkSPRWygZOXQELWFhYYyZcO3s
        7Pzss8/uvffeYTfdRE8Q9cG/fa/rM3nCxHnz5sbFxTEA/KCCmm+//TY6wSTHjx9/8y233HHHHXMee+zL
        r77SdnYwsLbs+D4kdOTAoaHDA0dPGDN60phRE8dPGDdunH9RoMaCBQusVihC+eWXXw4ODv7iiy+8SF85
        RXXROK1atQrEAjYokyZNGjhwIGgxYMCAiRMnYql4iGWvWbMGE8VOv/3221GLlaAlq/W3eeaZZ+x2mMVy
        sVIZEDB46JAhO44qDhfYqgycssPy7amOmHyd3kZwOrRnFzu2BZwmT54MGk2YMHEi6WsstsCBAwcYURQK
        xcyZM1lL4Dp/wYI/Ll65cNHSB6Y/2P/6AXg4aNCgjz76COYAIb9PKP3lLy+RGQ4bjqmitxv792c9PPLf
        v69tbO40yyte+zpoxJjJk8aPGj9myMjx1weMQm2/fn0xPltySEjIwoUL2Z7DDWo/+OAD/xBXSvRdNE6Q
        DBARTU1NkBgo2EqY2ZIlS3Df0tIC0QGBhjaYqE6nu+uuu1C7ZcsW3OOVpqZm/NCsoaG+Q6uF6kYzlao4
        KGj4wMHB6yKyVd2QXZwk86Vtzu3Jxr0Z+la7eCAqCp2EBoemp6bpdNrm5sbm5va25pa2xpqm+gabhYCd
        r8i7+eab0QxU+/zzzzERGNmJaldli9vhtCafTn7uuSV9CHf9au3atRwHC56BK69avRoPV72y2u6wtbc0
        52dlvfX2WwGDB+Ph3MUvHco2JuQ1lFfWtbbXV9Y3xqfVLHhxHar+a/oDEOltbW1YEtYLQcekKOiA2g0b
        Nnh7/7Hp1NOMuljBeNE4+WfAbp599lnMbOXKlWc9x59Ai+F0+PDhc2v9T9SqkuDgoP4DhoXHZ5CtLkEn
        OQBgo1mKKeg4nG95/fODkGATxoTW1Vadtx+z2TRz5kMYaMqUKSkpKayNU/LEFts1jXCWCSYc516//qPr
        aNmyZbO/n9Wv/BUvvvnmO/4nYOFVH2zCw+Eh42JTNdBRtBDO7nbKS1//GFWPPvIwY6CeBeL0XJwusPCL
        qroUnJgSxjCY2eLFizHvZcuW9TS62D14aNq0aajdv38//qQSgNnQLHwHX5XxU0lQUOCQIYF5eQUEJpLW
        c8tEh4t2UarUSW98soMwyohxqQq1z4iEQcZJEoIPJNT9j6++QAOIoOzsbLZ4D2wSUYguMKnrHSAx8YaJ
        DhPXrn0VLUePCi0uUrCWr65ehSfvvP4W7h08p2m0nix3b44vuSlk9NAhAZlZ6XTOvOQh9j0W8O7Gf6D9
        7FmzzGazb1Fe7XhJOPkDMD+B2iXixHo9FydKDq8rA/109913Y1UHDx788b5DIIeEVkkcR5ZL1KphgYEj
        gkM0KjXbt7CI4VJ5RA5hIDzZt38v0S7DJn65NzO90qVqcxkc8LIIACBia1vz1Cm3oMGXX37JCAfTC1ai
        neejFWZ1A6QiXFpvFgNb5x46pdWriaVDcFpFkHvxtTdKuvh96fbtJ/QnKpw5mpaJk6cMGTQgMy2ZLoh0
        yFhqy/bdaD9jxu9MRiMbzr9eUINJl58v91j0xBcDuxBUl4gTU4+4Llq0CDNbvnzZuV5Ot0HP+Ck2Nvac
        KRA9RAJy4CeNenhQUGhwULmqhKHP+IyShoyy/9ABop/GjDtdWJXRJB8o4I6WCvnNckUXb5HkmLhj1/W5
        bvKE8Q31dfR1Gg2SeZckxhaa1SRu5O+NbIuNGz9Fb/dPn643260O8U/LV+LPxxa9Hl1qOaaxNRPiy9H7
        9l1//fVjxo4pr6jx9sl6luVtW7ej/cwZM8wmU48qWi15cfr4448vRPIf1REXnyagf6JcCk5nuvR4ljxN
        cPrTsmUuAUFoD7Q3nFOXgHiorNV59dPGjX+Hg5KHoigoyCvIz8irrW+yS4JLgEKHvacKCRw+Mji0VFUG
        3FyCSH/ozYVYKp6ER0A//WpE8MiYmKNwW+JTizdHFX+0M+PzY7WxVfKKl4lin/XY3GatQ4f8hU2wujxO
        XjS5hKOF3UU1Vo6XrJxkdggmk9vs8uyMjL/uur6BoybsOVUdpxZmLXwRr7+66n2nKNoFeEvm6MiD/zF+
        LB4ufmaZ3S1gUS7B4eAQ/YMEkLd9v4Xy0+91JjOY3Sm4XDxkLNGoTlFY8tzTqP14/QYQHk/IKjjBLmA+
        PMdJLh5duV286OTZMsH0MieQwPxPwXTx/lPPHj2SsGTRk5jZw/OWny61xCnMh/O6ohXGI3kG5IQisxqn
        3HobTICAgCEwzYehDIdjM3TI4CFPLVt7Uu1CEuiY2rY5MiPgpqChNw3dcrQgsVyKyjUdyTVF55tj8i1R
        CktStftvG7f26TsAvtDQoQEjgwNDR4QEBgUOHHLTix+GHa+RH/sjUTAPzn1hT7Zje2r3zgz93mz9oSxt
        rKLzuzx3WI4xLrctIqtrT7o+PEl3QMF9GpY2eHDIDQGB6yMKDmnk3y1cg9d//ZspT//Pc3PmL7zzrvv6
        9r2BaLup935/RHFS44zM647OM0XlWo7kmZOqnCvXfYPaO+6eEa9oSVDZj5BJdh5RdEfnO5JLzb+fS+zy
        5X95N63cickfUeiPKroOFTkiC8zx+d1RClOUAvQxRykckfmGqAJzVL61TgvJ/NPxwMviJ3D64kVkZnMW
        riiqc+dUu1MrHBmVbswyr5ZPUnbcdsedqJ00afL9998H228a/v3tb2+/4zevvb+puFHMqOLyGvmIHxSD
        h4XcFDj8wMmiwhYprdKcXmVJrzJnlrvTKviCNmndt+HAaUDfG+78z9vvn37vXQ/ee/u0eyZNmbb606Nx
        FfIji4jB9tDc52OKrPjFKi0/aCypZeYslXlHvj2q1JZdYTmldpwoscUUOhIqpC/2nh4wYMiAocF/P1C0
        v9jzuyfX4nXqEHv/e9uvb3v9rXWZhbWlbUJalSOtwpFWxqVX4p4rbhPXfkrk3rT7Z2dpuvJqxZQKPqXS
        ml7lyq4QlTXuPyx4BrUvrllf2iSmVfHJVbb0avteBReWbcsEWarcadXWtGpbepUztdqcUmvfnWnIq4dF
        +tPlsnBC3GfRYsLpK1cup6FSlnWlqWvEb7rbmR2xZ0+41WozGKCw8DPodXqHHVYALCgSoSnTqEKCAoND
        RpeXVfaYL7YYDR3J8pGoQwTs0LGlRYoOt/l0TdfhbHP4ifYD6V1p9fKa94m+mf7Qg506vVuE8wVbk8Rt
        JV5KKGhVt1GrjPQrukQJkip8/2HCLhNvic+sSa/lHl1I9NN9Dz62NSzxYOwPKWlJ7S2tbBrIPtEJgI4s
        x0i0adj2rWg/c9YMqwWqDB2zMDELQorPPkfsiI8//cSnukiYP7vGeLqkk86KGLGkJbEccSOlaEzZDayH
        X1I/wVpZvIjY5X9e9jxVhuRcHI1LE8oY9B3UjugTGRnlm8UZBvdI0PRkK6lVyhFBw4JGjIBBQchJ0k/k
        wB3Mc2p2y1H792OIoBGTD50sT1DLB3PdKeV8jVbU23gojOSk0/379Q8KGqZUFlFI2FkiqBP5cKFJ0UTs
        aVjwom9brHnlb+ht9sxHbA4XL8krXyLxiIUr3kutlo9XyGU63kryuSRzQlLu9NwfOQ7ocQsUp51bKU4z
        Z5mIHQFbjTgZ1J4kcdhnlhCcPllPccLkEXaXPOnVzh9KbGT/ICVJ1gTIMEk4FVJKqbWg1huAvzBQl8VP
        WMViau8tfX4py/8g90Oi4NTg1uk6GT8x/4mahzR5QGHEHU/tPbVKExIcFBwSpFKXEpzIyoE3LwpkowGJ
        LTsITgHBY7ccyajsEDosHtgXdAtTrjUYHrjvAbJXVrxAEi40gQEa2QX34WKjsonY5RzJKpHGuTm5o0JH
        o/FHH37I6PLqq0S9rXrzfzvscqLaGJ7esTe1O6dCb3DAEqIJDgBF8o9Ai8z2H99Te2/mDJOJmIaE5uR0
        ANl/1H8i0mXDhvV0tcRRRBcQjLFFMGXQykloA8eB3CNwK5wqNeTXnu0vnxewy8PJ42F+7tKlS1nv9NQH
        cSooTjqf/+QNwdEW5OLNPFF2UZWWBgcPHzgoMCkjj9TByZXIQQaQqckmJTWIL3wUBqYcPWqMUsMEIzlG
        SU9XehMH2Ad9+/a98cb+X331lW+RglsQDhWaihogYIE1GbW9vX369OmY7dSpUxH68uFE/Ke31pJ4BPrV
        2qTcStueVCNOyGTVGSwCXgQfuAgHUHfhtXWfE3ac7fVz6ZK908Cinn6a4LR+PcHJSxBZKqzWnVZCJmMb
        cwiVYTNjN6EzcFZSqTmvzhsxOS88/odXHKczgUf4uT7/yRuoPnsqVDyqVEUhwcNuHDRqbyIRXP6i1gtb
        k1uOqtwfbiF2+cQxY5oaGs67GOQsEH1HmxtvvHHjxo1Op1czx5ba1TqvpEU4bv78+WjTv3//mJgYRl9c
        X11NcHpzzeu+noEF324Xjqtt357QI6LRZqdaSrCgdZ1BfmbVZwSnWTNZPMLfD278OPX0c3EawOpw66wi
        GJMkkbH7kGelWWWw4mm1LaeOSOYLg4Tay8WJ+bnPPw/9dLZx6cfpnXfeSUpKQlohISEhPj4eN4j4ZWRk
        CAKRJBq1csSIwBsGBi5/86vvDxyLO5YQmxD/zY5963elJipNSMxFHQY/IegesnXrthMnT0XHHouOOx4b
        dwzuc3R0NMKg6AQZIH+w/PG5jx89GltbVR2dVZepaS4pLvz04w0I/aETxPW//vrrnkRZTeOwr73x5pmH
        sDYkIwRvRacQnty2O9VQ00mMCBynict3/vmNb9F+FpF7pnNx6hnf87IZzQ4TJGgmmYTNiFQngh8KL7G0
        O7cWJ6t/YbscmoZtUkg/FtNjYLEr4rC33noralH69euHACikE4uEUhE/02wlS1UWFwUEDKKt8Py6ftf3
        7duvL/740/JXcaofZfcuEqpB6dOH9OH/9aEBcD/dEbBHODggIIA1Hh0SMvGWO8dOmjqEBr9RAFVERATj
        ADZblBUrVqDqpb/+1Ud0ciCJI8YBBKZbaxWO5JrDkk3qNuexovYEFff+JuI/3XP3PUYaN+pZoB3nzZuH
        2vfee4+NwhSAKLo8HjtRcN4DAjgQRfQTbK6MKnNJC4jwy/MTkggzZsyAYvDzk19eYyVIImDqTzzxBK7I
        gKAAVxTkDz/8cJ3LTURzXW3d0uf/PG/uE88+seDhBQumPPCHOx+a94c5C/aF7WRWbHJyxh+fWrDoyflP
        zl/w1IInnpw//wn8FiyYM2fO448/npiY2JNYOTk5b7315m/umDYiZOT1AwcFDAq4ecKkOfOf3Lx5M3IQ
        rKX/7Abut23bNmvmzLBd2+j5FmbkiW5ysoWefkFYwSMnlVu/PtEdkaY383LSyYRHHp797rvvIjHoD56x
        JaPbTZs2zZ49+9ChQ35Wo7Yj6ZixF+mdFvwHJoXVjXNRAPAXxgmzQdoNiWr/yRa2j9gssWeRekcDdmU3
        rECj4ErbkEnjLw4/kU9r4HYnmw5lGRXN1NwixyPcIu9yuzme43Hkh3RFfzyEJu2HJe97jot7XZderVJv
        2hcfeSylpbHB4Uuln9nmzOykQVvMXxQ4HDMiAXxyNAIyD5FiziXjZJ9sMjkTCk3fJBnDs8w1XTDVBBdC
        PzzvP4fjtWApj+I5o4afa89VB960AT3X5iXUWYx5vj8vVz/5+/Sz0c8Y1Dc/H7HY33lN9i1Jek2LUNzk
        /C61+6TKorexjQb5d+aIyHn7Z6P7C2uTWO2q7CGc/DP0SqQfn3vBphaJTwO7DGIPkIGRXBUdzp0pXWHp
        +lqtcKywc3uGttNBQvh+GPzAs33Zkxo9q/4ZTQi3/RztdJl2BJscYyaffvJukrP2ONu87Oq/YTKc+Fug
        iyyWNuhTNd285OZlvrDFtT2pLSJdW9nhAuWYJ09MWsqAVJh43/VTzQ8Dy2K4ODGy2JbfwvJ8XpjPzMG7
        RSjFiWeOCwx9NwljkKSKTe/0pJW7t57U7i+2NVnRIddusCeVGAxmuKXeMzOst54MzaTfRexd36nDn9zc
        l8VP/m113u3s31Bn1frRYmoVAgziR8Kxe0GAoKF5KXImq83GJap0O09qY/K7KzuddqSjqKQgH1L8uEf/
        FjmzCcAOvByZj3OWMAfo5iBwMEuHCR7/jbcv3ylBj8Hiyq22hqdrd6R15jXYEUSnJ5+JxoJwpP6h1xLx
        D3fuLmRj9TwF9ZNIXLjBFcCJLf5clu/J+Gc18HGbbzuz4AIVGyRvRg+54hZcVtMhxOZot5/SRuZ2qFos
        VherI/xH4zWIXdB7IM74Au8j+yqJVnLO0lzUgGNAJCHJ6EtCQPiekH5cgEfecchYvFsS2mxCZrVt7+mu
        3Sd1ySWmLivlRWwg8jkCWx/5xseP07ms7CfFWRL4MkHC65eL0+XP4J/3wDJ+op2TSjtc0YW6bUmtEWmG
        VI2rvouzIoHji37SLzJoUpFwKMvo8zbRE4PzsA0wKWm8EPEdEuJhMVOQG4cDAQMx7AwWt6bFHl9o+z6x
        OyypK63M2mgmn/XSZr3jK4DejBMVVcACPiYio8jPSnV67niZe2eGZWeS4WC6/niJsbDRVW/gDMjWwVyj
        ZjRVRQQMfL10XNFRQb/PpQKTxLzJxxyi4OSETgtf3u7KqLZEFRq2p7SHndIfyTdn1Ts6bBz9cpeGySUH
        cKJ8+O8vvZyfyOcVxHMngBHZKMguvdNR2enIqLYmKI0HMtv3pHbtzbRHFtiPaYzJNfacepeinlc1cMoW
        e0SePkljKW+zFTc6CmrErEo+Se2KK7IeyO3elqXfmaU9kK9N1JjzGp31Rs5KInjM0SGf0xA3lCq2n3H+
        +l+BYu/FiQa+yScVNM9BYvBAjLIXQuD4Ogk+jgfJ9YZuTtnMpVY4kUE+kmfcn6UPz+qOSDFGpOu/y3Ts
        SjXvT+0My+gOzzQczDUcLTKd1Diyajh1m6vVzNuhuWgIh/IhsWaImiMHnghz+j4F8R7T+Feg8c/H6L04
        Yc4MJ+bS4ztMbHJmDvhkEfM9yClwGl/HaQXR5Oa0DnenTWjqdkXl6fMqrF1Wp9bh0DqdJjjTZzx/vzwj
        Oo0aQsQm8RoJ7LwTtRJ9OcB/L0y92o64LNJAHR3N1atJVhuQsFxcL9E1l7KuXs1Pl7Agr7fr8dhEV2oV
        4gg2mrCj5v7V83+LOHfh/y9xInlgUbQZcE4Nlgey+/R7uGs4XcK+v/bKxVHg/wBGxFQ8bmK8/AAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>