// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Teleopti.Ccc.WebBehaviorTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("View week schedule")]
    public partial class ViewWeekScheduleFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "WeekSchedule.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "View week schedule", "In order to know how to work this week\r\nAs an agent\r\nI want to see my schedule de" +
                    "tails", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Name",
                        "Full access to mytime"});
#line 7
 testRunner.Given("there is a role with", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Name",
                        "Published schedule"});
            table2.AddRow(new string[] {
                        "Schedule published to date",
                        "2040-06-24"});
#line 10
 testRunner.And("there is a workflow control set with", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Name",
                        "Published schedule to 2012-08-28"});
            table3.AddRow(new string[] {
                        "Schedule published to date",
                        "2012-08-28"});
            table3.AddRow(new string[] {
                        "Preference period is closed",
                        "true"});
            table3.AddRow(new string[] {
                        "Student availability period is closed",
                        "true"});
#line 14
 testRunner.And("there is a workflow control set with", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Start date",
                        "2012-06-18"});
            table4.AddRow(new string[] {
                        "Type",
                        "Week"});
            table4.AddRow(new string[] {
                        "Length",
                        "1"});
#line 20
 testRunner.And("I have a schedule period with", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Start date",
                        "2012-06-18"});
#line 25
 testRunner.And("I have a person period with", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table6.AddRow(new string[] {
                        "Night"});
            table6.AddRow(new string[] {
                        "Day"});
            table6.AddRow(new string[] {
                        "Late"});
#line 28
 testRunner.And("there are shift categories", ((string)(null)), table6, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View current week")]
        public virtual void ViewCurrentWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View current week", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 35
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.And("Current time is \'2030-10-03 12:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("I view my week schedule for date \'2030-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("I should see the start and end dates of current week for date \'2030-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View night shift")]
        public virtual void ViewNightShift()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View night shift", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 41
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "StartTime",
                        "2012-08-27 20:00"});
            table7.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 04:00"});
            table7.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table7.AddRow(new string[] {
                        "Shift category",
                        "Night"});
#line 43
 testRunner.And("I have a shift with", ((string)(null)), table7, "And ");
#line 49
 testRunner.When("I view my week schedule for date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("I should not see the end of the shift on date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
 testRunner.And("I should see the end of the shift on date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View start of night shift on last day of week for swedish culture")]
        public virtual void ViewStartOfNightShiftOnLastDayOfWeekForSwedishCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View start of night shift on last day of week for swedish culture", ((string[])(null)));
#line 53
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 54
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I am swedish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table8.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table8.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table8.AddRow(new string[] {
                        "Shift category",
                        "Night"});
#line 57
 testRunner.And("I have a shift with", ((string)(null)), table8, "And ");
#line 63
 testRunner.When("I view my week schedule for date \'2012-08-26\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.Then("I should see the start of the shift on date \'2012-08-26\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View end of night shift from previuos week for swedish culture")]
        public virtual void ViewEndOfNightShiftFromPreviuosWeekForSwedishCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View end of night shift from previuos week for swedish culture", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 67
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I am swedish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table9.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table9.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table9.AddRow(new string[] {
                        "Shift category",
                        "Night"});
#line 70
 testRunner.And("I have a shift with", ((string)(null)), table9, "And ");
#line 76
 testRunner.When("I view my week schedule for date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.Then("I should see the end of the shift on date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do not show unpublished schedule")]
        public virtual void DoNotShowUnpublishedSchedule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not show unpublished schedule", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 80
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 8:00"});
            table10.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table10.AddRow(new string[] {
                        "Shift category",
                        "Day"});
#line 81
 testRunner.And("I have a shift with", ((string)(null)), table10, "And ");
#line 86
 testRunner.When("I view my week schedule for date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.Then("I should not see any shifts on date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do not show unpublished schedule for part of week")]
        public virtual void DoNotShowUnpublishedScheduleForPartOfWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not show unpublished schedule for part of week", ((string[])(null)));
#line 89
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 90
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
 testRunner.And("I have the workflow control set \'Published schedule to 2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 8:00"});
            table11.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table11.AddRow(new string[] {
                        "Shift category",
                        "Day"});
#line 92
 testRunner.And("I have a shift with", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "StartTime",
                        "2012-08-29 8:00"});
            table12.AddRow(new string[] {
                        "EndTime",
                        "2012-08-29 17:00"});
            table12.AddRow(new string[] {
                        "Shift category",
                        "Day"});
#line 97
 testRunner.And("I have a shift with", ((string)(null)), table12, "And ");
#line 102
 testRunner.When("I view my week schedule for date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
 testRunner.Then("I should see a shift on date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
 testRunner.And("I should not see a shift on date \'2012-08-29\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View meeting")]
        public virtual void ViewMeeting()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View meeting", ((string[])(null)));
#line 106
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 107
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 8:00"});
            table13.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table13.AddRow(new string[] {
                        "Shift category",
                        "Day"});
#line 109
 testRunner.And("I have a shift with", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 9:00"});
            table14.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 10:00"});
            table14.AddRow(new string[] {
                        "Subject",
                        "Meeting subject"});
            table14.AddRow(new string[] {
                        "Location",
                        "Meeting location"});
#line 114
 testRunner.And("I have a meeting scheduled", ((string)(null)), table14, "And ");
#line 120
 testRunner.When("I view my week schedule for date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
 testRunner.Then("I should see the meeting details with subject \'Meeting subject\' on date \'2012-08-" +
                    "28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 122
 testRunner.And("I should see the meeting details with agenda \'Meeting agenda\' on date \'2012-08-28" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View public note")]
        public virtual void ViewPublicNote()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View public note", ((string[])(null)));
#line 124
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 125
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "Date",
                        "2012-08-28"});
            table15.AddRow(new string[] {
                        "Note text",
                        "My note"});
#line 127
 testRunner.And("I have a public note with", ((string)(null)), table15, "And ");
#line 131
 testRunner.When("I view my week schedule for date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
 testRunner.Then("I should see the public note on date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select week from week-picker")]
        public virtual void SelectWeekFromWeek_Picker()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select week from week-picker", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 135
 testRunner.Given("I am an agent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
 testRunner.And("I view my week schedule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.When("I open the week-picker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.And("I click on any day of a week", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.Then("the week-picker should close", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 140
 testRunner.And("I should see the selected week", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Week-picker monday first day of week for swedish culture")]
        public virtual void Week_PickerMondayFirstDayOfWeekForSwedishCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Week-picker monday first day of week for swedish culture", ((string[])(null)));
#line 142
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 143
 testRunner.Given("I am an agent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.And("I am swedish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And("I view my week schedule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.When("I open the week-picker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
 testRunner.Then("I should see monday as the first day of week", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Week-picker sunday first day of week for US culture")]
        public virtual void Week_PickerSundayFirstDayOfWeekForUSCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Week-picker sunday first day of week for US culture", ((string[])(null)));
#line 149
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 150
 testRunner.Given("I am an agent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
 testRunner.And("I am american", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("I view my week schedule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.When("I open the week-picker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 154
 testRunner.Then("I should see sunday as the first day of week", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show text request symbol")]
        public virtual void ShowTextRequestSymbol()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show text request symbol", ((string[])(null)));
#line 156
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 157
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "StartTime",
                        "2013-10-03 10:00"});
            table16.AddRow(new string[] {
                        "End Time",
                        "2013-10-03 14:00"});
#line 158
 testRunner.And("I have an existing text request with", ((string)(null)), table16, "And ");
#line 162
 testRunner.When("I view my week schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
 testRunner.Then("I should see a symbol at the top of the schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 164
 testRunner.And("I should see number \'1\' with the request count for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Multiple day text requests symbol")]
        public virtual void MultipleDayTextRequestsSymbol()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multiple day text requests symbol", ((string[])(null)));
#line 166
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 167
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "StartTime",
                        "2013-10-03 20:00"});
            table17.AddRow(new string[] {
                        "End Time",
                        "2013-10-04 04:00"});
#line 168
 testRunner.And("I have an existing text request with", ((string)(null)), table17, "And ");
#line 172
 testRunner.When("I view my week schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
 testRunner.Then("I should see a symbol at the top of the schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 174
 testRunner.And("I should not see a symbol at the top of the schedule for date \'2013-10-04\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show both text and absence requests")]
        public virtual void ShowBothTextAndAbsenceRequests()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show both text and absence requests", ((string[])(null)));
#line 176
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 177
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "StartTime",
                        "2013-10-03 20:00"});
            table18.AddRow(new string[] {
                        "End Time",
                        "2013-10-03 22:00"});
#line 178
 testRunner.And("I have an existing text request with", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "StartTime",
                        "2013-10-03 10:00"});
            table19.AddRow(new string[] {
                        "End Time",
                        "2013-10-03 14:00"});
#line 182
 testRunner.And("I have an existing absence request with", ((string)(null)), table19, "And ");
#line 186
 testRunner.When("I view my week schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 187
 testRunner.Then("I should see number \'2\' with the request count for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to request page by clicking request symbol")]
        public virtual void NavigateToRequestPageByClickingRequestSymbol()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to request page by clicking request symbol", ((string[])(null)));
#line 189
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 190
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "StartTime",
                        "2013-10-03 10:00"});
            table20.AddRow(new string[] {
                        "End Time",
                        "2013-10-03 14:00"});
#line 191
 testRunner.And("I have an existing text request with", ((string)(null)), table20, "And ");
#line 195
 testRunner.When("I view my week schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
 testRunner.And("I click the request symbol for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.Then("I should see request page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to current week")]
        public virtual void NavigateToCurrentWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to current week", ((string[])(null)));
#line 199
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 200
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 201
 testRunner.And("Current time is \'2030-01-01 07:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And("I view my week schedule for date \'2029-12-01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.When("I click the current week button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
 testRunner.Then("I should see the start and end dates of current week for date \'2030-01-01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with no schedule")]
        public virtual void ShowTimelineWithNoSchedule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with no schedule", ((string[])(null)));
#line 206
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 207
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 208
 testRunner.When("I view my week schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "start timeline",
                        "0:00"});
            table21.AddRow(new string[] {
                        "end timeline",
                        "23:59"});
            table21.AddRow(new string[] {
                        "number of timeline labels",
                        "25"});
#line 209
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with schedule")]
        public virtual void ShowTimelineWithSchedule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with schedule", ((string[])(null)));
#line 215
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 216
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 217
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "StartTime",
                        "2012-08-27 10:00"});
            table22.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 20:00"});
            table22.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table22.AddRow(new string[] {
                        "Shift category",
                        "Late"});
#line 218
 testRunner.And("I have a shift with", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 08:00"});
            table23.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table23.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table23.AddRow(new string[] {
                        "Shift category",
                        "Day"});
#line 224
 testRunner.And("I have a shift with", ((string)(null)), table23, "And ");
#line 230
 testRunner.When("I view my week schedule for date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "start timeline",
                        "8:00"});
            table24.AddRow(new string[] {
                        "end timeline",
                        "20:00"});
            table24.AddRow(new string[] {
                        "number of timeline labels",
                        "13"});
#line 231
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with night shift")]
        public virtual void ShowTimelineWithNightShift()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with night shift", ((string[])(null)));
#line 237
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 238
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 239
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "StartTime",
                        "2012-08-27 20:00"});
            table25.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 04:00"});
            table25.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table25.AddRow(new string[] {
                        "Shift category",
                        "Night"});
#line 240
 testRunner.And("I have a shift with", ((string)(null)), table25, "And ");
#line 246
 testRunner.When("I view my week schedule for date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "start timeline",
                        "0:00"});
            table26.AddRow(new string[] {
                        "end timeline",
                        "23:59"});
            table26.AddRow(new string[] {
                        "number of timeline labels",
                        "25"});
#line 247
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table26, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with night shift from the last day of the previous week")]
        public virtual void ShowTimelineWithNightShiftFromTheLastDayOfThePreviousWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with night shift from the last day of the previous week", ((string[])(null)));
#line 253
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 254
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 255
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table27.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table27.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table27.AddRow(new string[] {
                        "Shift category",
                        "Night"});
#line 256
 testRunner.And("I have a shift with", ((string)(null)), table27, "And ");
#line 262
 testRunner.When("I view my week schedule for date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "start timeline",
                        "0:00"});
            table28.AddRow(new string[] {
                        "end timeline",
                        "4:00"});
            table28.AddRow(new string[] {
                        "number of timeline labels",
                        "5"});
#line 263
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with night shift starting on the last day of current week")]
        public virtual void ShowTimelineWithNightShiftStartingOnTheLastDayOfCurrentWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with night shift starting on the last day of current week", ((string[])(null)));
#line 269
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 270
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 271
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table29.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table29.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table29.AddRow(new string[] {
                        "Shift category",
                        "Night"});
#line 272
 testRunner.And("I have a shift with", ((string)(null)), table29, "And ");
#line 278
 testRunner.When("I view my week schedule for date \'2012-08-26\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "start timeline",
                        "20:00"});
            table30.AddRow(new string[] {
                        "end timeline",
                        "23:59"});
            table30.AddRow(new string[] {
                        "number of timeline labels",
                        "5"});
#line 279
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show activity at correct times")]
        public virtual void ShowActivityAtCorrectTimes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show activity at correct times", ((string[])(null)));
#line 285
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 286
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
 testRunner.And("I am swedish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "StartTime",
                        "2012-08-27 08:00"});
            table31.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 18:00"});
            table31.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
            table31.AddRow(new string[] {
                        "Shift category",
                        "Day"});
#line 289
 testRunner.And("I have a shift with", ((string)(null)), table31, "And ");
#line 295
 testRunner.When("I view my week schedule for date \'2012-08-27\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "First activity times",
                        "08:00 - 11:00"});
            table32.AddRow(new string[] {
                        "Second activity times",
                        "11:00 - 12:00"});
            table32.AddRow(new string[] {
                        "Third activity times",
                        "12:00 - 18:00"});
#line 296
 testRunner.Then("I should see activities on date \'2012-08-27\' with:", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update schedule when schedule has changed")]
        public virtual void UpdateScheduleWhenScheduleHasChanged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update schedule when schedule has changed", ((string[])(null)));
#line 302
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 303
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 304
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.When("I view my week schedule for date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 12:00"});
            table33.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 15:00"});
            table33.AddRow(new string[] {
                        "Shift category",
                        "Day"});
#line 306
 testRunner.And("I am assigned this shift with", ((string)(null)), table33, "And ");
#line 311
 testRunner.And("My schedule between \'2012-08-28 08:00\' to \'2012-08-28 18:00\' reloads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
 testRunner.Then("I should see activities on date \'2012-08-28\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Keep user request input when schedules are refreshed")]
        public virtual void KeepUserRequestInputWhenSchedulesAreRefreshed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Keep user request input when schedules are refreshed", ((string[])(null)));
#line 314
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 315
 testRunner.Given("I have the role \'Full access to mytime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 316
 testRunner.And("I have the workflow control set \'Published schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And("I view my week schedule for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.When("I click on the day symbol area for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 319
 testRunner.And("I input text request values for date \'2013-10-03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
 testRunner.And("My schedule between \'2013-10-03 08:00\' to \'2013-10-03 18:00\' reloads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
 testRunner.Then("I should see the add text request form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 322
 testRunner.And("Subject should not be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
