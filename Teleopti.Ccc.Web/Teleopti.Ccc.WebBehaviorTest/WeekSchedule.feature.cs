// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Teleopti.Ccc.WebBehaviorTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("View week schedule")]
    public partial class ViewWeekScheduleFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "WeekSchedule.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "View week schedule", "In order to know how to work this week\r\nAs an agent\r\nI want to see my schedule de" +
                    "tails", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Name",
                        "Full access to mytime"});
#line 7
 testRunner.Given("there is a role with", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Name",
                        "Published schedule"});
            table2.AddRow(new string[] {
                        "Schedule published to date",
                        "2040-06-24"});
#line 10
 testRunner.And("there is a workflow control set with", ((string)(null)), table2);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Name",
                        "Published schedule to 2012-08-28"});
            table3.AddRow(new string[] {
                        "Schedule published to date",
                        "2012-08-28"});
            table3.AddRow(new string[] {
                        "Preference period is closed",
                        "true"});
            table3.AddRow(new string[] {
                        "Student availability period is closed",
                        "true"});
#line 14
 testRunner.And("there is a workflow control set with", ((string)(null)), table3);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Start date",
                        "2012-06-18"});
            table4.AddRow(new string[] {
                        "Type",
                        "Week"});
            table4.AddRow(new string[] {
                        "Length",
                        "1"});
#line 20
 testRunner.And("I have a schedule period with", ((string)(null)), table4);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Start date",
                        "2012-06-18"});
#line 25
 testRunner.And("I have a person period with", ((string)(null)), table5);
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View current week")]
        public virtual void ViewCurrentWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View current week", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 30
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 31
 testRunner.And("Current time is \'2030-10-03 12:00\'");
#line 32
 testRunner.When("I view my week schedule for date \'2030-10-03\'");
#line 33
 testRunner.Then("I should see the start and end dates of current week for date \'2030-10-03\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View night shift")]
        public virtual void ViewNightShift()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View night shift", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 36
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 37
 testRunner.And("I have the workflow control set \'Published schedule\'");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "StartTime",
                        "2012-08-27 20:00"});
            table6.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 04:00"});
            table6.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table6.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 38
 testRunner.And("there is a shift with", ((string)(null)), table6);
#line 44
 testRunner.When("I view my week schedule for date \'2012-08-27\'");
#line 45
 testRunner.Then("I should not see the end of the shift on date \'2012-08-27\'");
#line 46
 testRunner.And("I should see the end of the shift on date \'2012-08-28\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View start of night shift on last day of week for swedish culture")]
        public virtual void ViewStartOfNightShiftOnLastDayOfWeekForSwedishCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View start of night shift on last day of week for swedish culture", ((string[])(null)));
#line 48
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 49
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 50
 testRunner.And("I have the workflow control set \'Published schedule\'");
#line 51
 testRunner.And("I am swedish");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table7.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table7.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table7.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 52
 testRunner.And("there is a shift with", ((string)(null)), table7);
#line 58
 testRunner.When("I view my week schedule for date \'2012-08-26\'");
#line 59
 testRunner.Then("I should see the start of the shift on date \'2012-08-26\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View end of night shift from previuos week for swedish culture")]
        public virtual void ViewEndOfNightShiftFromPreviuosWeekForSwedishCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View end of night shift from previuos week for swedish culture", ((string[])(null)));
#line 61
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 62
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 63
 testRunner.And("I have the workflow control set \'Published schedule\'");
#line 64
 testRunner.And("I am swedish");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table8.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table8.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table8.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 65
 testRunner.And("there is a shift with", ((string)(null)), table8);
#line 71
 testRunner.When("I view my week schedule for date \'2012-08-27\'");
#line 72
 testRunner.Then("I should see the end of the shift on date \'2012-08-27\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do not show unpublished schedule")]
        public virtual void DoNotShowUnpublishedSchedule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not show unpublished schedule", ((string[])(null)));
#line 74
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 75
 testRunner.Given("I have the role \'Full access to mytime\'");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 8:00"});
            table9.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table9.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
#line 76
 testRunner.And("there is a shift with", ((string)(null)), table9);
#line 81
 testRunner.When("I view my week schedule for date \'2012-08-28\'");
#line 82
 testRunner.Then("I should not see any shifts on date \'2012-08-28\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do not show unpublished schedule for part of week")]
        public virtual void DoNotShowUnpublishedScheduleForPartOfWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not show unpublished schedule for part of week", ((string[])(null)));
#line 84
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 85
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 86
 testRunner.And("I have the workflow control set \'Published schedule to 2012-08-28\'");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 8:00"});
            table10.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table10.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
#line 87
 testRunner.And("there is a shift with", ((string)(null)), table10);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "StartTime",
                        "2012-08-29 8:00"});
            table11.AddRow(new string[] {
                        "EndTime",
                        "2012-08-29 17:00"});
            table11.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
#line 92
 testRunner.And("there is a shift with", ((string)(null)), table11);
#line 97
 testRunner.When("I view my week schedule for date \'2012-08-28\'");
#line 98
 testRunner.Then("I should see a shift on date \'2012-08-28\'");
#line 99
 testRunner.And("I should not see a shift on date \'2012-08-29\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View meeting")]
        public virtual void ViewMeeting()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View meeting", ((string[])(null)));
#line 101
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 102
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 103
 testRunner.And("I have the workflow control set \'Published schedule\'");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 8:00"});
            table12.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table12.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
#line 104
 testRunner.And("there is a shift with", ((string)(null)), table12);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 9:00"});
            table13.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 10:00"});
            table13.AddRow(new string[] {
                        "Subject",
                        "Meeting subject"});
            table13.AddRow(new string[] {
                        "Location",
                        "Meeting location"});
#line 109
 testRunner.And("I have a meeting scheduled", ((string)(null)), table13);
#line 115
 testRunner.When("I view my week schedule for date \'2012-08-28\'");
#line 116
 testRunner.And("I hover over the meeting on date \'2012-08-28\'");
#line 117
 testRunner.Then("I should see the meeting details on date \'2012-08-28\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View public note")]
        public virtual void ViewPublicNote()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View public note", ((string[])(null)));
#line 120
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 121
 testRunner.Given("I am an agent");
#line 122
 testRunner.And("I have a public note on tuesday");
#line 123
 testRunner.When("I view my week schedule");
#line 124
 testRunner.Then("I should see the public note on tuesday");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select week from week-picker")]
        public virtual void SelectWeekFromWeek_Picker()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select week from week-picker", ((string[])(null)));
#line 126
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 127
 testRunner.Given("I am an agent");
#line 128
 testRunner.And("I view my week schedule");
#line 129
 testRunner.When("I open the week-picker");
#line 130
 testRunner.And("I click on any day of a week");
#line 131
 testRunner.Then("the week-picker should close");
#line 132
 testRunner.And("I should see the selected week");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Week-picker monday first day of week for swedish culture")]
        public virtual void Week_PickerMondayFirstDayOfWeekForSwedishCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Week-picker monday first day of week for swedish culture", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 135
 testRunner.Given("I am an agent");
#line 136
 testRunner.And("I am swedish");
#line 137
 testRunner.And("I view my week schedule");
#line 138
 testRunner.When("I open the week-picker");
#line 139
 testRunner.Then("I should see monday as the first day of week");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Week-picker sunday first day of week for US culture")]
        public virtual void Week_PickerSundayFirstDayOfWeekForUSCulture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Week-picker sunday first day of week for US culture", ((string[])(null)));
#line 141
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 142
 testRunner.Given("I am an agent");
#line 143
 testRunner.And("I am american");
#line 144
 testRunner.And("I view my week schedule");
#line 145
 testRunner.When("I open the week-picker");
#line 146
 testRunner.Then("I should see sunday as the first day of week");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show text request symbol")]
        public virtual void ShowTextRequestSymbol()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show text request symbol", ((string[])(null)));
#line 148
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 149
 testRunner.Given("I am an agent");
#line 150
 testRunner.And("I have an existing text request");
#line 151
 testRunner.When("I view my week schedule");
#line 152
 testRunner.Then("I should see a symbol at the top of the schedule");
#line 153
 testRunner.And("I should see a number with the request count");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Multiple day text requests symbol")]
        public virtual void MultipleDayTextRequestsSymbol()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multiple day text requests symbol", ((string[])(null)));
#line 155
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 156
 testRunner.Given("I am an agent");
#line 157
 testRunner.And("I have an existing text request spanning over 2 days");
#line 158
 testRunner.When("I view my week schedule");
#line 159
 testRunner.Then("I should see a symbol at the top of the schedule for the first day");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show both text and absence requests")]
        public virtual void ShowBothTextAndAbsenceRequests()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show both text and absence requests", ((string[])(null)));
#line 161
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 162
 testRunner.Given("I am an agent");
#line 163
 testRunner.And("I have an existing text request");
#line 164
 testRunner.And("I have an existing absence request");
#line 165
 testRunner.When("I view my week schedule");
#line 166
 testRunner.Then("I should see 2 with the request count");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to request page by clicking request symbol")]
        public virtual void NavigateToRequestPageByClickingRequestSymbol()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to request page by clicking request symbol", ((string[])(null)));
#line 168
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 169
 testRunner.Given("I am an agent");
#line 170
 testRunner.And("I have an existing text request");
#line 171
 testRunner.When("I view my week schedule");
#line 172
 testRunner.And("I click the request symbol");
#line 173
 testRunner.Then("I should see request page");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to current week")]
        public virtual void NavigateToCurrentWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to current week", ((string[])(null)));
#line 175
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 176
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 177
 testRunner.And("Current time is \'2030-01-01 07:00\'");
#line 178
 testRunner.And("I view my week schedule for date \'2029-12-01\'");
#line 179
 testRunner.When("I click the current week button");
#line 180
 testRunner.Then("I should see the start and end dates of current week for date \'2030-01-01\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with no schedule")]
        public virtual void ShowTimelineWithNoSchedule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with no schedule", ((string[])(null)));
#line 182
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 183
 testRunner.Given("I am an agent");
#line 184
 testRunner.When("I view my week schedule");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "start timeline",
                        "0:00"});
            table14.AddRow(new string[] {
                        "end timeline",
                        "23:59"});
            table14.AddRow(new string[] {
                        "timeline count",
                        "25"});
#line 185
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table14);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with schedule")]
        public virtual void ShowTimelineWithSchedule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with schedule", ((string[])(null)));
#line 191
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 192
 testRunner.Given("I am an agent");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "StartTime",
                        "2012-08-27 10:00"});
            table15.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 20:00"});
            table15.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table15.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 193
 testRunner.And("there is a shift with", ((string)(null)), table15);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "StartTime",
                        "2012-08-28 08:00"});
            table16.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 17:00"});
            table16.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table16.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 199
 testRunner.And("there is a shift with", ((string)(null)), table16);
#line 205
 testRunner.When("I view my week schedule for date \'2012-08-27\'");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "start timeline",
                        "8:00"});
            table17.AddRow(new string[] {
                        "end timeline",
                        "20:00"});
            table17.AddRow(new string[] {
                        "timeline count",
                        "13"});
#line 206
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table17);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with night shift")]
        public virtual void ShowTimelineWithNightShift()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with night shift", ((string[])(null)));
#line 212
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 213
 testRunner.Given("I am an agent");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "StartTime",
                        "2012-08-27 20:00"});
            table18.AddRow(new string[] {
                        "EndTime",
                        "2012-08-28 04:00"});
            table18.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table18.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 214
 testRunner.And("there is a shift with", ((string)(null)), table18);
#line 220
 testRunner.When("I view my week schedule for date \'2012-08-27\'");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "start timeline",
                        "0:00"});
            table19.AddRow(new string[] {
                        "end timeline",
                        "23:59"});
            table19.AddRow(new string[] {
                        "timeline count",
                        "25"});
#line 221
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table19);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with night shift from the last day of the previous week")]
        public virtual void ShowTimelineWithNightShiftFromTheLastDayOfThePreviousWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with night shift from the last day of the previous week", ((string[])(null)));
#line 227
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 228
 testRunner.Given("I am an agent");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table20.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table20.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table20.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 229
 testRunner.And("there is a shift with", ((string)(null)), table20);
#line 235
 testRunner.When("I view my week schedule for date \'2012-08-27\'");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "start timeline",
                        "0:00"});
            table21.AddRow(new string[] {
                        "end timeline",
                        "4:00"});
            table21.AddRow(new string[] {
                        "timeline count",
                        "5"});
#line 236
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table21);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show timeline with night shift starting on the last day of current week")]
        public virtual void ShowTimelineWithNightShiftStartingOnTheLastDayOfCurrentWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show timeline with night shift starting on the last day of current week", ((string[])(null)));
#line 242
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 243
 testRunner.Given("I am an agent");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "StartTime",
                        "2012-08-26 20:00"});
            table22.AddRow(new string[] {
                        "EndTime",
                        "2012-08-27 04:00"});
            table22.AddRow(new string[] {
                        "ShiftCategoryName",
                        "ForTest"});
            table22.AddRow(new string[] {
                        "Lunch3HoursAfterStart",
                        "true"});
#line 244
 testRunner.And("there is a shift with", ((string)(null)), table22);
#line 250
 testRunner.When("I view my week schedule for date \'2012-08-26\'");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "start timeline",
                        "20:00"});
            table23.AddRow(new string[] {
                        "end timeline",
                        "23:59"});
            table23.AddRow(new string[] {
                        "timeline count",
                        "5"});
#line 251
 testRunner.Then("I should see start timeline and end timeline according to schedule with:", ((string)(null)), table23);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show activity with correct position, height and color")]
        public virtual void ShowActivityWithCorrectPositionHeightAndColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show activity with correct position, height and color", ((string[])(null)));
#line 257
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 258
 testRunner.Given("I am an agent");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "Phone",
                        "09:00-10:30"});
            table24.AddRow(new string[] {
                        "Shortbreak",
                        "10:30-11:00"});
            table24.AddRow(new string[] {
                        "Phone",
                        "11:00-12:00"});
            table24.AddRow(new string[] {
                        "Lunch",
                        "12:00-14:00"});
            table24.AddRow(new string[] {
                        "Phone",
                        "14:00-18:00"});
#line 259
 testRunner.And("I have custom shifts scheduled on wednesday for two weeks:", ((string)(null)), table24);
#line 266
 testRunner.When("I view my week schedule");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Activity",
                        "Start Position",
                        "Height",
                        "Color"});
            table25.AddRow(new string[] {
                        "Phone",
                        "67",
                        "99px",
                        "Green"});
            table25.AddRow(new string[] {
                        "Shortbreak",
                        "167",
                        "32px",
                        "Red"});
#line 267
 testRunner.Then("I should see wednesday\'s activities:", ((string)(null)), table25);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
