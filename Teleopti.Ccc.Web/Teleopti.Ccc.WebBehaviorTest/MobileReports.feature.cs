// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.261
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Teleopti.Ccc.WebBehaviorTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MobileReports")]
    public partial class MobileReportsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MobileReports.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MobileReports", "In order to keep track on my CC\r\nAs a Supervisor on the move\r\nI want to see repor" +
                    "ts on my mobile", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I browse with a mobile");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enter Application")]
        public virtual void EnterApplication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enter Application", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I am a supervisor");
#line 11
 testRunner.When("I view MobileReports");
#line 12
 testRunner.Then("I should see the Home");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enter Application without permission")]
        public virtual void EnterApplicationWithoutPermission()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enter Application without permission", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am user without permission to MobileReports");
#line 16
 testRunner.When("I view MobileReports");
#line 17
 testRunner.Then("I should see friendly error message");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Logout from application")]
        public virtual void LogoutFromApplication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Logout from application", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given("I am a supervisor");
#line 21
 testRunner.And("I view MobileReports");
#line 22
 testRunner.And("I click Signout button");
#line 23
 testRunner.Then("I should be signed out");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enter Application with report preference")]
        public virtual void EnterApplicationWithReportPreference()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enter Application with report preference", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I am a supervisor");
#line 27
 testRunner.And("I have previously viewed reports");
#line 28
 testRunner.When("I enter MobileReports");
#line 29
 testRunner.Then("I should see a report");
#line 30
 testRunner.And("date of should be today");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Report")]
        public virtual void ViewReport()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Report", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("I am a supervisor");
#line 34
 testRunner.When("I view ReportSettings");
#line 35
 testRunner.And("I select a report");
#line 36
 testRunner.And("I check type Graph");
#line 37
 testRunner.And("I check type Table");
#line 38
 testRunner.And("I click View Report Button");
#line 39
 testRunner.Then("I should se a report");
#line 40
 testRunner.And("I should see a graph");
#line 41
 testRunner.And("I should see a table");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select date in date-picker")]
        public virtual void SelectDateInDate_Picker()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select date in date-picker", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I am a supervisor");
#line 45
 testRunner.When("I view ReportSettings");
#line 46
 testRunner.And("I open the date-picker");
#line 47
 testRunner.And("I click on any date");
#line 48
 testRunner.Then("the date-picker should close");
#line 49
 testRunner.And("I should see the selected date");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select skill in skill-picker")]
        public virtual void SelectSkillInSkill_Picker()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select skill in skill-picker", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
 testRunner.Given("I am a supervisor");
#line 53
 testRunner.When("I view ReportSettings");
#line 54
 testRunner.And("I open the skill-picker");
#line 55
 testRunner.And("I select a skill");
#line 56
 testRunner.And("I close the skill-picker");
#line 57
 testRunner.Then("I should see the selected skill");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select all skills item in skill-picker")]
        public virtual void SelectAllSkillsItemInSkill_Picker()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select all skills item in skill-picker", ((string[])(null)));
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("I am a supervisor");
#line 61
 testRunner.When("I view ReportSettings");
#line 62
 testRunner.And("I open the skill-picker");
#line 63
 testRunner.And("I select the all skills item");
#line 64
 testRunner.And("I close the skill-picker");
#line 65
 testRunner.Then("I should see the all skill item selected");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate within report view to previous day")]
        public virtual void NavigateWithinReportViewToPreviousDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate within report view to previous day", ((string[])(null)));
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
 testRunner.Given("I am a supervisor");
#line 69
 testRunner.When("I am view a Report");
#line 70
 testRunner.And("I click previous date");
#line 71
 testRunner.Then("I should see a report for previous date");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate within report view to next day")]
        public virtual void NavigateWithinReportViewToNextDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate within report view to next day", ((string[])(null)));
#line 73
this.ScenarioSetup(scenarioInfo);
#line 74
 testRunner.Given("I am a supervisor");
#line 75
 testRunner.When("I am view a Report");
#line 76
 testRunner.And("I click next date");
#line 77
 testRunner.Then("I should see a report for next date");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enter Application with partial access to reports")]
        public virtual void EnterApplicationWithPartialAccessToReports()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enter Application with partial access to reports", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given("I am user with partial access to reports");
#line 81
 testRunner.When("I view ReportSettings");
#line 82
 testRunner.Then("I should only see reports i have access to");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
