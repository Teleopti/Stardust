// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Teleopti.Ccc.WebBehaviorTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Student availability for multiple days")]
    public partial class StudentAvailabilityForMultipleDaysFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "StudentAvailabilityMultidays.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Student availability for multiple days", "In order to view and submit when I am available for work\r\nAs a student agent\r\nI w" +
                    "ant to view and submit my availability", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Name",
                        "Access to student availability"});
            table1.AddRow(new string[] {
                        "Access to student availability",
                        "true"});
#line 7
 testRunner.Given("there is a role with", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Name",
                        "Published schedule"});
            table2.AddRow(new string[] {
                        "Schedule published to date",
                        "2012-06-24"});
#line 11
 testRunner.And("I have a workflow control set with", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Start date",
                        "2012-06-18"});
            table3.AddRow(new string[] {
                        "Type",
                        "Week"});
            table3.AddRow(new string[] {
                        "Length",
                        "1"});
#line 15
 testRunner.And("I have a schedule period with", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Start date",
                        "2012-06-18"});
#line 20
 testRunner.And("I have a person period with", ((string)(null)), table4, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add student availability")]
        public virtual void AddStudentAvailability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add student availability", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 25
 testRunner.Given("I have the role \'Access to student availability\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.And("I am viewing student availability for date \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.When("I select day \'2012-06-20\' in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.And("I click the edit button in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table5.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 29
 testRunner.And("I input student availability with", ((string)(null)), table5, "And ");
#line 33
 testRunner.And("I click the apply student availability button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table6.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table6.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 34
 testRunner.Then("I should see the student availability with", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add student availability for multiple days")]
        public virtual void AddStudentAvailabilityForMultipleDays()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add student availability for multiple days", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 41
 testRunner.Given("I have the role \'Access to student availability\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I am viewing student availability for date \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table7.AddRow(new string[] {
                        "2012-06-20"});
            table7.AddRow(new string[] {
                        "2012-06-22"});
#line 43
 testRunner.When("I select following days in student availability", ((string)(null)), table7, "When ");
#line 47
 testRunner.And("I click the edit button in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table8.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 48
 testRunner.And("I input student availability with", ((string)(null)), table8, "And ");
#line 52
 testRunner.And("I click the apply student availability button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table9.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table9.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 53
 testRunner.Then("I should see the student availability with", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "Date",
                        "2012-06-22"});
            table10.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table10.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 58
 testRunner.And("I should see the student availability with", ((string)(null)), table10, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add student availability with end time on next day")]
        public virtual void AddStudentAvailabilityWithEndTimeOnNextDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add student availability with end time on next day", ((string[])(null)));
#line 64
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 65
 testRunner.Given("I have the role \'Access to student availability\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
 testRunner.And("I am viewing student availability for date \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.When("I select day \'2012-06-20\' in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("I click the edit button in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Start time",
                        "16:30"});
            table11.AddRow(new string[] {
                        "End time",
                        "01:00"});
            table11.AddRow(new string[] {
                        "Next day",
                        "true"});
#line 69
 testRunner.And("I input student availability with", ((string)(null)), table11, "And ");
#line 74
 testRunner.And("I click the apply student availability button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table12.AddRow(new string[] {
                        "Start time",
                        "16:30"});
            table12.AddRow(new string[] {
                        "End time",
                        "01:00 +1"});
#line 75
 testRunner.Then("I should see the student availability with", ((string)(null)), table12, "Then ");
#line 80
 testRunner.And("I should not see the student availability on \'2012-06-21\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancel student availability editing")]
        public virtual void CancelStudentAvailabilityEditing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancel student availability editing", ((string[])(null)));
#line 82
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 83
 testRunner.Given("I have the role \'Access to student availability\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table13.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table13.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 84
 testRunner.And("I have a student availability with", ((string)(null)), table13, "And ");
#line 89
 testRunner.And("I am viewing student availability for date \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When("I select day \'2012-06-20\' in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.And("I click the edit button in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Start time",
                        "13:30"});
            table14.AddRow(new string[] {
                        "End time",
                        "15:00"});
#line 92
 testRunner.And("I input student availability with", ((string)(null)), table14, "And ");
#line 96
 testRunner.And("I click the close button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table15.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table15.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 97
 testRunner.Then("I should see the student availability with", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Replace student availability")]
        public virtual void ReplaceStudentAvailability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Replace student availability", ((string[])(null)));
#line 103
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 104
 testRunner.Given("I have the role \'Access to student availability\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table16.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table16.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 105
 testRunner.And("I have a student availability with", ((string)(null)), table16, "And ");
#line 110
 testRunner.And("I am viewing student availability for date \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.When("I select day \'2012-06-20\' in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
 testRunner.And("I click the edit button in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Start time",
                        "13:30"});
            table17.AddRow(new string[] {
                        "End time",
                        "15:00"});
#line 113
 testRunner.And("I input student availability with", ((string)(null)), table17, "And ");
#line 117
 testRunner.And("I click the apply student availability button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table18.AddRow(new string[] {
                        "Start time",
                        "13:30"});
            table18.AddRow(new string[] {
                        "End time",
                        "15:00"});
#line 118
 testRunner.Then("I should see the student availability with", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete student availability")]
        public virtual void DeleteStudentAvailability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete student availability", ((string[])(null)));
#line 124
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 125
 testRunner.Given("I have the role \'Access to student availability\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "Date",
                        "2012-06-20"});
            table19.AddRow(new string[] {
                        "Start time",
                        "10:30"});
            table19.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 126
 testRunner.And("I have a student availability with", ((string)(null)), table19, "And ");
#line 131
 testRunner.And("I am viewing student availability for date \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.When("I select day \'2012-06-20\' in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.And("I click the delete button in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I should not see the student availability on \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add invalid student availability")]
        public virtual void AddInvalidStudentAvailability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add invalid student availability", ((string[])(null)));
#line 136
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 137
 testRunner.Given("I have the role \'Access to student availability\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 138
 testRunner.And("I am viewing student availability for date \'2012-06-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.When("I select day \'2012-06-20\' in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.And("I click the edit button in student availability", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "Start time",
                        "13:30"});
            table20.AddRow(new string[] {
                        "End time",
                        "11:00"});
#line 141
 testRunner.And("I input student availability with", ((string)(null)), table20, "And ");
#line 145
 testRunner.And("I click the apply student availability button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.Then("I should see a message \'InvalidTimeValue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
