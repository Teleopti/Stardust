// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Teleopti.Ccc.WebBehaviorTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Time indicator in week schedule")]
    public partial class TimeIndicatorInWeekScheduleFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "WeekScheduleTimeIndicator.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Time indicator in week schedule", "In order to get better control of my weekly schedule \r\nAs an agent\r\nI want to see" +
                    " an indication of the current and passed time in the week schedule", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Name",
                        "Full access to mytime"});
#line 7
 testRunner.Given("there is a role with", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Name",
                        "No access to ASM"});
            table2.AddRow(new string[] {
                        "Access to Agent Schedule Messenger",
                        "false"});
#line 10
 testRunner.And("there is a role with", ((string)(null)), table2);
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do not show time indicator if no permission")]
        public virtual void DoNotShowTimeIndicatorIfNoPermission()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not show time indicator if no permission", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 16
 testRunner.Given("I have the role \'No access to ASM\'");
#line 17
 testRunner.And("Current time is \'2012-09-03 12:00\'");
#line 18
 testRunner.When("I view my week schedule for date \'2012-09-03\'");
#line 19
 testRunner.Then("I should not see the time indicator");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show the time indicator at correct time")]
        public virtual void ShowTheTimeIndicatorAtCorrectTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show the time indicator at correct time", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 23
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 24
 testRunner.And("Current time is \'2012-10-03 12:00\'");
#line 25
 testRunner.When("I view my week schedule for date \'2012-10-03\'");
#line 26
 testRunner.Then("I should see the time indicator at time \'2012-10-03 12:00\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do not show time indicator when I view a future week")]
        public virtual void DoNotShowTimeIndicatorWhenIViewAFutureWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do not show time indicator when I view a future week", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 30
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 31
 testRunner.And("Current time is \'2001-01-01 12:00\'");
#line 32
 testRunner.When("I view my week schedule for date \'2001-01-08\'");
#line 33
 testRunner.Then("I should not see the time indicator");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show time indicator when I view a passed week")]
        public virtual void ShowTimeIndicatorWhenIViewAPassedWeek()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show time indicator when I view a passed week", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 37
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 38
 testRunner.And("Current time is \'2001-01-01 12:00\'");
#line 39
 testRunner.When("I view my week schedule for date \'2000-12-20\'");
#line 40
 testRunner.Then("I should see the time indicator over the whole week");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show time indicator for the part of the week that has passed")]
        public virtual void ShowTimeIndicatorForThePartOfTheWeekThatHasPassed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show time indicator for the part of the week that has passed", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 44
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 45
 testRunner.And("Current time is \'2001-01-03 12:00\'");
#line 46
 testRunner.When("I view my week schedule for date \'2001-01-03\'");
#line 47
 testRunner.Then("I should see the time indicator from the start of the week up until the time \'200" +
                    "1-01-03 12:00\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show time indicator movement")]
        public virtual void ShowTimeIndicatorMovement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show time indicator movement", ((string[])(null)));
#line 50
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 51
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 52
 testRunner.And("Current time is \'2001-01-03 12:00\'");
#line 53
 testRunner.And("I should see the end of time indicator at time \'2001-01-03 12:00\'");
#line 54
 testRunner.When("Time has passed with \'1\' minutes");
#line 55
 testRunner.Then("I should see the end of time indicator at time \'2001-01-03 12:01\'");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Show time indicator movement at midnight")]
        public virtual void ShowTimeIndicatorMovementAtMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show time indicator movement at midnight", ((string[])(null)));
#line 58
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 59
 testRunner.Given("I have the role \'Full access to mytime\'");
#line 60
 testRunner.And("Current time is \'2001-01-01 23:59\'");
#line 61
 testRunner.And("I should see the end of time indicator at time \'2001-01-01 23:59\'");
#line 62
 testRunner.When("Time has passed with \'1\' minutes");
#line 63
 testRunner.Then("I should see the end of time indicator at time \'2001-01-02 00:00\'");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
