// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Teleopti.Ccc.WebBehaviorTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Preferences follow up")]
    public partial class PreferencesFollowUpFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PreferencesFollowUp.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Preferences follow up", "In order to see my schedule and my preferences side by side\r\nAs an agent\r\nI can e" +
                    "asily see where my preferences were fulfilled and where they were not", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Name",
                        "Full access to mytime"});
            table1.AddRow(new string[] {
                        "Access to extended preferences",
                        "false"});
#line 7
 testRunner.Given("I have a role with", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table2.AddRow(new string[] {
                        "Late"});
            table2.AddRow(new string[] {
                        "Night"});
#line 11
 testRunner.And("there are shift categories", ((string)(null)), table2);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Name",
                        "Dayoff"});
#line 15
 testRunner.And("there is a dayoff with", ((string)(null)), table3);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Name",
                        "Illness"});
#line 18
 testRunner.And("there is an absence with", ((string)(null)), table4);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Name",
                        "Published schedule"});
            table5.AddRow(new string[] {
                        "Schedule published to date",
                        "2012-10-07"});
            table5.AddRow(new string[] {
                        "Available shift category",
                        "Late"});
            table5.AddRow(new string[] {
                        "Available shift category",
                        "Night"});
            table5.AddRow(new string[] {
                        "Available dayoff",
                        "Dayoff"});
            table5.AddRow(new string[] {
                        "Available absence",
                        "Illness"});
#line 21
 testRunner.And("I have a workflow control set with", ((string)(null)), table5);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Start date",
                        "2012-10-01"});
            table6.AddRow(new string[] {
                        "Type",
                        "Week"});
            table6.AddRow(new string[] {
                        "Length",
                        "1"});
#line 29
 testRunner.And("I have a schedule period with", ((string)(null)), table6);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Start date",
                        "2012-10-01"});
#line 34
 testRunner.And("I have a person period with", ((string)(null)), table7);
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("See that preference is fulfilled")]
        public virtual void SeeThatPreferenceIsFulfilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("See that preference is fulfilled", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table8.AddRow(new string[] {
                        "Preference",
                        "Late"});
#line 40
 testRunner.Given("I have a preference with", ((string)(null)), table8);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table9.AddRow(new string[] {
                        "Shift category",
                        "Late"});
#line 44
 testRunner.And("I have a shift with", ((string)(null)), table9);
#line 48
 testRunner.And("My schedule is published");
#line 49
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table10.AddRow(new string[] {
                        "Shift category",
                        "Late"});
            table10.AddRow(new string[] {
                        "Preference",
                        "Late"});
            table10.AddRow(new string[] {
                        "Fulfilled",
                        "true"});
#line 50
 testRunner.Then("I should see the day cell with", ((string)(null)), table10);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("See that preference not fulfilled")]
        public virtual void SeeThatPreferenceNotFulfilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("See that preference not fulfilled", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table11.AddRow(new string[] {
                        "Preference",
                        "Late"});
#line 58
 testRunner.Given("I have a preference with", ((string)(null)), table11);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table12.AddRow(new string[] {
                        "Shift category",
                        "Night"});
#line 62
 testRunner.And("I have a shift with", ((string)(null)), table12);
#line 66
 testRunner.And("My schedule is published");
#line 67
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table13.AddRow(new string[] {
                        "Shift category",
                        "Late"});
            table13.AddRow(new string[] {
                        "Preference",
                        "Night"});
            table13.AddRow(new string[] {
                        "Fulfilled",
                        "false"});
#line 68
 testRunner.Then("I should see the day cell with", ((string)(null)), table13);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("See extended indication on preference on scheduled day")]
        public virtual void SeeExtendedIndicationOnPreferenceOnScheduledDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("See extended indication on preference on scheduled day", ((string[])(null)));
#line 75
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table14.AddRow(new string[] {
                        "End time maximum",
                        "20:30"});
#line 76
 testRunner.Given("I have an extended preference with", ((string)(null)), table14);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "StartTime",
                        "2012-10-02 10:00"});
            table15.AddRow(new string[] {
                        "EndTime",
                        "2012-10-02 20:00"});
            table15.AddRow(new string[] {
                        "ShiftCategoryName",
                        "Late"});
#line 80
 testRunner.And("I have a shift with", ((string)(null)), table15);
#line 85
 testRunner.And("My schedule is published");
#line 86
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table16.AddRow(new string[] {
                        "Shift category",
                        "Late"});
            table16.AddRow(new string[] {
                        "Preference",
                        "Extended"});
            table16.AddRow(new string[] {
                        "Fulfilled",
                        "true"});
            table16.AddRow(new string[] {
                        "Extended Indication",
                        "true"});
#line 87
 testRunner.Then("I should see the day cell with", ((string)(null)), table16);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Display extended preference panel for preference on scheduled day")]
        public virtual void DisplayExtendedPreferencePanelForPreferenceOnScheduledDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Display extended preference panel for preference on scheduled day", ((string[])(null)));
#line 95
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table17.AddRow(new string[] {
                        "End time maximum",
                        "20:30"});
#line 96
 testRunner.Given("I have an extended preference with", ((string)(null)), table17);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "StartTime",
                        "2012-10-02 20:00"});
            table18.AddRow(new string[] {
                        "EndTime",
                        "2012-10-03 04:00"});
            table18.AddRow(new string[] {
                        "ShiftCategoryName",
                        "Night"});
#line 100
 testRunner.And("I have a shift with", ((string)(null)), table18);
#line 105
 testRunner.And("My schedule is published");
#line 106
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line 107
 testRunner.And("I click the extended preference indication on \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table19.AddRow(new string[] {
                        "End time maximum",
                        "20:30"});
#line 108
 testRunner.Then("I should see extended preference with", ((string)(null)), table19);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Display must have for preference on scheduled day")]
        public virtual void DisplayMustHaveForPreferenceOnScheduledDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Display must have for preference on scheduled day", ((string[])(null)));
#line 113
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table20.AddRow(new string[] {
                        "Shift category",
                        "Late"});
#line 114
 testRunner.Given("I have a preference with", ((string)(null)), table20);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table21.AddRow(new string[] {
                        "Shift category",
                        "Late"});
#line 118
 testRunner.And("I have a shift with", ((string)(null)), table21);
#line 122
 testRunner.And("My schedule is published");
#line 123
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table22.AddRow(new string[] {
                        "Must have",
                        "true"});
#line 124
 testRunner.Then("I should see the day cell with", ((string)(null)), table22);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dayoff preference fulfilled")]
        public virtual void DayoffPreferenceFulfilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dayoff preference fulfilled", ((string[])(null)));
#line 133
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table23.AddRow(new string[] {
                        "Preference",
                        "Dayoff"});
#line 134
 testRunner.Given("I have a preference with", ((string)(null)), table23);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table24.AddRow(new string[] {
                        "Shift category",
                        "Dayoff"});
#line 138
 testRunner.And("I have a shift with", ((string)(null)), table24);
#line 142
 testRunner.And("My schedule is published");
#line 143
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table25.AddRow(new string[] {
                        "Shift category",
                        "Dayoff"});
            table25.AddRow(new string[] {
                        "Preference",
                        "Dayoff"});
            table25.AddRow(new string[] {
                        "Preference Color",
                        "Green"});
#line 144
 testRunner.Then("I should see the day cell with", ((string)(null)), table25);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dayoff preference not fulfilled")]
        public virtual void DayoffPreferenceNotFulfilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dayoff preference not fulfilled", ((string[])(null)));
#line 151
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table26.AddRow(new string[] {
                        "Preference",
                        "Dayoff"});
#line 152
 testRunner.Given("I have a preference with", ((string)(null)), table26);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table27.AddRow(new string[] {
                        "Shift category",
                        "Late"});
#line 156
 testRunner.And("I have a shift with", ((string)(null)), table27);
#line 160
 testRunner.And("My schedule is published");
#line 161
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table28.AddRow(new string[] {
                        "Shift category",
                        "Late"});
            table28.AddRow(new string[] {
                        "Preference",
                        "Dayoff"});
            table28.AddRow(new string[] {
                        "Preference Color",
                        "Red"});
#line 162
 testRunner.Then("I should see the day cell with", ((string)(null)), table28);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Absence preference fulfilled")]
        public virtual void AbsencePreferenceFulfilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Absence preference fulfilled", ((string[])(null)));
#line 169
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table29.AddRow(new string[] {
                        "Preference",
                        "Absence"});
#line 170
 testRunner.Given("I have a preference with", ((string)(null)), table29);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table30.AddRow(new string[] {
                        "Shift category",
                        "Absence"});
#line 174
 testRunner.And("I have a shift with", ((string)(null)), table30);
#line 178
 testRunner.And("My schedule is published");
#line 179
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table31.AddRow(new string[] {
                        "Shift category",
                        "Absence"});
            table31.AddRow(new string[] {
                        "Preference",
                        "Absence"});
            table31.AddRow(new string[] {
                        "Preference Color",
                        "Green"});
#line 180
 testRunner.Then("I should see the day cell with", ((string)(null)), table31);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Absence preference not fulfilled")]
        public virtual void AbsencePreferenceNotFulfilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Absence preference not fulfilled", ((string[])(null)));
#line 187
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table32.AddRow(new string[] {
                        "Preference",
                        "Absence"});
#line 188
 testRunner.Given("I have a preference with", ((string)(null)), table32);
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table33.AddRow(new string[] {
                        "Shift category",
                        "Late"});
#line 192
 testRunner.And("I have a shift with", ((string)(null)), table33);
#line 196
 testRunner.And("My schedule is published");
#line 197
 testRunner.When("I view preferences for date \'2012-10-02\'");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Date",
                        "2012-10-02"});
            table34.AddRow(new string[] {
                        "Shift category",
                        "Late"});
            table34.AddRow(new string[] {
                        "Preference",
                        "Absence"});
            table34.AddRow(new string[] {
                        "Preference Color",
                        "Red"});
#line 198
 testRunner.Then("I should see the day cell with", ((string)(null)), table34);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
