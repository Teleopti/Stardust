@using System.Drawing
@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Core
@using Teleopti.Ccc.Web.Areas.MyTime.Models.WeekSchedule
@model WeekScheduleViewModel
@{
	const int scheduleHeight = 668;
	Layout = null;
}
<script>
	var ajax = new Teleopti.MyTimeWeb.Ajax();
	ajax.Ajax({
		url: 'Schedule/Bajs',
		dataType: "json",
		type: 'GET',
		success: function (data) {
			console.log(data);
			var vm = data;
			vm.scheduleHeight = 668;
			vm.timelineOffset = 198;
			vm.pixelToDisplayAll = 33;
			vm.pixelToDisplayTitle = 16;
			vm.mathRound = function (value) {
				return Math.round(value);
			};

			String.prototype.format = function () {
				var args = arguments;
				return this.replace(/{(\d+)}/g, function (match, number) {
					return typeof args[number] != 'undefined'
				? args[number]
				: match
			 ;
				});
			};

			vm.textRequestCount = function (count) {
				console.log(count);
				var ret = '@(Resources.XRequests)'.format(count);
				console.log(ret);
				return ret;
			};

			vm.topPixel = function (period) {
				return vm.mathRound(vm.scheduleHeight * period.StartPositionPercentage);
			};

			vm.bottomPixel = function (period) {
				return vm.mathRound(vm.scheduleHeight * period.EndPositionPercentage) - 1;
			};

			vm.heightPixel = function (period) {
				return vm.bottomPixel(period) - vm.topPixel(period);
			};

			vm.heightDouble = function (period) {
				return vm.scheduleHeight * (period.EndPositionPercentage - period.StartPositionPercentage);
			};

			vm.tooltipText = function (period) {
				if (period.Meeting) {
					return '<div>{0}</div><div><dl><dt>{1} {2}</dt><dt>{3} {4}</dt></dl></div>'.format(period.TimeSpan, "Resources.SubjectColon", period.Meeting.Title, "Resources.LocationColon", period.Meeting.Location);

				} else {
					return period.TimeSpan;
				}
			};

			ko.applyBindings(vm, document.getElementById('ScheduleWeek-body'));
			Teleopti.MyTimeWeb.Schedule.DataLoaded();
		}
	});
</script>
@if (Model.AsmPermission)
{
	<div class="week-schedule-ASM-permission-granted">
	</div>
}
@if (Model.IsCurrentWeek)
{
	<div class="week-schedule-current-week">
	</div>
}
<div id="ScheduleWeek-body" class="body-weekview clearfix" data-mytime-periodselection='@Html.Schedule().PeriodSelectionAsJson(Model.PeriodSelection)'>
	<style>
		@foreach (var style in Model.Styles)
  {
			@string.Format("li.third.{0} {{background-color: rgb({1});}}\n", style.Name, ColorTranslator.FromHtml(style.ColorHex).ToCSV())
  }
	</style>
	<div id="ScheduleWeek-body-inner" class="body-weekview-inner clearfix">
		<div class="weekview-timeline floatleft">
			<div class="week-schedule-time-indicator-small absolute">
			</div>
			<!-- ko foreach: TimeLine -->
			<div class="weekview-timeline-label absolute" data-bind="style: {top: ($root.mathRound($root.scheduleHeight * PositionPercentage) + $root.timelineOffset) + 'px'}, text : Time">
			</div>
			<!-- /ko -->
		</div>
		<!-- ko foreach: Days -->
		<ul class="weekview-day" data-bind="attr: {'data-mytime-date': FixedDate, 'data-request-default-date': Date, 'data-mytime-state': State}">
			<li>
				<div data-bind="text: Header.Title">
				</div>
			</li>
			<li class="second">
				<div>
					<span class="floatleft ml5" data-bind="text: Header.DayDescription"></span><span
						class="floatright mr5" data-bind="text: Header.DayNumber"></span>
				</div>
			</li>
			<li id="day-summary" data-bind="style: {'background-color' : 'red'}, css: {'show-request':$root.RequestPermission.TextRequestPermission}"
				class="third category"><strong class="fullwidth displayblock" data-bind="text:Summary.Title">
				</strong><span class="fullwidth displayblock" data-bind="text:Summary.TimeSpan">
				</span><span data-bind="text: Summary.Summary"></span></li>
			<li id="day-symbol" class="fourth">
				<div class="text-request floatright" data-bind="visible: TextRequestCount > 0, attr: {title : $root.textRequestCount(TextRequestCount)}">
					<div class="floatright extrasmall" data-bind="text:TextRequestCount">
					</div>
					<div class="icon text-request ir floatright" />
				</div>
				<div class="icon comment-day ir tooltip floatright" data-bind="visible: HasNote, attr: {'tooltip-text': Note.Message}">
				</div>
				<div id="add-request-cell" data-bind="css:{'add-request-space show-request': $root.RequestPermission.TextRequestPermission}">
				</div>
			</li>
			<li class="weekview-day-schedule relative">
				<div class="week-schedule-time-indicator relative">
				</div>
				<!-- ko foreach: Periods -->
				<div class="week-schedule-layer absolute tooltip" data-bind="attr: {'tooltip-title': Title, 'tooltip-text' : $root.tooltipText($data)}, style:{'background-color' : 'rgb(' + Color +')', 'height' :  $root.heightPixel($data) + 'px', top:  $root.topPixel($data) + 'px', 'width' : '131px'}"  >  
					<!-- ko if: Meeting -->
					<div class="icon meeting floatright">
					</div>
					<!-- /ko -->
					<strong class="truncate" data-bind="text: Title, visible: $root.heightDouble($data) > $root.pixelToDisplayTitle"></strong>
					<span class="fullwidth displayblock" data-bind="visible: $root.heightDouble($data) > $root.pixelToDisplayAll, text: TimeSpan"></span>
				</div>
				<!-- /ko -->
			</li>
			<!-- /ko -->
		</ul>
		<!-- /ko -->
		@*		@foreach (var day in Model.Days)
  {
			<ul class="weekview-day" data-mytime-date="@day.FixedDate" data-request-default-date="@day.Date" data-mytime-state="@Html.Schedule().FormatState(day.State)">
				<li>
					<div>@day.Header.Title</div>
				</li>
				<li class="second">
					<div>
						<span class="floatleft ml5">@day.Header.DayDescription</span>
						<span class="floatright mr5">@day.Header.DayNumber</span>
					</div>
				</li>
				<li id="day-summary" class="@Html.AttributeEncode(day.Summary.StyleClassName) third category @(Model.RequestPermission.TextRequestPermission ? @Html.Raw("show-request") : @Html.Raw(""))">
					
					<strong class="fullwidth displayblock">@day.Summary.Title</strong>
					<span class="fullwidth displayblock">@day.Summary.TimeSpan</span>
					@day.Summary.Summary
					
				</li>
				<li id="day-symbol" class="fourth">
					<div class="text-request floatright" @(day.TextRequestCount > 0 ? "" : "style=display:none") title="@(string.Format(Resources.XRequests, day.TextRequestCount))">
						<div class="floatright extrasmall">@day.TextRequestCount</div>
						<div class="icon text-request ir floatright" />
					</div>
					@if (day.HasNote)
					 {
						<div class="icon comment-day ir tooltip floatright" tooltip-text="@day.Note.Message"></div>
					 }
					<div id="add-request-cell"  @(Model.RequestPermission.TextRequestPermission ? @Html.Raw("class=\"add-request-space show-request\"") : @Html.Raw("class=\"\""))></div>
				</li>
				<li class="weekview-day-schedule relative">
					<div class="week-schedule-time-indicator relative"></div>
					@foreach (var period in day.Periods)
					 {
						 var topPixel = Math.Round(scheduleHeight * period.StartPositionPercentage);
						 var bottomPixel = Math.Round(scheduleHeight * period.EndPositionPercentage) - 1;
						 var heightPixel = bottomPixel - topPixel;
						 var heightDouble = scheduleHeight * (period.EndPositionPercentage - period.StartPositionPercentage);

						 const int pixelToDisplayAll = 33;
						 const int pixelToDisplayTitle = 16;
						 var tooltipText = period.Meeting == null ? period.TimeSpan : string.Format("<div>{0}</div><div><dl><dt>{1} {2}</dt><dt>{3} {4}</dt></dl></div>", period.TimeSpan, Resources.SubjectColon, period.Meeting.Title, Resources.LocationColon, period.Meeting.Location);

						<div class="week-schedule-layer absolute tooltip" tooltip-title="@period.Title" tooltip-text="@tooltipText" 
								style="background-color: @string.Format("rgb({0})", period.Color); height: @(heightPixel)px; top: @(topPixel)px; width: 131px">
							@if (period.Meeting != null)
							{
								<div class="icon meeting floatright"></div>
							}
							<strong @(heightDouble > pixelToDisplayTitle ? @Html.Raw("class=\"truncate\"") : @Html.Raw("class=\"truncate displaynone\""))>@period.Title</strong>
							<span @(heightDouble < pixelToDisplayAll ? @Html.Raw("class=\"fullwidth displaynone\"") : @Html.Raw("class=\"fullwidth displayblock\""))>@period.TimeSpan</span>
						</div>
					}
				</li>
			</ul>*@ }
	</div>
</div>
@Html.Partial("WeekRequestPartial", Model)
