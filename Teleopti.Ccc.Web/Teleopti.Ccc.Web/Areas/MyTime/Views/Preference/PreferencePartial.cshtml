@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Core
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Preference
@model PreferenceViewModel
@{
	Layout = null;
}

<div class="pd5 information-panel ui-corner-all">
	<div id="Preference-period-feedback-view">
		<div>
			<!-- ko if: TargetContractTimeLower() == TargetContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldWorkXHours, "<span data-bind='text: TargetContractTimeLower' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: TargetContractTimeLower() != TargetContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldWorkBetweenXAndYHours, "<span data-bind='text: TargetContractTimeLower' class='feedback-detail'>-</span>", "<span data-bind='text: TargetContractTimeUpper' class='feedback-detail'>-</span>"))
			<!-- /ko -->
		
			<!-- ko if: PossibleResultContractTimeLower() == PossibleResultContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YourPreferencesCanResultXHours, "<span data-bind='text: PossibleResultContractTimeLower' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: PossibleResultContractTimeLower() != PossibleResultContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YourPreferencesCanResultXToYHours, "<span data-bind='text: PossibleResultContractTimeLower' class='feedback-detail'>-</span>", "<span data-bind='text: PossibleResultContractTimeUpper' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: PossibleResultContractTimeUpper() < TargetContractTimeLower() || TargetContractTimeUpper() < PossibleResultContractTimeLower() -->
			<span class="icon preference-warning" title="@Resources.YourPreferenceIsOutOfRange"/>
			<!-- /ko -->
		</div>
		<div>
			<!-- ko if: TargetDaysOffLower() == TargetDaysOffUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldHaveXDaysOff, "<span data-bind='text: TargetDaysOffLower' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: TargetDaysOffLower() != TargetDaysOffUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldHaveBetweenXAndYDaysOff, "<span data-bind='text: TargetDaysOffLower' class='feedback-detail'>-</span>", "<span data-bind='text: TargetDaysOffUpper' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			@Html.Raw(string.Format(Resources.YourPreferencesCanResultXDaysOff, "<span data-bind='text: PossibleResultDaysOff' class='feedback-detail'>-</span>"))
			<!-- ko if: PossibleResultDaysOff() > TargetDaysOffUpper() || PossibleResultDaysOff() < TargetDaysOffLower()-->
			<span class="icon preference-warning" title="@Resources.YourPreferenceIsOutOfRange"/>
			<!-- /ko -->
		</div>
	</div>
	<div id="Preference-period">
		@if (Model.PreferencePeriod == null)
		{
			@string.Format("{0} : {1}", Resources.PreferencePeriod, Resources.MissingWorkflowControlSet)
		}
		else
		{
			@string.Format("{0} : {1} | ", Resources.PreferencePeriod, Model.PreferencePeriod.Period)
			@string.Format("{0} : {1}", Resources.IsOpen, Model.PreferencePeriod.OpenPeriod)
		}
	</div>
</div>

<div id="Preference-body" class="body-calendarview clearfix" data-mytime-periodselection='@Html.Schedule().PeriodSelectionAsJson(Model.PeriodSelection)' data-mytime-maxmusthave="@Model.MaxMustHave">
		
	<div id="Preference-body-inner" class="body-calendarview-inner clearfix">
		<ul class="weekdays">
			@foreach (WeekDayHeader weekDayName in Model.WeekDayHeaders)
			{
				<li>@weekDayName.Title</li>
			}
		</ul>
		@foreach (WeekViewModel week in Model.Weeks)
		{
			<ul class="calendarview-week" onselectstart="return false;">
				<li>
					<div>

					</div>
				</li>
				@foreach (DayViewModel day in week.Days)
				{
					<li class="relative @(day.InPeriod ? "inperiod" : "non-editable")" data-mytime-date="@Html.Schedule().FormatDate(day.Date)" data-mytime-editable="@day.Editable" data-bind="css: {editable: Editable, 'non-editable': !Editable(), feedback: Feedback}, class: StyleClassName()">
						<div>
							<div class="day-header">
								<span class="floatleft ml5">@day.Header.DayDescription</span><span class="floatright mr5">@day.Header.DayNumber</span>
							</div>
							<div class="day-content pdt10" data-bind="style: { borderLeftColor: Color() }">
								@if (day.InPeriod)
								{
									<img class="loading-small-gray-blue" data-bind="visible: IsLoading" src="@Url.Content("~/Areas/MyTime/Content/Images/ajax-loader-small-f8f8f8-A1C7D3.gif")" alt="..." />
									<!-- ko if: AjaxError().length > 0 -->
									<h2 class="error" data-bind="text: AjaxError"></h2>
									<!-- /ko -->

									<div class="preference">
										<span class="displayinline-block">
											<!-- ko if: Meetings().length > 0 || PersonalShifts().length > 0 -->
											<div class="preference-indicator icon meeting-small">
											</div>
											<div class="meeting-tooltip" style="display: none">
												<!-- ko if: Meetings().length > 0 -->
												<table>
													<thead>@Resources.Meeting</thead>
													<tbody data-bind="foreach: Meetings">
														<tr>
															<td data-bind="text: Subject"></td>
															<!-- ko if: IsOptional -->
															<td>(@Resources.Optional)</td>
															<!-- /ko -->
															<td>:</td>
															<td data-bind="text: TimeSpan"></td>
															
														</tr>
													</tbody>
												</table>
												<!-- /ko -->
												<!-- ko if: PersonalShifts().length > 0 -->
												<table>
													<thead>@Resources.PersonalShift</thead>
													<tbody data-bind="foreach: PersonalShifts">
														<tr>
															<td data-bind="text: Subject"></td>
															<td>:</td>
															<td data-bind="text: TimeSpan"></td>
														</tr>
													</tbody>
												</table>
												<!-- /ko -->
											</div>
											<!-- /ko -->
											<div class="preference-indicator">
												<div class="heart-small preference-must-have @(day.Editable ? "" : "grey-out")" data-bind="css: {'icon': MustHave}"></div>
											</div>
											<div class="preference-text" data-bind="text: Preference, css: {'preference-fulfilled': Fulfilled(), 'preference-not-fulfilled': !Fulfilled()}" />
											<div class="preference-indicator">
												<div class="extended-indication" style="display: none" data-bind="visible: Extended">&raquo;</div>
												<div class="extended-panel" style="display: none">
													<div class="extended-part">
														<div class="extended-part-title" data-bind="text: ExtendedTitle"></div>
														<div class="time-limitation icon leftarrow truncate" data-bind="text: StartTimeLimitation"></div>
														<div class="time-limitation icon rightarrow truncate" data-bind="text: EndTimeLimitation"></div>
														<div class="time-limitation icon doublearrow-blue truncate" data-bind="text: WorkTimeLimitation"></div>
													</div>
													<div class="extended-part">
														<div class="extended-part-title" data-bind="text: Activity"></div>
														<div class="time-limitation icon leftarrow truncate" data-bind="text: ActivityStartTimeLimitation"></div>
														<div class="time-limitation icon rightarrow truncate" data-bind="text: ActivityEndTimeLimitation"></div>
														<div class="time-limitation icon doublearrow-blue truncate" data-bind="text: ActivityTimeLimitation"></div>
													</div>
												</div>
											</div>
										</span>
									</div>

									<!-- ko if: DayOff() != '' -->
									<div class="dayoff" data-bind="text: DayOff"></div>
									<!-- /ko -->

									<!-- ko if: Absence() != '' -->
									<div class="absence" data-bind="text: Absence"></div>
									<!-- /ko -->

									<!-- ko if: PersonAssignmentShiftCategory() != '' -->
									<div class="scheduled">
										<span class="displayblock fullwidth" data-bind="text: PersonAssignmentShiftCategory"></span>
										<strong class="displayblock fullwidth" data-bind="text: PersonAssignmentTimeSpan"></strong>
										<span class="displayblock fullwidth" data-bind="text: PersonAssignmentContractTime"></span>
									</div>
									<!-- /ko -->
								}
								@if (day.InPeriod)
								{
									<!-- ko if: Feedback -->
									<!-- ko if: DisplayFeedbackError -->
									<div class="feedback-error truncate" data-bind="text: FeedbackError"></div>
									<!-- /ko -->
									<!-- ko if: DisplayFeedback -->
									<div class="possible-start-times time-limitation icon leftarrow truncate" data-bind="text: PossibleStartTimes"></div>
									<div class="possible-end-times time-limitation icon rightarrow truncate" data-bind="text: PossibleEndTimes"></div>
									<div class="possible-contract-times time-limitation icon doublearrow-blue truncate" data-bind="text: PossibleContractTimes"></div>
									<!-- /ko -->
									<!-- /ko -->
								}
							</div>
						</div>
					</li>
				}
			</ul>
		}
	</div>
</div>