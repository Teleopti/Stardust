@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Core
@model Teleopti.Ccc.Web.Areas.MyTime.Models.Preference.PreferenceViewModel
@{
	Layout = null;
}

<div class="pd5 information-panel ui-corner-all">
	<div id="Preference-period-feedback-view">
		<div>
			<!-- ko if: TargetContractTimeLower() == TargetContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldWorkXHours, "<span data-bind='text: TargetContractTimeLower' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: TargetContractTimeLower() != TargetContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldWorkBetweenXAndYHours, "<span data-bind='text: TargetContractTimeLower' class='feedback-detail'>-</span>", "<span data-bind='text: TargetContractTimeUpper' class='feedback-detail'>-</span>"))
			<!-- /ko -->
		
			<!-- ko if: PossibleResultContractTimeLower() == PossibleResultContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YourPreferencesCanResultXHours, "<span data-bind='text: PossibleResultContractTimeLower' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: PossibleResultContractTimeLower() != PossibleResultContractTimeUpper() -->
			@Html.Raw(string.Format(Resources.YourPreferencesCanResultXToYHours, "<span data-bind='text: PossibleResultContractTimeLower' class='feedback-detail'>-</span>", "<span data-bind='text: PossibleResultContractTimeUpper' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: PossibleResultContractTimeUpper() < TargetContractTimeLower() || TargetContractTimeUpper() < PossibleResultContractTimeLower() -->
			<span class="icon preference-warning" title="@Resources.YourPreferenceIsOutOfRange"/>
			<!-- /ko -->
		</div>
		<div>
			<!-- ko if: TargetDaysOffLower() == TargetDaysOffUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldHaveXDaysOff, "<span data-bind='text: TargetDaysOffLower' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			<!-- ko if: TargetDaysOffLower() != TargetDaysOffUpper() -->
			@Html.Raw(string.Format(Resources.YouShouldHaveBetweenXAndYDaysOff, "<span data-bind='text: TargetDaysOffLower' class='feedback-detail'>-</span>", "<span data-bind='text: TargetDaysOffUpper' class='feedback-detail'>-</span>"))
			<!-- /ko -->
			@Html.Raw(string.Format(Resources.YourPreferencesCanResultXDaysOff, "<span data-bind='text: PossibleResultDaysOff' class='feedback-detail'>-</span>"))
			<!-- ko if: PossibleResultDaysOff() > TargetDaysOffUpper() || PossibleResultDaysOff() < TargetDaysOffLower()-->
			<span class="icon preference-warning" title="@Resources.YourPreferenceIsOutOfRange"/>
			<!-- /ko -->
		</div>
	</div>
	<div id="Preference-period">
		@if (Model.PreferencePeriod == null)
		{
			@string.Format("{0} : {1}", Resources.PreferencePeriod, Resources.MissingWorkflowControlSet)
		}
		else
		{
			@string.Format("{0} : {1} | ", Resources.PreferencePeriod, Model.PreferencePeriod.Period)
			@string.Format("{0} : {1}", Resources.IsOpen, Model.PreferencePeriod.OpenPeriod)
		}
	</div>
</div>

<div id="Preference-body" class="body-calendarview clearfix" data-mytime-periodselection='@Html.Schedule().PeriodSelectionAsJson(Model.PeriodSelection)'>
		
	<div id="Preference-body-inner" class="body-calendarview-inner clearfix">
		<ul class="weekdays">
			@foreach (var weekDayName in Model.WeekDayHeaders)
			{
				<li>@weekDayName.Title</li>
			}
		</ul>
		@foreach (var week in Model.Weeks)
		{
			<ul class="calendarview-week" onselectstart="return false;">
				<li>
					<div>

					</div>
				</li>
				@foreach (var day in week.Days)
				{
					var personAssignment = day.PersonAssignment;
					var dayOff = day.DayOff;
					var absence = day.Absence;
					<li class="relative @(day.InPeriod ? "inperiod" : "") @(day.Feedback ? "feedback" : "") @(day.Editable ? "editable" : "non-editable") @Html.AttributeEncode(day.StyleClassName)" data-mytime-date="@Html.Schedule().FormatDate(day.Date)">
						<div>
							<div class="day-header">
								<span class="floatleft ml5">@day.Header.DayDescription</span><span class="floatright mr5">@day.Header.DayNumber</span>
							</div>
							<div class="day-content pdt10" style="border-left-color: @day.BorderColor" data-bind="style: { borderLeftColor: Color() }">
								@if (day.Preference)
								{
									<div class="preference">
										<span class="displayinline-block">
											<div class="preference-text" data-bind="text: Preference"></div>
                                            @if (day.MustHave)
                                            {
                                                <div class="preference-must-have">
                                            	    <span class="icon preference-warning" title="@Resources.YourPreferenceIsOutOfRange"/>
											    </div>
                                            }
											<div class="extended-indication" style="display: none" data-bind="visible: Extended">&raquo;</div>
											<div class="extended-panel" style="display: none">
												<div class="extended-part">
													<div class="extended-part-title" data-bind="text: ExtendedTitle"></div>
													<div class="time-limitation icon leftarrow truncate" data-bind="text: StartTimeLimitation"></div>
													<div class="time-limitation icon rightarrow truncate" data-bind="text: EndTimeLimitation"></div>
													<div class="time-limitation icon doublearrow-blue truncate" data-bind="text: WorkTimeLimitation"></div>
												</div>
												<div class="extended-part">
													<div class="extended-part-title" data-bind="text: Activity"></div>
													<div class="time-limitation icon leftarrow truncate" data-bind="text: ActivityStartTimeLimitation"></div>
													<div class="time-limitation icon rightarrow truncate" data-bind="text: ActivityEndTimeLimitation"></div>
													<div class="time-limitation icon doublearrow-blue truncate" data-bind="text: ActivityTimeLimitation"></div>
												</div>
											</div>
										</span>
									</div>
								}
								@if (day.Feedback)
								{
									<!-- ko if: DisplayFeedbackError -->
									<div class="feedback-error truncate" data-bind="text: FeedbackError"></div>
									<!-- /ko -->
									<!-- ko if: DisplayFeedback -->
									<div class="possible-start-times time-limitation icon leftarrow truncate" data-bind="text: PossibleStartTimes"></div>
									<div class="possible-end-times time-limitation icon rightarrow truncate" data-bind="text: PossibleEndTimes"></div>
									<div class="possible-contract-times time-limitation icon doublearrow-blue truncate" data-bind="text: PossibleContractTimes"></div>
									<!-- /ko -->
								}
								@if (personAssignment != null)
								{
									<div class="scheduled">
										<span class="displayblock fullwidth">@personAssignment.ShiftCategory</span>
										<strong class="displayblock fullwidth">@personAssignment.TimeSpan</strong>
										<span class="displayblock fullwidth" data-mytime-contract-time="@personAssignment.ContractTimeMinutes">@personAssignment.ContractTime</span>
									</div>
								}
								@if (dayOff != null)
								{
									<div class="dayoff">
										@dayOff.DayOff
									</div>
								}
								@if (absence != null)
								{
									<div class="absence">
										@absence.Absence
									</div>
								}
							</div>
						</div>
					</li>
				}
			</ul>
		}
	</div>
</div>

