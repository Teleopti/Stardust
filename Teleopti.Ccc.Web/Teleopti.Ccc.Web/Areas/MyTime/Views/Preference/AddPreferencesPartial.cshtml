@using System.Globalization
@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Portal
@using Teleopti.Interfaces.Domain
@{
var timeLengths = from t in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0))
					let value = Html.AttributeEncode(TimeHelper.GetLongHourMinuteTimeString(t, CultureInfo.CurrentCulture))
					let text = TimeHelper.GetLongHourMinuteTimeString(t, CultureInfo.CurrentCulture)
					select new Option
						{
							Value = value,
							Text = text
						};
}

<span class="form-inline clearfix">
    <span>
        <button class="btn btn-mini" data-toggle="button" data-bind="click: IsSaveAsNewTemplateToggle" title="@Resources.SaveAsTemplate">
            <i class="icon-plus-sign" data-bind="css: IsSaveAsNewTemplateClass"></i>
        </button>
        <span data-bind="if: IsSaveAsNewTemplate()">
            <span id="Template-name-section">
                <input id="Template-name-input" class="input-small" type="text" placeholder="@Resources.NewTemplateName" data-bind="value: NewTemplateName"/>
                <button id="Preference-extended-save-template" class="btn btn-mini" data-bind="click: SaveAsNewTemplate">@Resources.Save</button>
            </span>
        </span>
    </span>
    <span data-bind="visible: AvailableTemplates().length > 0">
        <select data-bind="foreach: AvailableTemplates, value: SelectedTemplateId" title="@Resources.ExtendedPreferencesTemplate">
            <option data-bind="text: Text, value: Value"></option>
        </select>
        <button class="btn btn-mini" data-bind="click: DeleteTemplate, enable: DeleteTemplateEnabled" title="@Resources.Delete">
            <i class="icon-remove-sign"></i>
        </button>
    </span>
    <button class="btn btn-mini pull-right" data-bind="click: IsPreferenceInputVisibleToggle">
        <i class="icon-circle-arrow-up" data-bind="css: IsPreferenceInputVisibleToggleCss"></i>
    </button>
</span>
<hr data-bind="visible: IsPreferenceInputVisible"/>
<div data-bind="if: ShowError">
    <div class="preference-error-panel alert alert-danger" data-bind="html: ValidationError" />
</div>

<table class="table-condensed" data-bind="visible: IsPreferenceInputVisible">
    <tr>
        <td>
            <table class="table-condensed">
                <tr>
                    <td></td>
                    <td colspan="2">
                        <span title="@Resources.Preference">
                            <select id="Preference-Picker" data-bind="select2: { value: PreferenceId, formatResult: FormatPreferencesOption, formatSelection: FormatPreferencesOption }">
                                <option value="" data-preference-extended="true"></option>
                                <option value="-"></option>
                                @foreach (var option in Model.Options.PreferenceOptions)
                                {
                                    <option value="@option.Value" data-color="@option.Color" data-preference-extended="@option.Extended.ToString().ToLower()">@option.Text</option>
                                }
                            </select>
                        </span>
                    </td>
                </tr>
                <tr class="form-inline" data-bind="if: IsTimeInputVisible">
                    <td>
                        <i class="icon-step-backward"></i>
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.EarliestStartTime">
                            <input type="text" class="preference-start-time-min input-small" data-bind="timepicker: EarliestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.LatestStartTime">
                            <input type="text" class="preference-start-time-max input-small" data-bind="timepicker: LatestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                    </td>
                </tr>
                <tr class="form-inline" data-bind="if: IsTimeInputVisible">
                    <td>
                        <i class="icon-step-forward"></i>
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.EarliestEndTime">
                            <input type="text" class="preference-end-time-min input-small" data-bind="timepicker: EarliestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                        <button class="preference-end-time-min-next-day btn btn-mini" data-toggle="button" data-bind="click: EarliestEndTimeNextDayToggle, enable: EarliestEndTimeNextDayToggleEnabled" title="@Resources.NextDay">
                            <i class="icon-adjust" data-bind="css: EarliestEndTimeNextDayClass"></i>
                        </button>    
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.LatestEndTime">
                            <input type="text" class="preference-end-time-max input-small" data-bind="timepicker: LatestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                        <button class="preference-end-time-max-next-day btn btn-mini" data-toggle="button" data-bind="click: LatestEndTimeNextDayToggle, enable: LatestEndTimeNextDayToggleEnabled" title="@Resources.NextDay">
                            <i class="icon-adjust" data-bind="css: LatestEndTimeNextDayClass"></i>
                        </button>
                    </td>
                </tr>
                <tr class="form-inline" data-bind="if: IsTimeInputVisible">
                    <td>
                        <i class="icon-resize-horizontal"></i>
                    </td>
                    <td>
                        <select class="preference-extended-work-time-min input-small" data-bind="value: MinimumWorkTime" title="@Resources.MinWorkTime">
                            <option value=""></option>
                            @foreach (var timeSpan in timeLengths)
                            {
                                <option value="@timeSpan.Value">@timeSpan.Text</option>
                            }
                        </select>
                    </td>
                    <td>
                        <select class="preference-extended-work-time-max input-small" data-bind="value: MaximumWorkTime" title="@Resources.MaxWorkTime">
                            <option value=""></option>
                            @foreach (var timeSpan in timeLengths)
                            {
                                <option value="@timeSpan.Value">@timeSpan.Text</option>
                            }
                        </select>
                    </td>
                </tr>
            </table>
        </td>
        <td style="vertical-align: top;" data-bind="if: IsTimeInputVisible">
            <table class="preference-activity-section table-condensed">
                <tr>
                    <td></td>
                    <td colspan="2">
                        <span title="@Resources.Activity">
                            <select id="Preference-extended-activity-Picker" data-bind="select2: { value: ActivityPreferenceId, formatResult: FormatPreferencesOption, formatSelection: FormatPreferencesOption }">
                                <option value=""></option>
                                <option value="-"></option>
                                @foreach (var option in Model.Options.ActivityOptions)
                                {
                                    <option value="@option.Value" data-color="@option.Color">@option.Text</option>
                                }
                            </select>
                        </span>
                    </td>
                </tr>
                <tr class="form-inline" data-bind="visible: EnableActivityTimeEditing">
                    <td>
                        <i class="icon-step-backward"></i>
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.EarliestStartTime">
                            <input type="text" class="preference-activity-start-time-min input-small" data-bind="timepicker: ActivityEarliestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.LatestStartTime">
                            <input type="text" class="preference-activity-start-time-max input-small" data-bind="timepicker: ActivityLatestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                    </td>
                </tr>
                <tr class="form-inline" data-bind="visible: EnableActivityTimeEditing">
                    <td>
                        <i class="icon-step-forward"></i>
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.EarliestEndTime">
                            <input type="text" class="preference-activity-end-time-min input-small" data-bind="timepicker: ActivityEarliestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                    </td>
                    <td>
                        <div class="input-append bootstrap-timepicker" title="@Resources.LatestEndTime">
                            <input type="text" class="preference-activity-end-time-max input-small" data-bind="timepicker: ActivityLatestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
                            <span class="add-on"><i class="icon-time"></i></span>
                        </div>
                    </td>
                </tr>
                <tr class="form-inline" data-bind="visible: EnableActivityTimeEditing">
                    <td>
                        <i class="icon-resize-horizontal"></i>
                    </td>
                    <td>
                        <select class="preference-activity-extended-work-time-min input-small" data-bind="value: ActivityMinimumTime" title="@Resources.MinWorkTime">
                            <option value="">&nbsp;</option>
                            @foreach (var timeSpan in timeLengths)
                            {
                                <option value="@timeSpan.Value">@timeSpan.Text</option>
                            }
                        </select>
                    </td>
                    <td>
                        <select class="preference-activity-extended-work-time-max input-small" data-bind="value: ActivityMaximumTime" title="@Resources.MaxWorkTime">
                            <option value="">&nbsp;</option>
                            @foreach (var timeSpan in timeLengths)
                            {
                                <option value="@timeSpan.Value">@timeSpan.Text</option>
                            }
                        </select>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>
<div class="pull-right">
    <button id="Preference-extended-reset" class="btn" data-bind="click: Reset">@Resources.Reset</button>
    <button id="Preference-extended-apply" class="btn btn-primary" data-bind="click: SavePreferences">@Resources.Apply</button>
</div>