@using System.Globalization
@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Portal
@using Teleopti.Interfaces.Domain
@{
    var timeLengths = from t in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0))
                      let value = Html.AttributeEncode(TimeHelper.GetLongHourMinuteTimeString(t, CultureInfo.CurrentCulture))
                      let text = TimeHelper.GetLongHourMinuteTimeString(t, CultureInfo.CurrentCulture)
                      select new Option
                      {
                          Value = value,
                          Text = text
                      };
}

<span class="form-inline clearfix">
    <span>
        <button class="preference-toggle-save-template btn btn-xs" data-bind="click: IsSaveAsNewTemplateToggle" title="@Resources.SaveAsTemplate">
            <i class="glyphicon glyphicon-plus-sign" data-bind="css: IsSaveAsNewTemplateClass"></i>
        </button>
        <span data-bind="if: IsSaveAsNewTemplate()">
            <span id="Template-name-section">
                <input class="preference-template-name form-control" type="text" placeholder="@Resources.NewTemplateName" data-bind="value: NewTemplateName"/>
                <button id="Preference-extended-save-template" class="btn btn-xs btn-primary" data-bind="click: SaveAsNewTemplate">@Resources.Save</button>
            </span>
        </span>
    </span>
    <span data-bind="visible: HasTemplates">
        <select class="preference-template-list form-control" data-bind="foreach: AvailableTemplates, value: SelectedTemplateId" title="@Resources.ExtendedPreferencesTemplate">
            <option data-bind="text: Text, value: Value"></option>
        </select>
        <button class="preference-template-delete btn btn-xs" data-bind="click: DeleteTemplate, enable: DeleteTemplateEnabled" title="@Resources.Delete">
            <i class="glyphicon glyphicon-remove-sign"></i>
        </button>
    </span>
    <button class="btn btn-xs pull-right" data-bind="click: IsPreferenceInputVisibleToggle">
        <i class="glyphicon glyphicon-circle-arrow-up" data-bind="css: IsPreferenceInputVisibleToggleCss"></i>
    </button>
</span>
<hr class="hr-thin" data-bind="visible: IsPreferenceInputVisible" />
<div data-bind="if: ShowError">
    <div class="preference-error-panel alert alert-danger" data-bind="html: ValidationError" />
</div>

<table class="table-condensed preference-input-container">
	<tr>
		<td  class="col-xs-5">
			<table class="table-condensed preference-input-container " data-bind="visible: IsPreferenceInputVisible">
				<tr>
					<td class="preference-input-icon-cell col-xs-1">
						<i class="glyphicon glyphicon-edit" title="@Resources.Preference"></i>
					</td>
					<td colspan="3" class="col-xs-10">
						<span title="@Resources.Preference">
							<select id="Preference-Picker" data-bind="select2: { value: PreferenceId, formatResult: FormatPreferencesOption, formatSelection: FormatPreferencesOption }">
								<option value="" data-preference-extended="true">&nbsp;</option>
								@foreach (var optionGroup in Model.Options.PreferenceOptions)
								{
									<optgroup label="@optionGroup.Text">
										@foreach (var option in optionGroup.Options)
										{
                                        <option value="@option.Value" data-color="@option.Color" data-preference-extended="@option.Extended.ToString().ToLower()">@Html.Encode(option.Text)</option>
										}
									</optgroup>
								}
							</select>
						</span>
					</td>
					<td></td>
				</tr>
				<tr class="form-inline" data-bind="if: IsTimeInputVisible">
					<td>
						<i class="glyphicon glyphicon-step-backward" title="@Resources.StartTime"></i>
					</td>
					<td>
						<div class="row">
							<div class="form-group col-xs-12">
								<div class="input-group bootstrap-timepicker " title="@Resources.EarliestStartTime">
									<input type="text" class="preference-start-time-min input-sm form-control" data-bind="timepicker: EarliestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
									<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
								</div>
							</div>
						</div>
					</td>
					<td></td>
					<td>
						<div class="row">
							<div class="form-group col-xs-12">
								<div class="input-group bootstrap-timepicker" title="@Resources.LatestStartTime">
									<input type="text" class="preference-start-time-max input-sm form-control" data-bind="timepicker: LatestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
									<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
								</div>
							</div>
						</div>
					</td>
					<td></td>
				</tr>
				<tr class="form-inline" data-bind="if: IsTimeInputVisible">
					<td>
						<i class="glyphicon glyphicon-step-forward" title="@Resources.EndTime"></i>
					</td>
					<td>
						<div class="row">
							<div class="form-group col-xs-12">
								<div class="input-group bootstrap-timepicker" title="@Resources.EarliestEndTime">
									<input type="text" class="preference-end-time-min input-sm form-control" data-bind="timepicker: EarliestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
									<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
								</div>
							</div>
						</div>
					</td>

					<td>
						<div class="checkbox">
							<input type="checkbox" class="preference-end-time-min-next-day" data-bind="checked: NextDayMin, enable: EarliestEndTimeNextDayToggleEnabled" title="@Resources.NextDay" />
						</div>
					</td>
					<td>
						<div class="row">
							<div class="form-group col-xs-12">
								<div class="input-group bootstrap-timepicker" title="@Resources.LatestEndTime">
									<input type="text" class="preference-end-time-max input-sm form-control" data-bind="timepicker: LatestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
									<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
								</div>
							</div>
						</div>
					</td>
					<td>
						<input type="checkbox" class="preference-end-time-max-next-day" data-bind="checked: NextDayMax, enable: LatestEndTimeNextDayToggleEnabled" title="@Resources.NextDay" />
					</td>
				</tr>


				<tr data-bind="if: IsTimeInputVisible">
					<td>
						<i class="glyphicon glyphicon-resize-horizontal" title="@Resources.WorkTime"></i>
					</td>
					<td>
						<div class="input-group">
							<input type="text" class="preference-extended-work-time-min input-sm form-control" data-bind="value: MinimumWorkTime" title="@Resources.MinWorkTime">
							<ul role="menu" class="dropdown-menu" style="max-height: 270px; overflow-y:scroll; ">
								@foreach (var timeSpan in timeLengths)
								{
									<li class="ui-menu-item" role="presentation"><a href="#" class="ui-corner-all" data-bind="click: function (data, event) { MinimumWorkTime('@timeSpan.Value'); }" tabindex="-1">@timeSpan.Text</a></li>
								}
							</ul>
							<span class="input-group-addon dropdown-toggle" data-toggle="dropdown" tabindex="-1">
								<span class="caret"></span>
							</span>
						</div>
					</td>
					<td></td>
					<td class="select-input-auto">
						<div class="input-group">
							<input type="text" class="preference-extended-work-time-max input-sm form-control" data-bind="value: MaximumWorkTime" title="@Resources.MaxWorkTime">
							<ul role="menu" class="dropdown-menu" style="max-height: 270px; overflow-y:scroll; ">
								@foreach (var timeSpan in timeLengths)
								{
									<li class="ui-menu-item" role="presentation"><a href="#" class="ui-corner-all" data-bind="click: function (data, event) { MaximumWorkTime('@timeSpan.Value'); }" tabindex="-1">@timeSpan.Text</a></li>
								}
							</ul>
							<span class="input-group-addon dropdown-toggle" data-toggle="dropdown" tabindex="-1">
								<span class="caret"></span>
							</span>
						</div>
					</td>
					<td></td>
				</tr>
			</table>
		</td>
		<td></td>
		<td class="td-vertical-divider" data-bind="visible: IsPreferenceInputVisible"></td>
		<td></td>
		<td style="vertical-align: top;" data-bind="if: IsTimeInputVisible">
			<table class="preference-activity-section table-condensed" data-bind="visible: IsPreferenceInputVisible">
				<tr>
					<td class="col-xs-1">
						<i class="glyphicon glyphicon-tasks" title="@Resources.Activity"></i>
					</td>
					<td colspan="2">
						<div title="@Resources.Activity">
							<select id="Preference-extended-activity-Picker" data-bind="select2: { value: ActivityPreferenceId, formatResult: FormatPreferencesOption, formatSelection: FormatPreferencesOption }">
								<option value="">&nbsp;</option>
								<optgroup label="@Model.Options.ActivityOptions.Text">
									@foreach (var option in Model.Options.ActivityOptions.Options)
									{
                                    <option value="@option.Value" data-color="@option.Color">@Html.Encode(option.Text)</option>
									}
								</optgroup>
							</select>
						</div>
					</td>
				</tr>
				<tr class="form-inline" data-bind="visible: EnableActivityTimeEditing">
					<td class="col-xs-1">
						<i class="glyphicon glyphicon-step-backward" title="@Resources.StartTime"></i>
					</td>
					<td class="col-xs-1">
						<div class="input-group bootstrap-timepicker " title="@Resources.EarliestStartTime">
							<input type="text" class="preference-activity-start-time-min form-control input-sm" data-bind="timepicker: ActivityEarliestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
							<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
						</div>
					</td>
					<td class="col-xs-3">
						<div class="input-group bootstrap-timepicker" title="@Resources.LatestStartTime">
							<input type="text" class="preference-activity-start-time-max form-control input-sm" data-bind="timepicker: ActivityLatestStartTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
							<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
						</div>
					</td>
				</tr>
				<tr class="form-inline" data-bind="visible: EnableActivityTimeEditing">
					<td class="col-xs-1">
						<i class="glyphicon glyphicon-step-forward" title="@Resources.EndTime"></i>
					</td>
					<td class="col-xs-3">
						<div class="input-group bootstrap-timepicker" title="@Resources.EarliestEndTime">
							<input type="text" class="preference-activity-end-time-min form-control input-sm" data-bind="timepicker: ActivityEarliestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
							<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
						</div>
					</td>
					<td class="col-xs-3">
						<div class="input-group bootstrap-timepicker" title="@Resources.LatestEndTime">
							<input type="text" class="preference-activity-end-time-max form-control input-sm" data-bind="timepicker: ActivityLatestEndTime, timepickerOptions: { showMeridian: ShowMeridian(), allowEmpty: true }" />
							<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
						</div>
					</td>
				</tr>
				<tr data-bind="visible: EnableActivityTimeEditing">
					<td class="col-xs-1">
						<i class="glyphicon glyphicon-resize-horizontal" title="@Resources.WorkTime"></i>
					</td>
					<td>
						<div class="input-group">
							<input type="text" class="preference-activity-extended-work-time-min input-sm form-control" data-bind="value: ActivityMinimumTime" title="@Resources.MinWorkTime">
							<ul role="menu" class="dropdown-menu" style="max-height: 270px; overflow-y:scroll; ">
								@foreach (var timeSpan in timeLengths)
								{
									<li class="ui-menu-item" role="presentation"><a href="#" class="ui-corner-all" data-bind="click: function (data, event) { ActivityMinimumTime('@timeSpan.Value'); }" tabindex="-1">@timeSpan.Text</a></li>
								}
							</ul>
							<span class="input-group-addon dropdown-toggle" data-toggle="dropdown" tabindex="-1">
								<span class="caret"></span>
							</span>
						</div>
					</td>
					<td>
						<div class="input-group">
							<input type="text" class="preference-activity-extended-work-time-max input-sm form-control" data-bind="value: ActivityMaximumTime" title="@Resources.MaxWorkTime">
							<ul role="menu" class="dropdown-menu" style="max-height: 270px; overflow-y:scroll; ">
								@foreach (var timeSpan in timeLengths)
								{
									<li class="ui-menu-item" role="presentation"><a href="#" class="ui-corner-all" data-bind="click: function (data, event) { ActivityMaximumTime('@timeSpan.Value'); }" tabindex="-1">@timeSpan.Text</a></li>
								}
							</ul>
							<span class="input-group-addon dropdown-toggle" data-toggle="dropdown" tabindex="-1">
								<span class="caret"></span>
							</span>
						</div>
					</td>
				</tr>
			</table>
		</td>
		<td class="col-xs-2"></td>
	</tr>
	<tr>
		<td colspan="100%">
			<div class="pull-right col-xs-3" style="padding-bottom: 4px">
				<button id="Preference-extended-reset" class="btn btn-default" data-bind="click: Reset">@Resources.Reset</button>
				<button id="Preference-extended-apply" class="btn btn-primary" data-bind="click: SavePreferences">@Resources.Apply</button>
			</div>
		</td>
	</tr>
</table>