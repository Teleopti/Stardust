@using System.Globalization
@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Core
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Portal
@using Teleopti.Ccc.Web.Areas.MyTime.Models.StudentAvailability
@using Teleopti.Interfaces.Domain
@model StudentAvailabilityViewModel
@{
	Layout = null;
}

<div class="navbar">
    <div class="navbar-inner">
        <form class="navbar-form pull-left">
            <div class="input-append input-prepend">
                <button class="btn" data-bind="click: previousPeriod"><i class="icon-arrow-left"></i></button>
                <input data-bind="value: displayDate" type="text" class="span3 text-center" readonly="readonly"/>
                <button class="btn" data-bind="datepicker: selectedDate, datepickerOptions: {autoHide: true}"><i class="icon-th"></i></button>
                <button class="btn" data-bind="click: nextPeriod"><i class="icon-arrow-right"></i></button>
            </div>
        </form>
        <ul class="nav">
            <li class="divider-vertical"></li>
            <li><a href="#" id="Availability-edit-button"><i class="icon-edit"></i>&nbsp;@Resources.Availability</a></li>
            <li><a href="#" id="Availability-delete-button"><i class="icon-remove"></i>&nbsp;@Resources.Remove</a></li>
        </ul>
    </div>
</div>
<div id="StudentAvailability-period" class="alert alert-info">
	@if (Model.StudentAvailabilityPeriod == null)
	{
		@String.Format("{0} : {1}", Resources.StudentAvailabilityPeriod, Resources.MissingWorkflowControlSet)
	}
	else
	{
		@String.Format("{0} : {1} | ", Resources.StudentAvailabilityPeriod, Model.StudentAvailabilityPeriod.Period)
		@String.Format("{0} : {1}", Resources.IsOpen, Model.StudentAvailabilityPeriod.OpenPeriod)
	}
</div>
<div id="StudentAvailability-body" class="body-calendarview clearfix" data-mytime-periodselection='@Html.Schedule().PeriodSelectionAsJson(Model.PeriodSelection)'>
    <style>
        @foreach (var style in Model.Styles)
        {
            @String.Format(".calendarview-week li.{0} div.day-content{{border-left-color: #{1}; border-right-color: #{1};}}\n", style.Name, style.ColorHex)
        }
        </style>
    <div id="StudentAvailability-body-inner" class="body-calendarview-inner clearfix">
        <ul class="weekdays">
            @foreach (var weekDayName in Model.WeekDayHeaders)
            {
                <li>@weekDayName.Title</li>
            }
        </ul>
        @foreach (var week in Model.Weeks)
        {
            <ul class="calendarview-week">
                <li>
                    <div>
                        <span>@week.Summary.MinWorkTime</span>
                        <span>@week.Summary.MaxWorkTime</span>
                    </div>
                </li>
                @foreach (var day in week.Days)
                {
                    <li data-mytime-editable="@day.Editable" data-mytime-date="@Html.Schedule().FormatDate(day.Date)" class="relative @(day.InPeriod ? "inperiod" : "non-editable")" data-bind="css: {editable: Editable, 'non-editable': !Editable()}">
                        <div>
                            <div class="day-header">
                                <span class="floatleft ml5">@day.Header.DayDescription</span><span class="floatright mr5">@day.Header.DayNumber</span>
                            </div>
                            <div class="day-content pdt10">
                                <img class="loading-small-gray-blue" data-bind="visible: IsLoading" src="@Url.Content("~/Areas/MyTime/Content/Images/ajax-loader-small-f8f8f8.gif")" alt="..." />
                                <!-- ko if: AjaxError().length > 0 -->
                                <h2 class="error" data-bind="text: AjaxError"></h2>
                                <!-- /ko -->
                                <div class="fullwidth mt15" data-bind="text: AvailableTimeSpan">
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
    </div>
</div>

				@{
					var times = from t in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0))
					            let value = Html.AttributeEncode(TimeHelper.TimeOfDayFromTimeSpan(t))
					            let text = TimeHelper.TimeOfDayFromTimeSpan(t)
					            select new Option
						            {
							            Value = value,
							            Text = text
						            };
					var timeLengths = from t in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0))
					                  let value = Html.AttributeEncode(TimeHelper.GetLongHourMinuteTimeString(t, CultureInfo.CurrentCulture))
					                  let text = TimeHelper.GetLongHourMinuteTimeString(t, CultureInfo.CurrentCulture)
					                  select new Option
						                  {
							                  Value = value,
							                  Text = text
						                  };
				}
<div id="Student-availability-edit-form" class="displaynone">
						<div>
							<div class="time-limitation-label icon leftarrow"></div>
						
							<select id="Student-availability-start-time" class="time-input" data-bind="combobox: StartTime" title="@Resources.StartTime">
								<option value="">&nbsp;</option>
								@foreach (var timeSpan in times)
								{
									<option value="@timeSpan.Value">@timeSpan.Text</option>
								}
							</select>
						</div>
						<div>
							<div class="time-limitation-label icon rightarrow"></div>
						
							<select id="Student-availability-end-time" class="time-input" data-bind="combobox: EndTime" title="@Resources.EndTime">
								<option value="">&nbsp;</option>
								@foreach (var timeSpan in times)
								{
									<option value="@timeSpan.Value">@timeSpan.Text</option>
								}
							</select>
							<input type="checkbox" id="Student-availability-end-time-next-day" class="student-availability-next-day-checkbox" data-bind="checked: NextDay" title="@Resources.NextDay" />
						</div>
						<div class="mt5">
							<button id="Student-availability-reset" class="btn" data-bind="click: reset">@Resources.Reset</button>
							<button id="Student-availability-apply" class="btn btn-primary" data-bind="click: Teleopti.MyTimeWeb.StudentAvailability.SetStudentAvailability">@Resources.Apply</button>
						</div>
						<div>
							<div id="Student-availability-apply-error" class="error floatleft" data-bind="html: ValidationError"></div>
							<div class="clearboth"></div>
						</div>
					</div>
