@using System.Web.Optimization
@using Teleopti.Ccc.Web.Areas.MyTime.Core
@using Teleopti.Ccc.Web.Core.Startup.InitializeApplication
@using Teleopti.Ccc.UserTexts

<!doctype html>
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]>    <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]>    <html @Html.LayoutBase().FullLangAttribute()@Html.LayoutBase().FullDirAttribute() class="no-js ie8"> <![endif]-->
<!--[if (gt IE 8)|!(IE)]><!-->
<html @Html.LayoutBase().FullLangAttribute() @Html.LayoutBase().FullDirAttribute() class="no-js ">
<!--<![endif]-->
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<title>@ViewBag.LayoutBase.Title</title>
	<meta name="description" content="" />
	<meta name="author" content="" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<link href="@Url.Content("~/favicon.ico")?v=2" rel="shortcut icon" type="image/x-icon" />

	@Styles.Render(BundleScripts.BootstrapCss)
	@Styles.Render(BundleScripts.Select2Css)
	@Styles.Render(BundleScripts.MyTimeCss)
	@Scripts.Render(BundleScripts.MyTimeJs)

	<script src="@Url.Content("~/Content/jquery-plugin/jquery.placeholder.js")"></script>
	<!--[if lt IE 9]>
		<script src="@Url.Content("~/Content/respondjs/respond.min.js")"></script>
	<![endif]-->
	@if (ViewBag.LayoutBase.FixedDate != null)
	{
		DateTime date = ViewBag.LayoutBase.FixedDate;
		<script type="text/javascript">
		$(function () {
			Date.prototype.getTeleoptiTime = function () { return new Date(@(date.Year), @(date.Month -1), @(date.Day), @(date.Hour), @(date.Minute), @(date.Second)).getTime(); };
			Date.prototype.getTeleoptiTimeInUserTimezone = Date.prototype.getTeleoptiTime;  // We don't touch scenario tests
		});
		</script>
	}
	else
	{
		<script type="text/javascript">
		$(function () {
			Date.prototype.getTeleoptiTime = function () { return new Date().getTime(); };
			Date.prototype.getTeleoptiTimeInUserTimezone = Teleopti.MyTimeWeb.Common.SetupTeleoptiTime(
				{
					UserTimezoneOffsetMinute:@(ViewBag.LayoutBase.UserTimezoneOffsetMinute),
					HasDayLightSaving: '@(ViewBag.LayoutBase.HasDayLightSaving)',
					DayLightSavingStart: '@(ViewBag.LayoutBase.DayLightSavingStart)',
					DayLightSavingEnd: '@(ViewBag.LayoutBase.DayLightSavingEnd)',
					DayLightSavingAdjustmentInMinute:@(ViewBag.LayoutBase.DayLightSavingAdjustmentInMinute)
				}
			);
		});
		</script>
	}

	<script>
		$(function() {
			Teleopti.MyTimeWeb.Common.SetUserTexts(
				{
					XRequests: '@Resources.XRequests',
					SubjectColon: '@Resources.SubjectColon',
					LocationColon: '@Resources.LocationColon',
					DescriptionColon: '@Resources.DescriptionColon',
					ChanceOfGettingAbsenceRequestGranted: '@Resources.ChanceOfGettingAbsenceRequestGranted',
					SeatBookings: '@Resources.SeatBookings',
					YouHaveNotBeenAllocatedSeat: '@Resources.YouHaveNotBeenAllocatedSeat',
					Fair: '@Resources.Fair',
					Poor: '@Resources.Poor',
					Good: '@Resources.Good',
					High: '@Resources.High',
					Low: '@Resources.Low',
					ProbabilityToGetAbsenceColon: '@Resources.ProbabilityToGetAbsenceColon',
					ProbabilityToGetOvertimeColon: '@Resources.ProbabilityToGetOvertimeColon',
					HideStaffingInfo: '@Resources.HideStaffingInfo',
					ShowAbsenceProbability: '@Resources.ShowAbsenceProbability',
					ShowOvertimeProbability: '@Resources.ShowOvertimeProbability',
					StaffingInfo: '@Resources.StaffingInfo',
					NoDateIsSelected: '@Resources.NoDateIsSelected'
				});
		})
	</script>
	
	@*<script type="text/javascript">
		var appInsights=window.appInsights||function(a){
			function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } }var c={config:a},d=document,e=window;setTimeout(function(){var b=d.createElement("script");b.src=a.url||"https://az416426.vo.msecnd.net/scripts/a/ai.0.js",d.getElementsByTagName("script")[0].parentNode.appendChild(b)});try{c.cookie = d.cookie}catch(a){}c.queue=[];for(var f=["Event","Exception","Metric","PageView","Trace","Dependency"];f.length;)b("track"+f.pop());if(b("setAuthenticatedUserContext"),b("clearAuthenticatedUserContext"),b("startTrackEvent"),b("stopTrackEvent"),b("startTrackPage"),b("stopTrackPage"),b("flush"),!a.disableExceptionTracking){f = "onerror",b("_"+f);var g=e[f];e[f]=function(a,b,d,e,h){var i=g&&g(a,b,d,e,h);return!0!==i&&c["_"+f](a,b,d,e,h),i}}return c
		}({
			instrumentationKey:"872cc046-26da-482d-a17b-9f077fa2ffb2"
		});

		window.appInsights=appInsights,appInsights.queue&&0===appInsights.queue.length&&appInsights.trackPageView();
	</script>*@

	@RenderSection("head", required: false)
</head>
<body ontouchstart="" @Html.LayoutBase().FullDirClass() @Html.LayoutBase().FullDirAttribute()>
	@RenderSection("header", required: false)
	@RenderBody()
	<footer class="col-1">

		<p>@ViewBag.LayoutBase.Footer</p>

	</footer>
	<div id="dialog-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">×</button>
					<h3 id="dialog-modal-header"></h3>
				</div>
				<div id="dialog-modal-body" class="modal-body">

				</div>
			</div>
		</div>
	</div>
	<div id="dialog">
	</div>
	<div id="modal-disable"></div>
	<span id="notifyLogger" style="display: none"></span>
</body>
</html>
