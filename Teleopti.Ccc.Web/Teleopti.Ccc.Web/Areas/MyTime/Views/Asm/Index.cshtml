@using Teleopti.Ccc.Web.Areas.MyTime.Models.Asm
@model AsmViewModel
@{
	const double pixelsPerHour = 50;
	const double timeLineHourWidth = (pixelsPerHour) - 1; //"1" due to border size
}
<style>
.asm-sliding-schedules{
	border: 1px solid rgba(0, 0, 0, 0.15);
	 position: relative;
			top: 20px;
	height: 40px;
	 }
.asm-current-info{
	 float:left;
	 width: 200px;
	margin-left: 10px;
	 }
.asm-schedule-canvas{
	 float:left;
		width: 700px;
		overflow: hidden;
		background: #F8F8F8;
		height: 70px;
		border: 1px solid rgba(0, 0, 0, 0.15);
	 }

.asm-outer-canvas{
		 width: 965px;
		background: white;
		padding:6px; 
		border: 1px solid rgba(0, 0, 0, 0.15);
		margin: 5px;
		height:72px;
}
.asm-layer{
	 position: absolute;
	opacity: 0.8;
	height: 30px;
	top: 5px;
}


	.asm-timeline-line
	{
		height: 70px;
		float: left;
		border-right:1px solid rgba(0, 0, 0, 0.15);
	}

	.asm-timeline-number
	{
		padding: 1px;
		padding-left: 4px;
		padding-right: 5px;
		position: relative;
		border: 1px solid rgba(0, 0, 0, 0.15);
		background: white;
		top: -20px;
		left: -25px;
		font-family: verdana;
		font-size: 8px;
	}

	.asm-info-canvas {
		overflow: hidden;
		background: #F8F8F8;
		height: 70px;
		border: 1px solid rgba(0, 0, 0, 0.15);
	}
	
	.asm-time-marker {
		background-color: rgba(0,0,0,0.15); 
		width:150px;
		height: 72px;
		float:left; 
		position:relative; 
		z-index: 1;
		border-right: 1px solid black;
	}
	
	.asm-info-canvas span 
	{
		float: left;
		position: relative;
		overflow: hidden;
		white-space: nowrap;
		margin-right: 1em;
	}
	
	.asm-info-canvas div 
	{
		margin-right: 1em;
		text-align: left;
		font-family: verdana;
		font-size: 10px;
	}
	
</style>
<script>
	var refreshMilliSeconds = 100;

	$(function() {
	   var slidingSchedules = $('.asm-sliding-schedules');
		var serverMsSince1970 = new Date(@(Model.StartDate.Year), @(Model.StartDate.Month - 1), @(Model.StartDate.Day)).getTime();
		

		slidingSchedules.hide();
		_moveTimeLineToNow(slidingSchedules, serverMsSince1970);
		slidingSchedules.show();
		setInterval(function() {
			 _moveTimeLineToNow(slidingSchedules, serverMsSince1970);
			_updateInfoCanvas();
		}, refreshMilliSeconds);
	});
	
	function _updateInfoCanvas() {
		$('#asm-debug').text(new Date().getTeleoptiTime());
	}

	function _moveTimeLineToNow(slidingSchedules, serverMsSince1970) {
		var clientMsSince1970 = new Date().getTeleoptiTime();
		var msSinceStart = clientMsSince1970 - serverMsSince1970;
		
		var hoursSinceStart = msSinceStart / 1000 / 60/60;
		var startPixel = -(@pixelsPerHour * hoursSinceStart);
		slidingSchedules.css('left', (startPixel) + 'px');
	}
</script>

<div class="asm-outer-canvas ui-corner-all">
	<div class="asm-schedule-canvas ui-corner-all">
		<div class="asm-time-marker"></div>
		<div class="asm-sliding-schedules" style="width:@(3 * 24 * pixelsPerHour)px;">
			@foreach (var layer in Model.Layers)
			{
				<span class="asm-layer ui-corner-all" style="
																							left:@(layer.RelativeStartInMinutes * pixelsPerHour / 60)px;
																							padding-left:@(layer.LengthInMinutes * pixelsPerHour / 60)px;
																							background-color: @(layer.Color)">
				</span>
			}
			@for (var day = 0; day <= 2; day++)
			{
				for (var hour = 0; hour < 24; hour++)
				{
					<span class="asm-timeline-line" style="width:@(timeLineHourWidth)px;">
						<span class="asm-timeline-number ui-corner-all">@(hour)</span>
					</span>
				}
			}
		</div>
	</div>
	<div class="asm-current-info">
		<div class="asm-info-canvas ui-corner-all">
			<span style="width: 50px;">
				<div>xxDebug</div>
				<div>xxCurrent </div>
				<div>xxNext</div>
			</span>

			<span style="width: 50px;">
				<div id="asm-info-debug" >dsf</div>
				<div id="asm-info-current-activity" >PhonePhonePhone</div>
				<div id="asm-info-next-activity">Back office</div>			
			</span>
			<span style="width: 50px;">
				<div/>
				<div>12:00</div>
				<div>14:30</div>
			</span>
		</div>
		</div>
	  <div class="clearboth" />
</div>
