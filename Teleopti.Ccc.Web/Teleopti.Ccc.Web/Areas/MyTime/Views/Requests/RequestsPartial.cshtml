@using System.Globalization
@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Requests
@using Teleopti.Interfaces.Domain
@model RequestsViewModel
@{
	Layout = null;
}
<script>
    $(function () {
        Teleopti.MyTimeWeb.Request.RequestDetail.PrepareForViewModel(
            {
                defaultStartTime: '@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(8, 0, 0))',
                defaultEndTime: '@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(17, 0, 0))',
                defaultFulldayStartTime: '@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(0, 0, 0))',
                defaultFulldayEndTime: '@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(23, 59, 0))',
                todayYear: '@CultureInfo.CurrentCulture.Calendar.GetYear(DateTime.Today)',
                todayMonth: '@CultureInfo.CurrentCulture.Calendar.GetMonth(DateTime.Today)',
                todayDay: '@CultureInfo.CurrentCulture.Calendar.GetDayOfMonth(DateTime.Today)'
            }
        );
    });
</script>
<script type="text/html" id="request-detail-not-set">
	<div></div>
</script>

<script type="text/html" id="text-request-detail-template">  
	@Html.Partial("TextRequestDetailView")
</script>

<script type="text/html" id="shifttrade-request-detail-template">  
	@Html.Partial("ShiftTradeRequestDetailView")
</script>

<script type="text/html" id="absence-request-detail-template">  
	@Html.Partial("AbsenceRequestDetailView")
</script>

<script type="text/html" id="add-new-request-detail-template">  
	@Html.Partial("AddNewRequestDetailView")
</script>

<input id="Request-detail-datepicker-format" type="hidden" value="@Model.DatePickerFormat"/>

<div class="navbar navbar-default">
    <ul class="nav navbar-nav list-inline">
        @if (Model.RequestPermission.TextRequestPermission)
        {
            <li data-bind="css: { active: addTextRequestActive }">
                <a href="#" class="text-request-add" data-bind="click: addTextRequest"><i class="glyphicon glyphicon-plus"></i>&nbsp;@Resources.TextRequest</a>
            </li>
        }
        @if (Model.RequestPermission.AbsenceRequestPermission)
        {
            <li data-bind="css: { active: addAbsenceRequestActive }">
                <a href="#" class="absence-request-add" data-bind="click: addAbsenceRequest"><i class="glyphicon glyphicon-plus"></i>&nbsp;@Resources.AbsenceRequest</a>
            </li>
        }
        @if (Model.RequestPermission.ShiftTradeRequestPermission)
        {
            <li data-bind="css: { active: addShiftTradeRequestActive }">
                <a href="#" class="shifttrade-request-add" data-bind="click: addShiftTradeRequest"><i class="glyphicon glyphicon-plus"></i>&nbsp;@Resources.ShiftTradeRequest</a>
            </li>
        }
    </ul>
</div>
<div id="Requests-body-inner" class="request-body-inner relative">
	@Html.Partial("NewShiftTradeRequest")
    <div>
        <div id="Request-add-data-binding-area" data-bind="with: requestViewModel">
            <div id="Request-add-section" class="well well-small clearfix">
                <div data-bind="template: Template">
                </div>
            </div>
        </div>
    </div>
    <div id="Requests-data-binding-area" >
        <div class="alert alert-block" data-bind="visible: Requests().length == 0 && !isLoadingRequests(), hideWhenFadedOut: true" id="Requests-no-requests-found">
            @Resources.NoRequestsFound
        </div>
        
        <div data-bind="visible: isLoadingRequests">	   
            <div class="loading-gradient">
                <div class="loading"></div>
            </div>
        </div>
		
        <div class="request-list" data-bind="foreach: ColumnRequests">
            <div class="row" data-bind="foreach: Items">
                <div class="request col-md-6">
                    <div class="well well-small">
                        <div class="request-body" data-bind="click: ShowDetails" style="cursor: pointer">
                            <div data-bind="if: CanDelete">
                                <button class="request-delete close" data-bind="click: $root.Delete,clickBubble: false" title="@Resources.Delete">&times;</button>
                            </div>
                            <div class="request-subject">
                                <h5 class="request-data-subject" data-bind="html: Subject"></h5>
                            </div>
                            <div class="request-details" >
                                <div>
                                    <span class="request-caption">@Resources.Type: </span><span data-bind="text: Type" class="request-data-type"></span>
                                    <span class="request-caption">@Resources.Status: </span><span class="request-caption" data-bind="visible: isProcessing"> (@Resources.ProcessingDotDotDot) </span><span class="label" data-bind="text: Status, css: StatusClass"></span>
                       
                                </div>
                                <span class="request-caption">@Resources.Date: </span><span class="request-data-date" data-bind="text: Dates"></span>
                                <span class="request-caption">@Resources.UpdatedOn: </span><span data-bind="text: UpdatedOn" ></span>
                            </div>
                            <div class="request-data-message request-text" data-bind="text: (IsSelected() && !IsEditable()) ? Text : ListText">
                            </div>
                        </div>
                        <div class="request-edit" data-bind="visible: IsSelected, with: DetailItem">
                            <hr />
                            <div data-bind="template : Template">
                            </div>
                        </div>
                    </div>    
                </div>
            </div>
        </div>

        <div class="loading-gradient" style="display: none">
            <div class="loading">
            </div>
        </div>
	    
        <div class="arrow-down displaynone" data-bind="fadeInIf: MoreToLoad, hideWhenFadedOut: true">
        </div>
        <div class="clearboth">
        </div>
    </div>		
</div>
