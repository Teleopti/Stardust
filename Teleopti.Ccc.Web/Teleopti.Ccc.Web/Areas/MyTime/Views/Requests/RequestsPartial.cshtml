@using System.Globalization
@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Requests
@using Teleopti.Interfaces.Domain
@model RequestsViewModel
@{
	Layout = null;
}
<script type="text/Html" id="request-detail-not-set">
	<div></div>
</script>

<script type="text/Html" id="shifttrade-request-detail-template">  
	@Html.Partial("ShiftTradeRequestDetailView")
</script>

<script type="text/Html" id="text-request-detail-template">
	<div class="pdb5 request-detail-title">@Resources.TextRequest</div>
			<input type="hidden" id="Request-detail-entityid" />

		<div class="edit-module-element">
			<span id="Request-detail-deny-reason"></span>
		</div>
		<div class="edit-module-element">
			<label class="displayblock" for="Request-detail-subject-input">@Resources.Subject</label>
			<input id="Request-detail-subject-input" class="request-subject-input" type="text" />
		</div>
		<div class="edit-module-element">
			<label class="displayblock" for="Request-detail-message-input">@Resources.Message</label>
			<textarea id="Request-detail-message-input" class="request-message-input" />
		</div>
		<div id="Absence-type-element" class="floatleft displaynone">
			<div class="edit-module-element floatleft">
				<div class="floatleft absence-type-input-label">@Resources.AbsenceType</div>
			</div>
			<div class="edit-module-element floatleft">
				<select id="Absence-type" class="absence-input combobox">
					@foreach (var absenceType in Model.AbsenceTypes)
					{
						<option value="@Html.AttributeEncode(absenceType.Name)" typeid="@Html.AttributeEncode(absenceType.Id)">@absenceType.Name</option>
					}
				</select>
			</div>
		</div>
	<div class="floatleft">
		<span class="edit-module-element floatleft input-append">
			<input id="Request-detail-fromDate-input" data-bind="datepicker: DateFrom, datepickerOptions: {autoHide: true}" type="text" />
			<span class="add-on"><i class="icon-th"></i></span>
		</span>
		<span id="Request-detail-fromTime" class="edit-module-element floatleft">
			<label class="displayblock" for="Request-detail-fromTime-input-input">@Resources.Time</label>
			<select id="Request-detail-fromTime-input" class="time-input combobox">
				@foreach (var timeSpan in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0)))
				{
					<option @(timeSpan.Hours == 8 && timeSpan.Minutes == 0 ? "selected" : "") value="@Html.AttributeEncode(@TimeHelper.TimeOfDayFromTimeSpan(timeSpan))">@TimeHelper.TimeOfDayFromTimeSpan(timeSpan)</option>
				}
			</select>
		</span>
	</div>
	<div>
		<span class="edit-module-element clearleftfloat floatleft input-append">
			<input id="Request-detail-toDate-input" data-bind="datepicker: DateTo, datepickerOptions: {autoHide: true}" type="text"  />
			<span class="add-on"><i class="icon-th"></i></span>
		</span>
		<span id="Request-detail-toTime" class="edit-module-element floatleft">
			<label class="displayblock" for="Request-detail-toTime-input-input">@Resources.Time</label>
			<select id="Request-detail-toTime-input" class="time-input combobox">
				@foreach (var timeSpan in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0)))
				{
					<option @(timeSpan.Hours == 17 && timeSpan.Minutes == 0 ? "selected" : "") value="@Html.AttributeEncode(@TimeHelper.TimeOfDayFromTimeSpan(timeSpan))">@TimeHelper.TimeOfDayFromTimeSpan(timeSpan)</option>
				}
			</select>
		</span>
		</div>
		<span class="edit-module-element clearleftfloat floatleft">
			<input type="checkbox" id="Fullday-check" data-bind="checked: IsFullDay" />
		</span>
		<label class="floatleft" for="Fullday-check">
			@Resources.FullDay
		</label>
		<button id="Request-detail-ok-button" class="btn btn-primary pull-right" update-value="@Html.AttributeEncode(Resources.Update)" new-value="@Html.AttributeEncode(Resources.SubmitRequest)" />
		<div id="Request-detail-error" class="error edit-module-element floatleft clearleftfloat">
		</div>
</script>

<script type="text/Html" id="absence-request-detail-template">
	<div class="pdb5 request-detail-title">@Resources.AbsenceRequest</div>
			<input type="hidden" id="Request-detail-entityid" />

		<div class="edit-module-element">
			<span id="Request-detail-deny-reason"></span>
		</div>
		<div class="edit-module-element">
			<label class="displayblock" for="Request-detail-subject-input">@Resources.Subject</label>
			<input id="Request-detail-subject-input" type="text" class="request-subject-input" />
		</div>
		<div class="edit-module-element">
			<label class="displayblock" for="Request-detail-message-input">@Resources.Message</label>
			<textarea id="Request-detail-message-input" class="request-message-input" />
		</div>
		<div id="Absence-type-element" class="floatleft displaynone">
			<div class="edit-module-element floatleft">
				<div class="floatleft absence-type-input-label">@Resources.AbsenceType</div>
			</div>
			<div class="edit-module-element floatleft">
				<select id="Absence-type" class="absence-input combobox">
					@foreach (var absenceType in Model.AbsenceTypes)
					{
						<option value="@Html.AttributeEncode(absenceType.Name)" typeid="@Html.AttributeEncode(absenceType.Id)">@absenceType.Name</option>
					}
				</select>
			</div>
		</div>
	<div class="floatleft">
		<span class="edit-module-element floatleft input-append">
			<input id="Request-detail-fromDate-input" data-bind="datepicker: DateFrom, datepickerOptions: {autoHide: true}" type="text" />
			<span class="add-on"><i class="icon-th"></i></span>
		</span>
		<span id="Request-detail-fromTime" class="edit-module-element floatleft">
			<label class="displayblock" for="Request-detail-fromTime-input-input">@Resources.Time</label>
			<select id="Request-detail-fromTime-input" class="time-input combobox">
				@foreach (var timeSpan in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0)))
				{
					<option @(timeSpan.Hours == 8 && timeSpan.Minutes == 0 ? "selected" : "") value="@Html.AttributeEncode(@TimeHelper.TimeOfDayFromTimeSpan(timeSpan))">@TimeHelper.TimeOfDayFromTimeSpan(timeSpan)</option>
				}
			</select>
		</span>
	</div>
	<div>
		<span class="edit-module-element clearleftfloat floatleft input-append">
			<input id="Request-detail-toDate-input" data-bind="datepicker: DateTo, datepickerOptions: {autoHide: true}" type="text"  />
			<span class="add-on"><i class="icon-th"></i></span>
		</span>
		<span id="Request-detail-toTime" class="edit-module-element floatleft">
			<label class="displayblock" for="Request-detail-toTime-input-input">@Resources.Time</label>
			<select id="Request-detail-toTime-input" class="time-input combobox">
				@foreach (var timeSpan in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0)))
				{
					<option @(timeSpan.Hours == 17 && timeSpan.Minutes == 0 ? "selected" : "") value="@Html.AttributeEncode(@TimeHelper.TimeOfDayFromTimeSpan(timeSpan))">@TimeHelper.TimeOfDayFromTimeSpan(timeSpan)</option>
				}
			</select>
		</span>
		</div>
		<span class="edit-module-element clearleftfloat floatleft">
			<input type="checkbox" id="Fullday-check" data-bind="checked: IsFullDay" />
		</span>
		<label class="floatleft" for="Fullday-check">
			@Resources.FullDay
		</label>
		<button id="Request-detail-ok-button" class="btn btn-primary pull-right" update-value="@Html.AttributeEncode(Resources.Update)" new-value="@Html.AttributeEncode(Resources.SubmitRequest)"/>
		<div id="Request-detail-error" class="error edit-module-element floatleft clearleftfloat">
		</div>
</script>

<script type="text/Html" id="add-new-request-detail-template">
	<input id="Request-detail-today-year" type="hidden" value="@CultureInfo.CurrentCulture.Calendar.GetYear(DateTime.Today)"/>
	<input id="Request-detail-today-month" type="hidden" value="@CultureInfo.CurrentCulture.Calendar.GetMonth(DateTime.Today)"/>
	<input id="Request-detail-today-day" type="hidden" value="@CultureInfo.CurrentCulture.Calendar.GetDayOfMonth(DateTime.Today)"/>
	<div id="Schedule-addRequest-title" class="pdb5 request-detail-title">
		<span id="Text-request-tab" data-bind="visible: TextRequestHeaderVisible">@Resources.TextRequest</span>
		<span id="Absence-request-tab" data-bind="visible: AbsenceRequestHeaderVisible">@Resources.AbsenceRequest</span>
	</div>
	<input type="hidden" id="Request-detail-entityid" />
	<div>
		<span id="Request-detail-deny-reason"></span>
	</div>
	<div>
		<input id="Request-detail-subject-input" type="text" class="request-subject-input input-block-level" placeholder="@Resources.Subject" />
	</div>
	<div>
		<textarea id="Request-detail-message-input" class="request-message-input input-block-level" placeholder="@Resources.Message" />
	</div>
	<div id="Absence-type-element" class="pull-left" data-bind="visible: AbsenceRequestHeaderVisible">
		<div>
			<div class="floatleft absence-type-input-label">@Resources.AbsenceType</div>
		</div>
		<div>
			<select id="Absence-type" class="absence-input combobox">
				@foreach (var absenceType in Model.AbsenceTypes)
				{
					<option value="@Html.AttributeEncode(absenceType.Name)" typeid="@Html.AttributeEncode(absenceType.Id)">@absenceType.Name</option>
				}
			</select>
		</div>
	</div>
	<div class="floatleft">
		<span class="input-append">
			<input id="Request-detail-fromDate-input" data-bind="datepicker: DateFrom, datepickerOptions: {autoHide: true}" type="text" />
			<span class="add-on"><i class="icon-th"></i></span>
		</span>
		<span id="Request-detail-fromTime">
			<label class="displayblock" for="Request-detail-fromTime-input-input">@Resources.Time</label>
			<select id="Request-detail-fromTime-input" class="time-input combobox">
				@foreach (var timeSpan in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0)))
				{
					<option @(timeSpan.Hours == 8 && timeSpan.Minutes == 0 ? "selected" : "") value="@Html.AttributeEncode(@TimeHelper.TimeOfDayFromTimeSpan(timeSpan))">@TimeHelper.TimeOfDayFromTimeSpan(timeSpan)</option>
				}
			</select>
		</span>
        <div class="input-append bootstrap-timepicker">
            <input id="timepickerFrom" type="text" class="input-small" data-bind="timepicker: TimeFrom, timepickerOptions: {showMeridian: ShowMeridian}, enable: IsTimeInputEnabled" />
            <span class="add-on"><i class="icon-time" data-bind="enable: false"></i></span>
        </div>
	</div>
	<div>
		<span class="input-append">
			<input id="Request-detail-toDate-input" data-bind="datepicker: DateTo, datepickerOptions: {autoHide: true}" type="text"  />
			<span class="add-on"><i class="icon-th"></i></span>
		</span>
		<span id="Request-detail-toTime">
			<label class="displayblock" for="Request-detail-toTime-input-input">@Resources.Time</label>
			<select id="Request-detail-toTime-input" class="time-input combobox">
				@foreach (var timeSpan in Enumerable.Range(0, 48).Select(x => new TimeSpan(0, x * 30, 0)))
				{
					<option @(timeSpan.Hours == 17 && timeSpan.Minutes == 0 ? "selected" : "") value="@Html.AttributeEncode(@TimeHelper.TimeOfDayFromTimeSpan(timeSpan))">@TimeHelper.TimeOfDayFromTimeSpan(timeSpan)</option>
				}
			</select>
		</span>
        <div class="input-append bootstrap-timepicker">
            <input id="timepickerTo" type="text" class="input-small" data-bind="timepicker: TimeTo, timepickerOptions: {showMeridian: ShowMeridian}, enable: IsTimeInputEnabled" />
            <span class="add-on"><i class="icon-time"></i></span>
        </div>
	</div>
	<span>
		<input type="checkbox" id="Fullday-check" data-bind="checked: IsFullDay" />
	</span>
	<label for="Fullday-check">
		@Resources.FullDay
	</label>
	<button id="Request-detail-ok-button" class="btn btn-primary pull-right" update-value="@Html.AttributeEncode(Resources.Update)" new-value="@Html.AttributeEncode(Resources.SubmitRequest)"/>
	<div id="Request-detail-error" class="alert alert-danger span6">
	</div>
</script>

<div class="displaynone" id="Request-detail-default-start-time">@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(8, 0, 0))</div>
<div class="displaynone" id="Request-detail-default-end-time" >@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(17, 0, 0))</div>
<div class="displaynone" id="Request-detail-default-fullday-start-time">@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(0, 0, 0))</div>
<div class="displaynone" id="Request-detail-default-fullday-end-time" >@TimeHelper.TimeOfDayFromTimeSpan(new TimeSpan(23, 59, 0))</div>



<div class="navbar">
	<div class="navbar-inner">
		<ul class="nav">
            @if (Model.RequestPermission.TextRequestPermission)
            {
                <li><a href="#" data-bind="click: Teleopti.MyTimeWeb.Request.RequestDetail.AddTextRequestClick"><i class="icon-plus"></i>&nbsp;@Resources.TextRequest</a></li>
            } 
            @if (Model.RequestPermission.AbsenceRequestPermission)
            {
                <li><a href="#" data-bind="click: Teleopti.MyTimeWeb.Request.RequestDetail.AddAbsenceRequestClick"><i class="icon-plus"></i>&nbsp;@Resources.AbsenceRequest</a></li>
            }
            @if (Model.RequestPermission.ShiftTradeRequestPermission)
            {
                <li><a href="#" data-bind="click: Teleopti.MyTimeWeb.Request.AddShiftTradeRequest.OpenAddShiftTradeWindow"><i class="icon-plus"></i>&nbsp;@Resources.ShiftTradeRequest</a></li>
            }
		</ul>
	</div>
</div>
<div id="Requests-body-inner" class="request-body-inner relative">
	@Html.Partial("NewShiftTradeRequest")
    <div id="Request-detail-section" class="well well-small displaynone" data-bind=" css: { 'request-selected': IsUpdate() == true , 'request-not-selected': IsUpdate() == false}">
		<div data-bind="template : Template">
		</div>
	</div>
    <div id="Requests-data-binding-area" >
        <div class="alert alert-block" data-bind="visible: Requests().length == 0 && !isLoadingRequests(), hideWhenFadedOut: true" id="Requests-no-requests-found">
            @Resources.NoRequestsFound
        </div>
        
        <div data-bind="visible: isLoadingRequests">	   
            <div class="loading-gradient">
                <div class="loading"></div>
            </div>
        </div>
		
        <div data-bind="foreach: ColumnRequests">
            <div class="row" data-bind="foreach: Items">
                <div class="span6">
                    <div class="well well-small">
                        <div>
                            <button class="close" data-bind="click: $root.Delete,clickBubble: false, visible: CanDelete" title="@Resources.Delete">&times;</button>
                        </div>
                        <div class="request-subject">
                            <h3 class="request-data-subject" data-bind="html: Subject"></h3>
                        </div>
                        <div class="request-details" >
                            <div>
                                <span class="request-caption">@Resources.Type: </span><span data-bind="text: Type" class="request-data-type"></span>
                                <span class="request-caption">@Resources.Status: </span><span class="label" data-bind="text: Status, css: StatusClass"></span>
                            </div>
                            <span class="request-caption">@Resources.Date: </span><span class="request-data-date" data-bind="text: Dates"></span>
                            <span class="request-caption">@Resources.UpdatedOn: </span><span data-bind="text: UpdatedOn" ></span>
                        </div>
                        <div class="request-text" data-bind="text: Text">
                        </div>
                    </div>    
                </div>
            </div>
        </div>

        <div class="loading-gradient" style="display: none">
            <div class="loading">
            </div>
        </div>
	    
        <div class="arrow-down displaynone" data-bind="fadeInIf: MoreToLoad, hideWhenFadedOut: true">
        </div>
        <div class="clearboth">
        </div>
        
        @*<div id="request-list" data-bind="foreach: Requests" class="request-list">
		
			<!-- Shows the requestviewmodel -->
			<div class="well well-small relative" data-bind="click: $parent.SelectItem, event: { mouseover: ToggleMouseOver, mouseout: ToggleMouseOver }, increaseWidthIf: IsMouseOver,  css: { 'request-selected': IsSelected() == true , 'request-not-selected': IsSelected() == false}, attr:{'data-mytime-requestid' : Id}">
				<div class="request-arrow-right" data-bind="fadeInIf: IsMouseOver">
					<img src="@Url.Content("~/Areas/MyTime/Content/Images/arrow-right.png")"/>
				</div>
		
				<div>
					<button class="close" data-bind="click: $parent.Delete,clickBubble: false, visible: CanDelete" title="@Resources.Delete">&times;</button>
				</div>
				<div class="request-subject">
					<h3 class="request-data-subject" data-bind="html: Subject">
					</h3>
				</div>

				<div class="request-details" >
					<div>
						<span class="request-caption">@Resources.Type: </span><span data-bind="text: Type" class="request-data-type"></span>
						<span class="request-caption">@Resources.Status: </span><span class="label" data-bind="text: Status, css: StatusClass"></span>
					</div>
					<span class="request-caption">@Resources.Date: </span><span class="request-data-date" data-bind="text: Dates"></span>
					<span class="request-caption">@Resources.UpdatedOn: </span><span data-bind="text: UpdatedOn" ></span>
				</div>

				<div class="request-text" data-bind="text: Text">
				</div>
			
			</div>
		</div>

		<div id="Request-detail-section" class="displaynone request-edit-section ui-corner-all" data-bind=" css: { 'request-selected': IsUpdate() == true , 'request-not-selected': IsUpdate() == false}">
			<div data-bind="template : Template">
			</div>
		</div>

		<div class="loading-gradient" style="display: none">
			<div class="loading">
			</div>
		</div>
		<div class="arrow-down displaynone" data-bind="fadeInIf: MoreToLoad, hideWhenFadedOut: true">
		</div>
		<div class="clearboth">
		</div>*@
    </div>		
</div>
