@using Teleopti.Ccc.UserTexts
@{
	Layout = null;
}

<div class="overtime-add-container clearfix">
	<div class="overtime-add-body">
		<div class="posting-mask" data-bind="visible: IsPostingData">
			<img src="@Url.Content("~/Areas/MyTime/Content/Images/ajax-loader.gif")" alt="Saving..." />
		</div>
		<div class="form-group">
			<input type="text" class="request-new-subject form-control" placeholder="@Resources.Subject" data-bind="value: Subject, enable: IsEditable" maxlength="80"/>
		</div>
		<div class="form-group">
			<textarea class="request-new-message form-control" placeholder="@Resources.Message" data-bind="value: Message, valueUpdate: 'afterkeydown', event:{change:checkMessageLength}, enable: IsEditable" />
		</div>

		<div class="row form-group">
			<div class="col-xs-4 col-sm-4 col-md-4 overtime-request-type">
				<label>
					@Resources.OvertimeType
				</label>
				<select class="input-sm form-control" data-bind="value: MultiplicatorDefinitionSetId, enable: IsEditable">
					@foreach (var overtimeType in Model.OvertimeTypes)
					{
						<option value="@Html.AttributeEncode(overtimeType.Id)">@overtimeType.Name</option>
					}
				</select>
			</div>
		</div>

		<div class="row form-group">
			<div class="col-xs-4 col-sm-4 col-md-4 overtime-request-date">
				<label>
					@Resources.Date
				</label>
				<span class="input-group">
					<input class="input-sm form-control" data-bind="datepicker: DateFrom, datepickerOptions: { autoHide: true, format: DateFormat(), weekStart: weekStart(), startDate: Today() }, enable: IsEditable && !IsMobile" type="text" />
					<span class="input-group-btn">
						<button class="btn btn-sm" data-bind="datepicker: DateFrom, datepickerOptions: { autoHide: true, format: DateFormat(), weekStart: weekStart(), startDate: Today() }, enable: IsEditable">
							<i class="glyphicon glyphicon-calendar"></i>
						</button>
					</span>
				</span>
			</div>
			<div class="col-xs-4 col-sm-4 col-md-4 overtime-request-starttime">
				<label>
					@Resources.StartTime
				</label>
				<div class="bootstrap-timepicker">
					<div class="input-group">
						<input type="text" id="request-start-time" class="input-sm form-control" data-bind="timepicker: StartTime, timepickerOptions: { showMeridian: ShowMeridian, minuteStep: 1}, enable: IsEditable, scrollIntoViewWhenClick:'#Request-add-section'" />
						<span class="input-group-btn">
							<button class="btn btn-sm right-align" data-bind="timepicker: StartTime, timepickerOptions: { showMeridian: ShowMeridian, modalBackdrop: true}, enable: IsEditable">
								<i class="glyphicon glyphicon-time"></i>
							</button>
						</span>
					</div>
				</div>
			</div>

			<div class="col-xs-4 col-sm-4 col-md-4 overtime-request-duration">
				<label>
					@Resources.Duration
				</label>
				<div class="input-group">
					<input type="text" class="input-sm form-control" data-bind="value: RequestDuration, event:{change:validateDuration}, enable: IsEditable, scrollIntoViewWhenClick:'#Request-add-section'" maxlength="5">
					<ul role="menu" class="dropdown-menu">
						<!-- ko foreach: TimeList-->
						<li class="ui-menu-item" role="presentation">
							<a href="#" class="ui-corner-all" data-bind="click: function (data, event) { $parent.RequestDuration(data); }, text: $data" tabindex="-1"></a>
						</li>
						<!-- /ko-->
					</ul>
					<span class="input-group-addon input-sm dropdown-toggle" data-bind="enable: IsEditable" tabindex="-1" data-toggle="dropdown">
						<span class="caret"></span>
					</span>
				</div>
			</div>
		</div>

		<div class="request-new-error alert alert-danger" data-bind="visible: ShowError, html: ErrorMessage" />
	</div>
	<div class="pull-right">
		<button class="request-new-cancel btn" data-bind="click: CancelAddRequest, visible: ShowCancelButton">@Resources.Cancel</button>
		<button class="request-new-send btn btn-primary" data-bind="click: AddRequest, visible: IsEditable">@Resources.Save</button>
	</div>
</div>