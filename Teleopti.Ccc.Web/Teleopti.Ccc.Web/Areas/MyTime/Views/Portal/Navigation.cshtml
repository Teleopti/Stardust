@using System.Web.Mvc.Html
@using Teleopti.Ccc.UserTexts;
@using Teleopti.Interfaces.Domain;
@using Teleopti.Ccc.Domain.InterfaceLegacy.Domain
@using Teleopti.Ccc.Web.Areas.MyTime.Core
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Portal

@model PortalViewModel

<script>
	function hideNavMenu() {
		if ($("#bs-example-navbar-collapse-1").is(':visible')) {
			$('#mainNavbarToggler').click();
		}
	}

	$(function() {
		var dateTimeDefaultValues = {
			defaultStartTime: "@Model.DateTimeDefaultValues.StartTime",
			defaultEndTime: "@Model.DateTimeDefaultValues.EndTime",
			defaultFulldayStartTime: "@Model.DateTimeDefaultValues.FullDayStartTime",
			defaultFulldayEndTime: "@Model.DateTimeDefaultValues.FullDayEndTime",
			todayYear: "@Model.DateTimeDefaultValues.TodayYear",
			todayMonth: "@Model.DateTimeDefaultValues.TodayMonth",
			todayDay: "@Model.DateTimeDefaultValues.TodayDay"
		};

		Teleopti.MyTimeWeb.Common.SetupCalendar(
		{
			UseJalaaliCalendar: @Model.UseJalaaliCalendar.ToString().ToLowerInvariant(),
			DateFormat: "@Model.DateFormat",
			TimeFormat: "@Model.TimeFormat",
			AMDesignator: "@Model.AMDesignator",
			PMDesignator: "@Model.PMDesignator",
			DateTimeDefaultValues: dateTimeDefaultValues
		});
	});

	var requestsMessagesUserTexts = {
		CURRENT_REQUESTS: "@Html.Raw(@Resources.CurrentRequests)",
		ALL_REQUESTS: "	@Html.Raw(@Resources.AllRequests)",
		BY_STARTDATE: "@Html.Raw(@Resources.SortByStartDate)",
		BY_UPDATEDATE: "@Html.Raw(@Resources.SortByUpdateDate)",
		MissingSubject: "@Html.Raw(@Resources.MissingSubject)",
		MissingStartTime: "@Html.Raw(@Resources.MissingStartTime)",
		MissingDuration: "@Html.Raw(@Resources.MissingDuration)",
		REQUESTDATE_EXCEEDS_14DAYS: "@Html.Raw(@Resources.RequestDateExceeds14Days)"
	};

</script>

<div id="autocollapse" class="navbar navbar-default navbar-inverse bdd-mytime-top-menu">
	<div id="innerNavBar" class="container">
		<div class="hidden" data-culture-show-meridian="@Model.ShowMeridian.ToString().ToLowerInvariant()"></div>

		<div class="navbar-header pull-left">
			<button id="mainNavbarToggler" type="button" class="navbar-toggle" data-toggle="offcanvas" data-target=".navbar-offcanvas">
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</button>

			<a class="navbar-brand" href="@string.Format("#{0}Tab", Model.NavigationItems.FirstOrDefault().Controller)">Teleopti</a>
		</div>

		<!-- Non Collapsing Right Menu-->
		<div class="navbar-header pull-right navbar-right">
			<ul class="nav navbar-nav pull-left navbar-user-setting">
				@if (Model.ShowBadge)
				{
					<li id="BadgePanel" class="dropdown pull-left">
						<a href="#" class="dropdown-toggle" data-toggle="dropdown">
							<div>
								<span class="gold-badge">
									<i class="glyphicon glyphicon-star" style="color: gold"></i>
									@Model.Badges.Sum(x => x.GoldBadge)
								</span>
								<span class="silver-badge">
									<i class="glyphicon glyphicon-star" style="color: silver"></i>
									@Model.Badges.Sum(x => x.SilverBadge)
								</span>
								<span class="bronze-badge">
									<i class="glyphicon glyphicon-star" style="color: brown"></i>
									@Model.Badges.Sum(x => x.BronzeBadge)
								</span>
							</div>
						</a>
						@if (Model.Badges != null && Model.Badges.Any())
						{
							<ul class="dropdown-menu show-outside-toolbar">
								@foreach (var badge in Model.Badges)
								{
									<li>
										<div class="badge-detail">
											@{
												var badgeTypeName = string.Empty;
												switch (badge.BadgeType)
												{
													case BadgeType.AnsweredCalls:
														badgeTypeName = Resources.AnsweredCalls;
														break;
													case BadgeType.AverageHandlingTime:
														badgeTypeName = Resources.AverageHandlingTime;
														break;
													case BadgeType.Adherence:
														badgeTypeName = Resources.Adherence;
														break;
												}
											}
											<div class="badge-type">@badgeTypeName</div>
											<span class="gold-badge">
												<i class="glyphicon glyphicon-star" style="color: gold"></i>
												@badge.GoldBadge
											</span>
											<span class="silver-badge">
												<i class="glyphicon glyphicon-star" style="color: silver"></i>
												@badge.SilverBadge
											</span>
											<span class="bronze-badge">
												<i class="glyphicon glyphicon-star" style="color: brown"></i>
												@badge.BronzeBadge
											</span>
										</div>
									</li>
								}
							</ul>
						}
					</li>
				}
				<li class="dropdown pull-left" id="user-settings">
					<a href="#" class="dropdown-toggle user-name-link" data-toggle="dropdown">
						<i class="glyphicon glyphicon-user"></i>
						<span class="user-name" title=@Model.CurrentLogonAgentName><small> @Model.CurrentLogonAgentName</small></span> <b class="caret"></b>
					</a>
					<ul class="dropdown-menu show-outside-toolbar">
						<li><a href="#" id="regional-settings" data-mytime-action="Settings/Index">@Resources.Settings</a></li>
						@if (Model.ShowChangePassword)
						{
							<li><a href="#" id="change-your-password" data-mytime-action="Settings/Password">@Resources.ChangeYourPassword</a></li>
						}
						@if (Model.ShowWFMAppGuide)
						{
							<li class="divider"></li>
							<li><a href="#" data-mytime-action="AppGuide/WFMApp">@Resources.TeleoptiWFMApp</a></li>
						}
						@if (Model.HasAsmPermission)
						{
							<li class="divider" id="asm-divider"></li>
							<li><a href="#" id="asm-link">@Resources.OpenASM</a></li>
						}

						<li class="divider"></li>
						<li>@Html.ActionLink(@Resources.SignOut, "SignOut", "Authentication", new { area = "Start" }, new { id = "signout" })</li>
					</ul>
				</li>
			</ul>
		</div>

		<!-- Collapsing Menu-->
		<div class="navbar-offcanvas navmenu-fixed-left offcanvas menu-top-adjust" id="bs-example-navbar-collapse-1">
			<ul class="nav navbar-nav">
				@foreach (var navSection in Model.NavigationItems)
				{
					<li>
						@if (navSection.UnreadMessageCount > 0)
						{
							<a href="@string.Format("#{0}Tab", navSection.Controller)"
							   onclick="hideNavMenu();"
							   data-mytime-action="@Html.Portal().GetAction(navSection)" @(navSection.PayAttention ? @Html.Raw("class=\"asm-new-message-indicator \"") : @Html.Raw(""))>
							   @navSection.Title
							   <span class="badge badge-important">@navSection.UnreadMessageCount</span>
							</a>
						}
						else
						{
							<a href="@string.Format("#{0}Tab", navSection.Controller)"
							   onclick="hideNavMenu();"
							   data-mytime-action="@Html.Portal().GetAction(navSection)">
							   @navSection.Title
							   <span class="badge hide no-unread-msg"></span>
							</a>
						}
					</li>
				}
				@if (Model.ReportNavigationItems.Any())
				{
					<li class="dropdown">
						<a id="reports" href="#" class="dropdown-toggle" data-toggle="dropdown">@Resources.Reports <b class="caret"></b></a>
						<ul id="report-list" class="dropdown-menu">
							@foreach (var reportNavSection in Model.ReportNavigationItems)
							{
								if (reportNavSection.IsDivider && !Request.UserAgent.Contains("app/android") && !Request.UserAgent.Contains("app/ios"))
								{
									<li class="divider"></li>
									continue;
								}
								<li>
									@if (reportNavSection.IsWebReport)
									{
										<a href="@string.Format("#{0}Tab", reportNavSection.Controller)"
										   onclick="hideNavMenu();"
										   data-mytime-action="@Html.Portal().GetAction(reportNavSection)">
										   @reportNavSection.Title
										   <span class="badge hide"></span>
										</a>
									}
									
									@if (!reportNavSection.IsWebReport && !Request.UserAgent.Contains("app/android") && !Request.UserAgent.Contains("app/ios"))
									{
										<a href="@reportNavSection.Url"
											onclick="hideNavMenu();"
											target="_blank">@reportNavSection.Title</a>
									}
								</li>
							}
						</ul>
					</li>
					}
			</ul>
		</div>
	</div>
</div>