@using Teleopti.Ccc.UserTexts
@using Teleopti.Ccc.Web.Areas.MyTime.Core
@using Teleopti.Ccc.Web.Areas.MyTime.Models.Portal
@model Teleopti.Ccc.Web.Areas.MyTime.Models.Portal.PortalViewModel
<nav id="tabs" class="main-nav">
	<ul>
		@foreach (var navSection in Model.NavigationItems)
		{
			<li><a href="@string.Format("#{0}Tab", navSection.Controller)" data-mytime-action="@Html.Portal().GetAction(navSection)">@navSection.Title</a></li>
		}
	</ul>
	<section id="EmptyTab" class="col-2-3 floatleft toolbar-left ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide">
		<div class="toolbar-inner">
		</div>
	</section>
	@foreach (var navSection in Model.NavigationItems)
	{
		<section id="@string.Format("{0}Tab", navSection.Controller)" class="col-2-3 floatleft toolbar-left ui-tabs-panel ui-widget-content ui-corner-bottom">
			<div class="toolbar-inner">
				@foreach (var toolbarItem in navSection.ToolBarItems)
				{
					if (toolbarItem is ToolBarSeparatorItem)
					{
						<div class="seperator"></div>
					}
					if (toolbarItem is ToolBarDatePicker)
					{
						var dpicker = toolbarItem as ToolBarDatePicker;
						<div id="@string.Format("{0}DateRangeSelector", navSection.Controller)" class="date-range-selector floatleft ml10">
							<button data-mytime-action="#" class="first">@dpicker.PrevTitle</button>
							<input id="@string.Format("{0}DatePicker", navSection.Controller)" type="text" class="datepicker" />
							<button data-mytime-action="#" class="last">@dpicker.NextTitle</button>
							<span class="selected-date-period displayblock"></span>
							<a class="displaynone" data-mytime-action="#"></a>
						</div>
					}
					if (toolbarItem is ToolBarButtonItem)
					{
						var button = toolbarItem as ToolBarButtonItem;
						<button title="@Html.AttributeEncode(button.Title)" id="@string.Format("{0}-{1}-button", navSection.Controller, button.ButtonType)" disabled="disabled" class="toolbar-@Html.Raw(button.ButtonType) icon ir floatleft mr10">@button.Title</button>
					}
					if (toolbarItem is ToolBarSplitButton)
					{
						var splitButton = toolbarItem as ToolBarSplitButton;
						<div class="floatleft" id="@string.Format("{0}", navSection.Controller)">
							<button title="@Html.AttributeEncode(splitButton.Title)" id="@string.Format("{0}-set-button", navSection.Controller)"></button>
							<select title="@Html.AttributeEncode(splitButton.Title)" id="@string.Format("{0}-list", navSection.Controller)">
								@foreach (var option in splitButton.Options)
								{
									<option value="@option.Value" data-color="@option.Color">@option.Text</option>
								}
							</select>
						</div>
					}
					if (toolbarItem is ToolBarSelectBox)
					{
						var selectBox = toolbarItem as ToolBarSelectBox;
						<select title="@Html.AttributeEncode(selectBox.Title)" class="ui-selectbox-init floatleft" id="@string.Format("{0}-{1}-select", navSection.Controller, selectBox.Type)">
							@foreach (var option in selectBox.Options)
							{
								<option value="@option.Value" data-color="@option.Color">@option.Text</option>
							}
						</select>
					}
				}
				

				@if (navSection.Controller == "Preference")
				{
					var options = from i in navSection.ToolBarItems
					              let toolBarSplitButton = i as ToolBarSplitButton
					              where toolBarSplitButton != null
					              from o in toolBarSplitButton.Options
					              select o;
					<div id="Preference-add-extended-form-template" class="displaynone" style="height: 150px"> 
						
						<select id="Preference-extended-preference">
							<option value="">&nbsp;</option>
							<option value="-"></option>
							@foreach (var option in options)
							{
								<option value="@option.Value" data-color="@option.Color">@option.Text</option>
							}
						</select>
						
						<button id="Preference-extended-apply">@Resources.Apply</button>
					</div>
				}
				

			</div>
		</section>
	}
			
	<section id="toolbar-right" class="col-main floatright">
		<div class="toolbar-inner">
			<dl class="dropdown">
				<dt><span class="icon employee icon-left" id="username">@User.Identity.Name</span></dt>
				<dd>
					<ul class="ui-widget-content ui-corner-all ui-menu">
						<li class="ui-menu-item"><a href="#Settings/Index" class="ui-corner-all">@Resources.Settings</a></li>
						@if (Model.ShowChangePassword)
						{
							<li class="ui-menu-item"><a href="#Settings/Password" class="ui-corner-all">@Resources.ChangeYourPassword</a></li>
						}
						<li>&nbsp;</li>
						<li class="ui-menu-item">@Html.ActionLink(@Resources.LogOut, "SignOut", "Authentication", new {area = "Start"}, new {id = "signout", @class = "ui-corner-all"})</li>
					</ul>
				</dd>
			</dl>
			<input type="button" id="asm-button" value="ASM" />
		</div>
	</section>
				
</nav>