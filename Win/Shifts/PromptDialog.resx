<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACW
        DgAAAk1TRnQBSQFMAgEBAgEAAQwBAAEMAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGS4AAToCMgFhAUMCNAF3YAADBwEJAU4CMgGZASQCIwE2wAABJwIlATsBagIS
        AfIBOAIxAl4CFAHtAVwCJAHJAS4CKgFHAWQCFgHnAxcBIEgAAwYBCAExAiwBTQMSARgBMwIuAVIBgQGy
        AbwB/wFAAjMBbgMTARoBMwIuAVIDCgEOtAABRwI0AYIBgQG3Ab4B/wGBAaoBswH/AYUBygHQAf8BiAHO
        AdQB/wN/Af4BgQGwAboB/wFFAjQBfUQAAwIBAwFgAh8B1AGBAaMBrQH/AWICFwHkAU0CHAH6AaIB7gHw
        Af8BTQIcAfoBZQIXAeUDfwH+AVQCLwGqsAADBwEJATgCMQFeAYEBsQG6Af8BigHcAeMB/wGmAvgB/wGu
        AvoB/wGqAfkB+gH/AYEBwAHIAf8BOwIyAWMDCQEMQAADAwEEAVkCJwHCAYEBuQHCAf8BgQGuAbcB/wGK
        AdMB2AH/AakB+QH6Af8BlwHZAd4B/wGBAbkBwAH/AYYBzwHVAf8BXAIjAcywAAEvAisBSQGBAaoBswH/
        AYEBvgHJAf8BkQHmAekB/wE8AjIBZgE1Ai8BVQGkAvUB/wGaAesB7QH/AYEBpgGwAf8BPgIyAWtEAAMa
        ASUBgQGoAbMB/wGCAdoB4gH/AY0B4wHoAf8BlwH1AfYB/wGlA/8BvQP/AYEBtQG9Af8BNwIwAVuwAAEs
        AikBQwGbAdsB5AH/AakB3AHtAf8BXwIiAc4DEwEaASACHwEuAWECGwHcAZYB7gHyAf8BnQHrAe0B/wE2
        Ai8BWAFLAjQBjgFNAhwB+gMOARMBLQIqAUYDCwEPEAADGgElAVoCKQG9AVkCKAG+AVkCKAG+AVkCKAG+
        AVkCKAG+AVkCKAG+AWECFwHmAYEBpwGxAf8BgQG6AcUB/wGCAdcB3gH/AcAB1wHUAf8B1AHLAccB/wG7
        AdQB0QH/AaIC/AH/AZ8B6gHsAf8BTQIcAfoBTgIzAZWsAAMEAQYBNAIuAVQBpAHqAfAB/wGLAcEBzgH/
        AUkCQAH9AUoCQAH9AYEBsgG+Af8BkQHrAe0B/wGBAbUBvAH/AWoBGQEeAfkBSAJAAf0BlwHhAeQB/wGB
        AaQBrwH/AUcCQAH9AWACHwHUAwYBCAgAAxEBFwFQAjIBmwGCAkAB/QGBAYoBqQH/AYEBiwGpAf8BgQGL
        AakB/wGBAYsBqQH/AYEBhQGjAf8BnQHWAd8B/wGpAd0B5wH/AaMB2QHoAf8BhQHPAdQB/wGBAZABqwH/
        AYEBigGpAf8BgQGKAagB/wGJAdcB3AH/AZYB7QHwAf8BowH4AfkB/wFOAjIBmbAAAVACMgGbAaMB6QHu
        Af8BpwHeAesB/wGgAdEB4gH/AaQB1AHjAf8BmQHbAeUB/wGfAvMB/wGBAcsB0AH/AYEBvwHIAf8BmAHq
        AewB/wGyAv0B/wGYAecB6gH/AYEBwgHKAf8BXwIiAc4DBQEHCAABHwIeASwBbQGBAbcB/wFOAYEBrgH/
        AU8BgQGvAf8BTwGBAa8B/wFPAYEBrwH/AU8BgQGvAf8BTAGBAa0B/wFmAYMBuwH/AYEBrQHPAf8BrwHn
        AfEB/wGQAcgB0wH/AYEBqQG2Af8BgQGfAbgB/wGBAaMBtQH/AYEBswG9Af8BggHTAdsB/wFKAjQBjAMd
        ASqwAAE1Ai8BVwFfAhIB8wFLAjQBjgFfAiIBzgFhAhsB3AFMAjQBkAGYAeoB7AH/AYEBuQHAAf8BgQHK
        AdUB/wFkAhgB4gFVAi4BrQGnAvkB/wGgAegB6gH/AV8CFwHjAS8CKwFKCAABHgIdASsBbgGBAbYB/wFO
        AYEBrQH/AU8BgQGtAf8BTwGBAa0B/wFPAYEBrQH/AU8BgQGtAf8BTwGBAa0B/wFMAYEBrAH/AX4BkwG2
        Af8BogLsAf8BqgHbAekB/wGHAcABzAH/AYEBswG8Af8BgwG9AcgB/wGCAcYB1AH/A38B/gFHAjQBgrwA
        AxMBGgFbAiUBxgFOAjMBlgMNARIBjQHMAdQB/wGIAcEBzgH/AY0CQAH9ASICIQEyBAABUAIxAZ4BmwHx
        AfMB/wGFAc4B0wH/AT8CMwFtCAABHgIdASsBcQGBAbgB/wFZAYEBsQH/AVkBgQG1Af8BVQGBAcIB/wFZ
        AYEBtQH/AVoBgQGxAf8BWgGBAbEB/wFaAYEBsQH/Aa8B/wH9Af8BpwHrAe8B/wGjAfkB+wH/AacB4AHu
        Af8BsAHjAfEB/wGuAeEB7QH/AasB+AH1Af8BlQHeAeUB/wFgAhoB3rQAATYCLwFZAVACMgGbAU4CMwGY
        AYEBwwHKAf8BVwIqAboBRQI0AXwBXwIhAfsBXQISAfABnQHOAdwB/wFYAicBwQFRAjEBogFmAhIB7wGB
        Ac0B1QH/AVsCIwHLAR4CHQErCAABHgIdASsBeAGBAboB/wFnAYEBugH/AXUBgQGiAf8DgQH/AXsBgQGY
        Af8BZwGBAbwB/wFoAYEBtwH/AWgBgQG2Af8BbwGBAbsB/wGEAc8B5gH/AYEBiwGYAf8BgQGpAagB/wGu
        Ae4B9QH/AYEBywHeAf8BgQGUAcIB/wFqAh4B+QEnAiUBOrQAAV8CIQH7AYEBqwG1Af8BgQGuAbcB/wG0
        AfsB/AH/AYEBtAG9Af8BgQGpAbIB/wGBAaoBswH/AZEB4wHlAf8BqwHbAesB/wGGAb4BywH/AYEBswG+
        Af8BiAHGAdIB/wGKAdoB4QH/AV4CHwHVAwcBCQgAAR4CHQErAYEBhgG8Af8BfAGIAccB/wKBAYsB/wKG
        AYcB/wKBAYQB/wF8AYoByQH/AYEBhwG+Af8BgQGHAb4B/wF+AYMBvQH/AXkBgQG1Af8DgQH/AoEBjAH/
        AZoB4AHoAf8BgQGgAcsB/wF5AYEBugH/AW4CFwH4AR8CHgEtsAADCgEOAVYCLAGzAYEBwAHJAf8BjwHk
        AekB/wGhAvUB/wGuAfgB+QH/AaAB5QHoAf8BXQISAfABYQITAe4BmwJAAf0BogJAAf0BpQHgAekB/wGf
        AewB7QH/AZgB6QHrAf8BXgIfAdUDBwEJCAABHgIdASsBgQGDAbUB/wF+AYEBrQH/AZEBmwGmAf8D9QH/
        AaUBqQGwAf8BfQGBAa4B/wKBAasB/wKBAasB/wKBAasB/wKBAaoB/wGaAZgBmQH/AoEBrgH/AYEBjgGh
        Af8CgQGsAf8BfgGBAbMB/wFuAhcB+AEfAh4BLawAAwIBAwFcAiQByQGBAasBtQH/AYEBxAHSAf8BXQIf
        AdIBLQIpAUUBVwIrAbcBqQL7Af8BgQGuAbcB/wFeAhoB3QMRARcBTAIzAZIBXwIhAfsDDwEUAS4CKgFI
        AwwBEAwAAR4CHQErAYEBkAHEAf8BgQGbAc8B/wGBAZwBwAH/AbIBsQGzAf8BhAGdAbsB/wGBAZsB0AH/
        AYEBmwHNAf8BgQGbAc0B/wGBAZsBzQH/AYEBmwHPAf8BjgGdAbUB/wGYAZwBpgH/AYUBnAG8Af8BgQGb
        Ac4B/wGBAZIByQH/AW4CFwH4AR8CHgEtrwABAQFcAiMBzAGsAeIB7wH/AaQB3AHrAf8BQgI0AXUEAAEr
        AigBQgGBAcsB0wH/AaQB/QH8Af8BVwIrAbgkAAEeAh0BKwGBAZ8BywH/AasBwAHdAf8BpAG+Ad0B/wGe
        Ab4B5wH/AaQBvgHeAf8BpwG+AdsB/wGoAb4B2wH/AagBvgHbAf8BqAG+AdsB/wGnAb4B2wH/AaQBvgHf
        Af8BnwG+AeUB/wGjAb4B3wH/AagBvgHbAf8BhgGpAdMB/wFuAisB/AEhAiABMLAAAxIBGAFUAi8BqgGy
        AeIB8gH/AWoCHgH5AVwCGQHfAV8CKwH8AYEBwwHNAf8BnwH3AfUB/wMUARwkAAEfAh4BLQGBAZgBxwH/
        AZQBsAHVAf8BkQGvAdUB/wGTAbMB4QH/AZQBtQHeAf8BkgGvAdcB/wGSAa8B1QH/AZIBrwHVAf8BkgGv
        AdUB/wGSAa8B2AH/AZQBswHcAf8BlAG1AeIB/wGRAa4B1QH/AZIBrwHVAf8BgQGfAcwB/wFIAjQBhQMM
        ARC0AAFrAisB/AGlAeAB6gH/AacB2wHpAf8BlQHLAdgB/wGkAdgB5gH/AZIB2AHjAf8BkwHmAecB/wEk
        AiIBNSQAAwgBCwEsAikBRAEsAikBRAE4AjEBXgOBAf8BRwI0AYIBKwIoAUIBLAIpAUQBLAIpAUQBLAIp
        AUQBLAIpAUMBOwIyAWMBYgIUAfYBPwIzAW0BLAIpAUQBLAIpAUQDCwEPuAABSgI0AYsBXAIhAc8BTAIz
        AZIBpAHfAeoB/wFYAioBuQFSAjEBowFUAi8BrAMGAQgwAAMEAQUBZgISAe8BZAIWAecBUQIxAZ8BUAIy
        AZ0BUAIyAZ0BUAIyAZ0BUAIxAZ4BYAIaAd4BWQITAfUDBgEIxAADAwEEAwEBAgMdASoBVgItAbIBHQIc
        ASlAAAMKAQ0BUwIvAakBVgItAbIBVgItAbIBVgItAbIBVgItAbIBVgItAbIBVAIuAa4BHgIdASv/APkA
        AUIBTQE+BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcAA/8BAAH+AX8C/wGPBwAB8AEPAf8B/AEB
        BwAB8AEPAf8B+AEBBwAB4AEHAf8B+AEBBwAB4AEHAf8B/AEBBwAB4AEAATwJAAHgAQABGAkAAfABAAEY
        CQAB8AEAARgBAAEBBwAB/AECARgBAAEBBwAB8AEAARgBAAEBBwAB8AEAARgBAAEBBwAB4AEAARgBAAEB
        BwABwAEAATgBAAEBBwABwQEPAfgBAAEBBwAB4AEPAfgBAAEBBwAB8AEPAfgBAAEDBwAB8AEPAf8BAAEf
        BwAB8AF/Af8BgAE/BwAF/wcACw==
</value>
  </data>
</root>