<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAa
        DgAAAk1TRnQBSQFMAgEBAgEAASQBAAEkAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGS4AAzoBYQNDAXdgAAMHAQkBTgJNAZkDJAE2wAADJwE7AWcCJgHyAzgBXgFd
        Ai8B7QFcAk0ByQMuAUcBZAI4AecDFwEgSAADBgEIATECMAFNAxIBGAMzAVIBgQGyAbwB/wFAAj8BbgMT
        ARoDMwFSAwoBDrQAA0cBggGBAbcBvgH/AYEBqgGzAf8BhQHKAdAB/wGIAc4B1AH/A38B/gGBAbABugH/
        A0UBfUQAAwIBAwFgAkgB1AGBAaMBrQH/AWECOgHkAU0CHwH6AaIB7gHwAf8BTQIfAfoBZQI6AeUDfwH+
        AVMCUAGqsAADBwEJAzgBXgGBAbEBugH/AYoB3AHjAf8BpgL4Af8BrgL6Af8BqgH5AfoB/wGBAcAByAH/
        AzsBYwMJAQxAAAMDAQQBWQJPAcIBgQG5AcIB/wGBAa4BtwH/AYoB0wHYAf8BqQH5AfoB/wGXAdkB3gH/
        AYEBuQHAAf8BhgHPAdUB/wFcAkwBzLAAAy8BSQGBAaoBswH/AYEBvgHJAf8BkQHmAekB/wM8AWYBNQI0
        AVUBpAL1Af8BmgHrAe0B/wGBAaYBsAH/Az4Ba0QAAxoBJQGBAagBswH/AYIB2gHiAf8BjQHjAegB/wGX
        AfUB9gH/AaUD/wG9A/8BgQG1Ab0B/wM3AVuwAAEsAisBQwGbAdsB5AH/AakB3AHtAf8BXgJNAc4DEwEa
        AyABLgFhAkEB3AGWAe4B8gH/AZ0B6wHtAf8BNgI1AVgDSwGOAU0CHwH6Aw4BEwMtAUYDCwEPEAADGgEl
        AVoCUQG9AVkCUAG+AVkCUAG+AVkCUAG+AVkCUAG+AVkCUAG+AWECNwHmAYEBpwGxAf8BgQG6AcUB/wGC
        AdcB3gH/AcAB1wHUAf8B1AHLAccB/wG7AdQB0QH/AaIC/AH/AZ8B6gHsAf8BTQIfAfoBTgJNAZWsAAME
        AQYDNAFUAaQB6gHwAf8BiwHBAc4B/wFGAkAB/QFHAkAB/QGBAbIBvgH/AZEB6wHtAf8BgQG1AbwB/wFq
        AR8BIwH5AUUCQAH9AZcB4QHkAf8BgQGkAa8B/wFEAkAB/QFgAkgB1AMGAQgIAAMRARcBUAJOAZsBggJA
        Af0BgQGKAakB/wGBAYsBqQH/AYEBiwGpAf8BgQGLAakB/wGBAYUBowH/AZ0B1gHfAf8BqQHdAecB/wGj
        AdkB6AH/AYUBzwHUAf8BgQGQAasB/wGBAYoBqQH/AYEBigGoAf8BiQHXAdwB/wGWAe0B8AH/AaMB+AH5
        Af8BTgJNAZmwAAFQAk4BmwGjAekB7gH/AacB3gHrAf8BoAHRAeIB/wGkAdQB4wH/AZkB2wHlAf8BnwLz
        Af8BgQHLAdAB/wGBAb8ByAH/AZgB6gHsAf8BsgL9Af8BmAHnAeoB/wGBAcIBygH/AV4CTQHOAwUBBwgA
        Ax8BLAFqAYEBtwH/AUsBgQGuAf8BTAGBAa8B/wFMAYEBrwH/AUwBgQGvAf8BTAGBAa8B/wFJAYEBrQH/
        AWMBgwG7Af8BgQGtAc8B/wGvAecB8QH/AZAByAHTAf8BgQGpAbYB/wGBAZ8BuAH/AYEBowG1Af8BgQGz
        Ab0B/wGCAdMB2wH/A0oBjAMdASqwAAM1AVcBXwIlAfMDSwGOAV4CTQHOAWECQQHcAUwCSwGQAZgB6gHs
        Af8BgQG5AcAB/wGBAcoB1QH/AWECPAHiAVUCUQGtAacC+QH/AaAB6AHqAf8BXwI8AeMDLwFKCAADHgEr
        AWsBgQG2Af8BSwGBAa0B/wFMAYEBrQH/AUwBgQGtAf8BTAGBAa0B/wFMAYEBrQH/AUwBgQGtAf8BSQGB
        AawB/wF7AZMBtgH/AaIC7AH/AaoB2wHpAf8BhwHAAcwB/wGBAbMBvAH/AYMBvQHIAf8BggHGAdQB/wN/
        Af4DRwGCvAADEwEaAVsCTgHGAU4CTAGWAw0BEgGNAcwB1AH/AYgBwQHOAf8BjQJAAf0DIgEyBAABUAJN
        AZ4BmwHxAfMB/wGFAc4B0wH/Az8BbQgAAx4BKwFuAYEBuAH/AVYBgQGxAf8BVgGBAbUB/wFSAYEBwgH/
        AVYBgQG1Af8BVwGBAbEB/wFXAYEBsQH/AVcBgQGxAf8BrwH/Af0B/wGnAesB7wH/AaMB+QH7Af8BpwHg
        Ae4B/wGwAeMB8QH/Aa4B4QHtAf8BqwH4AfUB/wGVAd4B5QH/AWACQQHetAADNgFZAVACTgGbAU4CTQGY
        AYEBwwHKAf8BVwJQAboBRQJEAXwBXwIhAfsBXQInAfABnQHOAdwB/wFYAk8BwQFRAk8BogFjAioB7wGB
        Ac0B1QH/AVsCTQHLAx4BKwgAAx4BKwF1AYEBugH/AWQBgQG6Af8BcgGBAaIB/wOBAf8BeAGBAZgB/wFk
        AYEBvAH/AWUBgQG3Af8BZQGBAbYB/wFsAYEBuwH/AYQBzwHmAf8BgQGLAZgB/wGBAakBqAH/Aa4B7gH1
        Af8BgQHLAd4B/wGBAZQBwgH/AWoCIwH5AycBOrQAAV8CIQH7AYEBqwG1Af8BgQGuAbcB/wG0AfsB/AH/
        AYEBtAG9Af8BgQGpAbIB/wGBAaoBswH/AZEB4wHlAf8BqwHbAesB/wGGAb4BywH/AYEBswG+Af8BiAHG
        AdIB/wGKAdoB4QH/AV4CSQHVAwcBCQgAAx4BKwGBAYYBvAH/AXkBiAHHAf8CgQGLAf8ChgGHAf8CgQGE
        Af8BeQGKAckB/wGBAYcBvgH/AYEBhwG+Af8BewGDAb0B/wF2AYEBtQH/A4EB/wKBAYwB/wGaAeAB6AH/
        AYEBoAHLAf8BdgGBAboB/wFpAh8B+AMfAS2wAAMKAQ4BVgJRAbMBgQHAAckB/wGPAeQB6QH/AaEC9QH/
        Aa4B+AH5Af8BoAHlAegB/wFdAicB8AFhAi0B7gGbAkAB/QGiAkAB/QGlAeAB6QH/AZ8B7AHtAf8BmAHp
        AesB/wFeAkkB1QMHAQkIAAMeASsBgQGDAbUB/wF7AYEBrQH/AZEBmwGmAf8D9QH/AaUBqQGwAf8BegGB
        Aa4B/wKBAasB/wKBAasB/wKBAasB/wKBAaoB/wGaAZgBmQH/AoEBrgH/AYEBjgGhAf8CgQGsAf8BewGB
        AbMB/wFpAh8B+AMfAS2sAAMCAQMBXAJNAckBgQGrAbUB/wGBAcQB0gH/AV0CSQHSAy0BRQFXAlIBtwGp
        AvsB/wGBAa4BtwH/AV4CQgHdAxEBFwFMAksBkgFfAiEB+wMPARQDLgFIAwwBEAwAAx4BKwGBAZABxAH/
        AYEBmwHPAf8BgQGcAcAB/wGyAbEBswH/AYQBnQG7Af8BgQGbAdAB/wGBAZsBzQH/AYEBmwHNAf8BgQGb
        Ac0B/wGBAZsBzwH/AY4BnQG1Af8BmAGcAaYB/wGFAZwBvAH/AYEBmwHOAf8BgQGSAckB/wFpAh8B+AMf
        AS2vAAEBAVwCTAHMAawB4gHvAf8BpAHcAesB/wNCAXUEAAMrAUIBgQHLAdMB/wGkAf0B/AH/AVcCUAG4
        JAADHgErAYEBnwHLAf8BqwHAAd0B/wGkAb4B3QH/AZ4BvgHnAf8BpAG+Ad4B/wGnAb4B2wH/AagBvgHb
        Af8BqAG+AdsB/wGoAb4B2wH/AacBvgHbAf8BpAG+Ad8B/wGfAb4B5QH/AaMBvgHfAf8BqAG+AdsB/wGG
        AakB0wH/AWsCKwH8AyEBMLAAAxIBGAFTAlABqgGyAeIB8gH/AWoCIwH5AVwCPgHfAVwCKwH8AYEBwwHN
        Af8BnwH3AfUB/wMUARwkAAMfAS0BgQGYAccB/wGUAbAB1QH/AZEBrwHVAf8BkwGzAeEB/wGUAbUB3gH/
        AZIBrwHXAf8BkgGvAdUB/wGSAa8B1QH/AZIBrwHVAf8BkgGvAdgB/wGUAbMB3AH/AZQBtQHiAf8BkQGu
        AdUB/wGSAa8B1QH/AYEBnwHMAf8DSAGFAwwBELQAAWgCKwH8AaUB4AHqAf8BpwHbAekB/wGVAcsB2AH/
        AaQB2AHmAf8BkgHYAeMB/wGTAeYB5wH/AyQBNSQAAwgBCwMsAUQDLAFEAzgBXgOBAf8DRwGCAysBQgMs
        AUQDLAFEAywBRAEsAisBQwM7AWMBYgIeAfYDPwFtAywBRAMsAUQDCwEPuAABSgJJAYsBXAJMAc8BTAJL
        AZIBpAHfAeoB/wFYAlABuQFSAk4BowFUAlABrAMGAQgwAAMEAQUBYwIqAe8BZAI4AecBUQJOAZ8BUAJN
        AZ0BUAJNAZ0BUAJNAZ0BUAJNAZ4BYAJBAd4BWQIgAfUDBgEIxAADAwEEAwEBAgMdASoBVQJQAbIDHQEp
        QAADCgENAVICTwGpAVUCUAGyAVUCUAGyAVUCUAGyAVUCUAGyAVUCUAGyAVQCTwGuAx4BK/8A+QABQgFN
        AT4HAAE+AwABKAMAAVADAAEUAwABAQEAAQEFAAHwFwAD/wEAAf4BfwL/AY8HAAHwAQ8B/wH8AQEHAAHw
        AQ8B/wH4AQEHAAHgAQcB/wH4AQEHAAHgAQcB/wH8AQEHAAHgAQABPAkAAeABAAEYCQAB8AEAARgJAAHw
        AQABGAEAAQEHAAH8AQIBGAEAAQEHAAHwAQABGAEAAQEHAAHwAQABGAEAAQEHAAHgAQABGAEAAQEHAAHA
        AQABOAEAAQEHAAHBAQ8B+AEAAQEHAAHgAQ8B+AEAAQEHAAHwAQ8B+AEAAQMHAAHwAQ8B/wEAAR8HAAHw
        AX8B/wGAAT8HAAX/BwAL
</value>
  </data>
</root>