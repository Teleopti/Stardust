<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADO
        CQAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAwgBCwMoAT0DIwEzAUkCSAGIAyIBMQMnAToDBAEGOAADAQECAwwBEAMN
        AREBSgJMAY0DLAFEAwcBCgMJAQwDAAEBjAADLgFHAWwBdwGAAfkBXAFiAWUBwQFrAYMBhAHtAVoCWwGz
        AW8BfgGBAfMDJwE7NwABAQNAAW4BUQJSAZwBTAJLAZIBdgGRAZMB6QFUAlEBtANKAYoDRwGCAxIBGIgA
        AwMBBAMxAU8BgQGzAbsB/wGNAdcB3QH/AaEB7gHvAf8BoQHgAeEB/wGBAbwBxQH/AzIBUQMEAQUwAAMC
        AQMDWQHHAYABqgGyAf0BcgGaAZ0B+wGcAeMB5QH/AX8BpwGrAf4BegGiAaUB+gFoAnkB4gMiATGIAAMa
        ASUBZAFyAXUB0gGBAb4ByQH/AW8CiwHZAzgBXgF0AosB1QGaAesB7QH/AWgBeAF6AdoDJAE2NAADGgEl
        AYEBtQG/Af8BiAHfAeUB/wGVAfEB8wH/AaUD/wGuAe0B7wH/AVgBWwFcAa0DEQEXiAADEwEaAVoBXgFg
        AawBqAHgAe4B/wFYAVsBXQG5AzcBWgFcAl0BxQGVAe0B8QH/AXMCjQHfA00BlQFcAlYB5wMxAU4DPAFn
        AxgBIgMAAQEEAAMQARUDSQGIA14BzgJeAWIBzgJeAWIBzgJeAWIBzgFnAWsBbgHlAYsBtQG/Af8BiAHH
        AdEB/wGaAc0B0wH/AbwBvgHCAf8BrQHCAccB/wGcAfEB8gH/AX8BnQGeAf4DVAGviAADAQECAzcBWwGk
        AeoB7wH/AY8BvgHKAf8BcQGEAYwB/gGHAbcBwgH/AZgB7wHwAf8BewGuAbUB/wFsAYcBjAH9AZcB2QHa
        Af8BjQHGAc0B/wFfAXABcgHzAz8BbQMBAQIEAAMxAU0BYAFhAXIB5gFeAXkBnwH/AV4BhgGsAf8BXgGG
        AawB/wFdAYUBqgH/AXEBowHEAf8BlQHFAdsB/wGiAdsB5wH/AYYBtQHDAf8BgQGXAbEB/wGBAZcBrwH/
        AYcBzAHTAf8BdQGYAZoB4wNFAXuMAAMxAU4BaAJiAfYBWQFcAV0BtgFpAm4B4AFaAl8BugGaAewB7gH/
        AYEBwAHHAf8BbwGXAZoB9QFhAmgBywGjAvUB/wGHAa8BsgH3AUsCSgGMAwsBDwQAAzoBYAFMAYEBsgH/
        AT0BgQGuAf8BPQGBAa4B/wE9AYEBrgH/AT0BgQGtAf8BQAGCAa8B/wFxAZoBvAH/AaUB5gHrAf8BlQHJ
        AdYB/wGDAbEBvgH/AYMBtwHDAf8BgQG2AcEB/wFcAmABwgMdASqUAAMtAUUDVAGuAyMBMwGNAcwB1AH/
        AYkBoQGqAf8BUAJNAZgDCgENA1ABngGWAegB6wH/AVkCYQG2AxQBGwQAAzoBYAFTAYEBtQH/AUcBgQG0
        Af8BQwGBAcIB/wFHAYEBtAH/AUgBgQGxAf8BSAGBAbEB/wGvAf8B/QH/AaYB7wHyAf8BpQHtAfUB/wGu
        AeIB8AH/Aa4B4QHtAf8BpgHyAfEB/wFxAYwBjQHvAyYBOIwAAzoBYQFXAloBtAFfAWUBaAHFAW8BiAGL
        AeYBVQJWAakBZQE+AT8B/AFwAYMBhwH3AXcBigGNAegBWQFdAV4BvwFoAWMBaAHzAXEBoQGnAfMDQwF4
        AwcBCQQAAzoBYAFiAYMBvAH/AWYBggGlAf8CggGDAf8BaQGCAZ4B/wFcAYMBvQH/AVwBgwG4Af8BYQGC
        AbwB/wF7Aa8ByAH/AYEBlAGaAf8BnwHYAd4B/wGBAcAB2QH/AW4BeQGZAf4BTwJNAZgDCgEOiAADAwEE
        AVICTwGjAYEBtgG/Af8BkQHVAdoB/wGiAegB6gH/AZMBywHRAf8BbQF0AXkB+AGCAY4BkAH5AZcBgQGI
        Af4BkwG3AcAB/wGUAdkB4AH/AYABrgGxAfUDQAFvAwEBAgQAAzoBYAFxAYUBugH/AYMBjAGhAf8DvgH/
        AYoBkQGjAf8BbQGFAbkB/wFvAYQBtQH/AW4BggG0Af8BeQGEAacB/wGIAYcBlgH/AYsBqgG7Af8BdwGR
        AbwB/wFjAWkBmAH9A0wBkwMIAQuHAAEBAzEBTgFjAXABcgHYAYEBwwHQAf8BXQJjAcMBUQJTAZ4BjAK9
        AfIBcAGRAZYB+wFaAlYBvgFGAkUBfwFpAlQB6QExAjIBTwM9AWkDGAEiAwABAQQAAzoBYAF8AZEBxAH/
        AYMBmgG9Af8BwwHCAcQB/wGIAZ4BvAH/AXoBlQHHAf8BewGVAcUB/wF7AZUBxQH/AYUBlwHAAf8BkgGZ
        AawB/wGIAZgBsgH/AXsBlQHGAf8BbwFzAaEB/QNMAZMDCAELiAADPQFnAYwBqwGyAfIBpAHcAesB/wM2
        AVgDGAEhAWUBewF8AdABpAH9AfwB/wNKAYocAAM6AWABlgGwAdQB/wGmAb8B3QH/AZ4BvgHnAf8BpQG+
        Ad0B/wGoAb4B2wH/AagBvgHbAf8BqAG+AdsB/wGmAb4B3AH/AaIBvgHiAf8BogG+AeEB/wGoAb4B2wH/
        AX0BhAGkAf4BTgJMAZYDCQEMiAADBwEJAU4CTQGUAa8B4gHwAf8BcAJiAfYBZwFmAWcB8gF+AacBrwH+
        AZwB8wHyAf8DEwEaHAADMgFQAWkBcAF8AdABbgF2AYEB1QGOAacByQH/AXMBfQGKAdwBagFzAX4B0AFq
        AXMBfQHQAWoBcwF9AdABbAF1AYAB0gF7AYYBmwHrAXQBfQGPAeMBagFzAX0B0AFaAV8BZAG3AycBOgMC
        AQOMAAFNAkwBkwF2AogB5wFvAX4BgAHWAYEBngGkAe4BaQF2AXcB1AFoAnoB1gMRARccAAMKAQ0DGAEi
        AyABLgFtAmUB9wFSAlABpANAAXEDQAFxA0ABcQNFAX0BWgJSAcwDPQFpAxgBIgMUARwDAwEEkAADFAEc
        AyQBNQM7AWQBSgJLAYoDIgEyAx4BKwMBAQInAAEBAy0BRgNWAbYDVAGtA1QBrQNUAa0DVQGwA0oBjAMS
        ARn/AJEAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHgAT8B/wUAAeABPwH+
        BQABwAEfAf4FAAHAAR8B/wUAAcABAAGABQABwAEAAYAFAAHgAQABgAUAAfgBAAGABQAB4AEAAYAFAAHA
        AQABgAUAAYABAAGABQABwAE/AYAFAAHAAT8BgAUAAeABPwGAAQEEAAHgAT8B4AEPBAAE/wQACw==
</value>
  </data>
</root>