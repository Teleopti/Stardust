<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAS
        CgAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAwgBCwEpAigBPQMjATMBSQJIAYgDIgExAycBOgMEAQY4AAMBAQIDDAEQ
        Aw0BEQFMAU0BTgGNAywBRAMHAQoDCQEMAwABAYwAAy4BRwFvAXoBgQH5AV8BagFsAcEBbgGJAYoB7QFc
        AV8BYAGzAXABgAGDAfMDJwE7NwABAQNAAW4BUwFWAVcBnAFMAkoBkgF5AZoBnQHpAVICTAG0AUwCSwGK
        A0kBggMSARiIAAMDAQQDMgFPAYEBswG7Af8BjQHXAd0B/wGhAe4B7wH/AaEB4AHhAf8BgQG8AcUB/wMy
        AVEDBAEFMAADAgEDA1kBxwGAAasBswH9AXUBnAGfAfsBnAHjAeUB/wGBAakBrQH+AXsBpAGnAfoBagF/
        AYAB4gMiATGIAAMaASUBagF8AYAB0gGBAb4ByQH/AXQCmwHZAzgBXgF8Ap4B1QGaAesB7QH/AW0BfwGD
        AdoDJAE2NAADGgElAYEBtQG/Af8BiAHfAeUB/wGVAfEB8wH/AaUD/wGuAe0B7wH/AVsBYgFkAa0DEQEX
        iAADEwEaAWABawFsAawBqAHgAe4B/wFbAV8BYAG5AzcBWgFdAV8BYAHFAZUB7QHxAf8BeQGaAZsB3wFN
        AksBlQFcAlUB5wIxATIBTgM8AWcDGAEiAwABAQQAAxABFQFKAkkBiAFfAV4BXwHOAl8BZgHOAl8BZgHO
        Al8BZQHOAWoBbQFwAeUBiwG1Ab8B/wGIAccB0QH/AZoBzQHTAf8BvAG+AcIB/wGtAcIBxwH/AZwB8QHy
        Af8BfwGfAaAB/gNUAa+IAAMBAQIDNwFbAaQB6gHvAf8BjwG+AcoB/wFxAYYBjgH+AYcBtwHCAf8BmAHv
        AfAB/wF8Aa4BtQH/AW4BhwGMAf0BlwHZAdoB/wGNAcYBzQH/AV8BcgF0AfMDQAFtAwEBAgQAAzEBTQFf
        AWIBdwHmAV8BegGfAf8BXwGGAawB/wFfAYYBrAH/AV4BhQGqAf8BcgGjAcQB/wGVAcUB2wH/AaIB2wHn
        Af8BhgG1AcMB/wGBAZcBsQH/AYEBlwGvAf8BhwHMAdMB/wF7AaYBqAHjAUYCRwF7jAADMQFOAWsBZAFl
        AfYBXQFhAWMBtgFrAnMB4AFdAmQBugGaAewB7gH/AYEBwAHHAf8BcQGbAZ4B9QFkAm4BywGjAvUB/wGI
        AbUBuAH3AUwCSwGMAwsBDwQAAjoBOwFgAU0BgQGyAf8BPgGBAa4B/wE+AYEBrgH/AT4BgQGuAf8BPgGB
        Aa0B/wFBAYIBrwH/AXIBmgG8Af8BpQHmAesB/wGVAckB1gH/AYMBsQG+Af8BgwG3AcMB/wGBAbYBwQH/
        AWACZQHCAx0BKpQAAy0BRQNUAa4DIwEzAY0BzAHUAf8BiQGhAaoB/wFUAksBmAMKAQ0DUAGeAZYB6AHr
        Af8BXQFqAWwBtgMUARsEAAI6ATsBYAFUAYEBtQH/AUgBgQG0Af8BRAGBAcIB/wFIAYEBtAH/AUkBgQGx
        Af8BSQGBAbEB/wGvAf8B/QH/AaYB7wHyAf8BpQHtAfUB/wGuAeIB8AH/Aa4B4QHtAf8BpgHyAfEB/wF0
        AZEBkwHvAyYBOIwAAToCOQFhAVkBXQFeAbQBYwFtAXABxQFyAZABkwHmAVYCWQGpAWYBPwFBAfwBcwGE
        AYgB9wF7AZIBlwHoAVsBYAFjAb8BagFlAWoB8wFzAagBrQHzA0QBeAMHAQkEAAI6ATsBYAFjAYMBvAH/
        AWcBggGlAf8CggGDAf8BagGCAZ4B/wFdAYMBvQH/AV0BgwG4Af8BYgGCAbwB/wF8Aa8ByAH/AYEBlAGa
        Af8BnwHYAd4B/wGBAcAB2QH/AW4BeQGbAf4BUAJKAZgDCgEOiAADAwEEAVMCTQGjAYEBtgG/Af8BkQHV
        AdoB/wGiAegB6gH/AZMBywHRAf8BbgF1AXoB+AGDAZABkgH5AZkBgwGKAf4BkwG3AcAB/wGUAdkB4AH/
        AYIBtAG3AfUDQQFvAwEBAgQAAjoBOwFgAXIBhQG6Af8BgwGMAaEB/wO+Af8BigGRAaMB/wFuAYUBuQH/
        AXABhAG1Af8BbwGCAbQB/wF6AYQBpwH/AYgBhwGWAf8BiwGqAbsB/wF4AZEBvAH/AWUBawGYAf0BTQJK
        AZMDCAELhwABAQMxAU4BZwF2AXsB2AGBAcMB0AH/AWABaQFqAcMBVAJZAZ4BkALGAfIBcwGSAZcB+wFb
        AlYBvgFIAkUBfwFrAlIB6QEyAjMBTwE+Aj8BaQMYASIDAAEBBAACOgE7AWABfQGRAcQB/wGDAZoBvQH/
        AcMBwgHEAf8BiAGeAbwB/wF7AZUBxwH/AXwBlQHFAf8BfAGVAcUB/wGFAZcBwAH/AZIBmQGsAf8BiAGY
        AbIB/wF8AZUBxgH/AXEBdQGhAf0BTQJKAZMDCAELiAADPQFnAZABsgG6AfIBpAHcAesB/wM2AVgDGAEh
        AWoBiQGMAdABpAH9AfwB/wNLAYocAAE6AjsBYAGWAbAB1AH/AaYBvwHdAf8BngG+AecB/wGlAb4B3QH/
        AagBvgHbAf8BqAG+AdsB/wGoAb4B2wH/AaYBvgHcAf8BogG+AeIB/wGiAb4B4QH/AagBvgHbAf8BfQGG
        AaYB/gFPAkkBlgMJAQyIAAMHAQkBTgJMAZQBrwHiAfAB/wFyAWIBZAH2AWgBZgFnAfIBfgGpAbEB/gGc
        AfMB8gH/AxMBGhwAAjIBMwFQAW4BeAGKAdABdAGAAZEB1QGOAacByQH/AXgBhgGZAdwBcQF9AY4B0AFx
        AX0BjQHQAXEBfQGNAdABcgF/AZAB0gF/AYwBpQHrAXgBhgGbAeMBcQF9AY0B0AFfAWQBbwG3AycBOgMC
        AQOMAAFOAkoBkwF5AY8BkQHnAXYBigGPAdYBhgGmAa8B7gFuAX8BggHUAW0ChAHWAxEBFxwAAwoBDQMY
        ASIDIAEuAW4CZQH3AVICUAGkA0ABcQNAAXEDQAFxAUYCRQF9AVoCTwHMAz0BaQMYASIDFAEcAwMBBJAA
        AxQBHAMkATUDPAFkAUwCTQGKAyIBMgMeASsDAQECJwABAQMtAUYBVgJVAbYDVAGtA1QBrQNUAa0DVQGw
        AUsCSgGMAxIBGf8AkQABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAeABPwH/
        BQAB4AE/Af4FAAHAAR8B/gUAAcABHwH/BQABwAEAAYAFAAHAAQABgAUAAeABAAGABQAB+AEAAYAFAAHg
        AQABgAUAAcABAAGABQABgAEAAYAFAAHAAT8BgAUAAcABPwGABQAB4AE/AYABAQQAAeABPwHgAQ8EAAT/
        BAAL
</value>
  </data>
</root>